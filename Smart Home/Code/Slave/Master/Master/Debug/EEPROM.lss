
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002718  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000004f0  00800060  00002718  000027ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000027  00800550  00800550  00002c9c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002cf8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003e8  00000000  00000000  00002d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005b8d  00000000  00000000  0000311c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001657  00000000  00000000  00008ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000028a1  00000000  00000000  0000a300  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007a4  00000000  00000000  0000cba4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e3e  00000000  00000000  0000d348  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023c6  00000000  00000000  0000e186  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000310  00000000  00000000  0001054c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__ctors_end>
       4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      10:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      14:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      18:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      1c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      20:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      24:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      28:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      2c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      30:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      34:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      38:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      3c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      40:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      44:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      48:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      4c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      50:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      54:	a9 00       	.word	0x00a9	; ????
      56:	b1 00       	.word	0x00b1	; ????
      58:	ba 00       	.word	0x00ba	; ????
      5a:	c3 00       	.word	0x00c3	; ????
      5c:	cc 00       	.word	0x00cc	; ????
      5e:	d5 00       	.word	0x00d5	; ????
      60:	de 00       	.word	0x00de	; ????
      62:	e7 00       	.word	0x00e7	; ????
      64:	e8 01       	movw	r28, r16
      66:	ed 01       	movw	r28, r26
      68:	f2 01       	movw	r30, r4
      6a:	f7 01       	movw	r30, r14
      6c:	fc 01       	movw	r30, r24
      6e:	01 02       	muls	r16, r17
      70:	0a 02       	muls	r16, r26
      72:	06 02       	muls	r16, r22
      74:	de 05       	cpc	r29, r14
      76:	be 05       	cpc	r27, r14
      78:	f6 05       	cpc	r31, r6
      7a:	02 06       	cpc	r0, r18
      7c:	ea 05       	cpc	r30, r10
      7e:	be 05       	cpc	r27, r14
      80:	be 05       	cpc	r27, r14
      82:	be 05       	cpc	r27, r14
      84:	be 05       	cpc	r27, r14
      86:	be 05       	cpc	r27, r14
      88:	be 05       	cpc	r27, r14
      8a:	be 05       	cpc	r27, r14
      8c:	be 05       	cpc	r27, r14
      8e:	be 05       	cpc	r27, r14
      90:	be 05       	cpc	r27, r14
      92:	be 05       	cpc	r27, r14
      94:	be 05       	cpc	r27, r14
      96:	be 05       	cpc	r27, r14
      98:	be 05       	cpc	r27, r14
      9a:	be 05       	cpc	r27, r14
      9c:	be 05       	cpc	r27, r14
      9e:	be 05       	cpc	r27, r14
      a0:	be 05       	cpc	r27, r14
      a2:	be 05       	cpc	r27, r14
      a4:	d2 05       	cpc	r29, r2
      a6:	be 05       	cpc	r27, r14
      a8:	be 05       	cpc	r27, r14
      aa:	be 05       	cpc	r27, r14
      ac:	be 05       	cpc	r27, r14
      ae:	be 05       	cpc	r27, r14
      b0:	be 05       	cpc	r27, r14
      b2:	be 05       	cpc	r27, r14
      b4:	e4 05       	cpc	r30, r4
      b6:	be 05       	cpc	r27, r14
      b8:	fc 05       	cpc	r31, r12
      ba:	08 06       	cpc	r0, r24
      bc:	f0 05       	cpc	r31, r0
      be:	be 05       	cpc	r27, r14
      c0:	be 05       	cpc	r27, r14
      c2:	be 05       	cpc	r27, r14
      c4:	be 05       	cpc	r27, r14
      c6:	be 05       	cpc	r27, r14
      c8:	be 05       	cpc	r27, r14
      ca:	be 05       	cpc	r27, r14
      cc:	be 05       	cpc	r27, r14
      ce:	be 05       	cpc	r27, r14
      d0:	be 05       	cpc	r27, r14
      d2:	be 05       	cpc	r27, r14
      d4:	be 05       	cpc	r27, r14
      d6:	be 05       	cpc	r27, r14
      d8:	be 05       	cpc	r27, r14
      da:	be 05       	cpc	r27, r14
      dc:	be 05       	cpc	r27, r14
      de:	be 05       	cpc	r27, r14
      e0:	be 05       	cpc	r27, r14
      e2:	be 05       	cpc	r27, r14
      e4:	d8 05       	cpc	r29, r8
      e6:	71 0c       	add	r7, r1
      e8:	63 0c       	add	r6, r3
      ea:	da 0c       	add	r13, r10
      ec:	df 0c       	add	r13, r15
      ee:	e4 0c       	add	r14, r4
      f0:	e9 0c       	add	r14, r9
      f2:	ee 0c       	add	r14, r14
      f4:	f3 0c       	add	r15, r3

000000f6 <__ctors_end>:
      f6:	11 24       	eor	r1, r1
      f8:	1f be       	out	0x3f, r1	; 63
      fa:	cf e5       	ldi	r28, 0x5F	; 95
      fc:	d8 e0       	ldi	r29, 0x08	; 8
      fe:	de bf       	out	0x3e, r29	; 62
     100:	cd bf       	out	0x3d, r28	; 61

00000102 <__do_copy_data>:
     102:	15 e0       	ldi	r17, 0x05	; 5
     104:	a0 e6       	ldi	r26, 0x60	; 96
     106:	b0 e0       	ldi	r27, 0x00	; 0
     108:	e8 e1       	ldi	r30, 0x18	; 24
     10a:	f7 e2       	ldi	r31, 0x27	; 39
     10c:	02 c0       	rjmp	.+4      	; 0x112 <__do_copy_data+0x10>
     10e:	05 90       	lpm	r0, Z+
     110:	0d 92       	st	X+, r0
     112:	a0 35       	cpi	r26, 0x50	; 80
     114:	b1 07       	cpc	r27, r17
     116:	d9 f7       	brne	.-10     	; 0x10e <__do_copy_data+0xc>

00000118 <__do_clear_bss>:
     118:	25 e0       	ldi	r18, 0x05	; 5
     11a:	a0 e5       	ldi	r26, 0x50	; 80
     11c:	b5 e0       	ldi	r27, 0x05	; 5
     11e:	01 c0       	rjmp	.+2      	; 0x122 <.do_clear_bss_start>

00000120 <.do_clear_bss_loop>:
     120:	1d 92       	st	X+, r1

00000122 <.do_clear_bss_start>:
     122:	a7 37       	cpi	r26, 0x77	; 119
     124:	b2 07       	cpc	r27, r18
     126:	e1 f7       	brne	.-8      	; 0x120 <.do_clear_bss_loop>
     128:	0e 94 22 08 	call	0x1044	; 0x1044 <main>
     12c:	0c 94 8a 13 	jmp	0x2714	; 0x2714 <_exit>

00000130 <__bad_interrupt>:
     130:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000134 <ADC_vidInit>:
     134:	e8 2f       	mov	r30, r24
     136:	87 b1       	in	r24, 0x07	; 7
     138:	80 7e       	andi	r24, 0xE0	; 224
     13a:	87 b9       	out	0x07, r24	; 7
     13c:	8e 2f       	mov	r24, r30
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	88 30       	cpi	r24, 0x08	; 8
     142:	91 05       	cpc	r25, r1
     144:	08 f0       	brcs	.+2      	; 0x148 <ADC_vidInit+0x14>
     146:	4b c0       	rjmp	.+150    	; 0x1de <ADC_vidInit+0xaa>
     148:	fc 01       	movw	r30, r24
     14a:	e6 5d       	subi	r30, 0xD6	; 214
     14c:	ff 4f       	sbci	r31, 0xFF	; 255
     14e:	0c 94 9a 10 	jmp	0x2134	; 0x2134 <__tablejump2__>
     152:	40 e0       	ldi	r20, 0x00	; 0
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     15c:	87 b1       	in	r24, 0x07	; 7
     15e:	87 b9       	out	0x07, r24	; 7
     160:	3e c0       	rjmp	.+124    	; 0x1de <ADC_vidInit+0xaa>
     162:	40 e0       	ldi	r20, 0x00	; 0
     164:	61 e0       	ldi	r22, 0x01	; 1
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     16c:	87 b1       	in	r24, 0x07	; 7
     16e:	81 60       	ori	r24, 0x01	; 1
     170:	87 b9       	out	0x07, r24	; 7
     172:	35 c0       	rjmp	.+106    	; 0x1de <ADC_vidInit+0xaa>
     174:	40 e0       	ldi	r20, 0x00	; 0
     176:	62 e0       	ldi	r22, 0x02	; 2
     178:	80 e0       	ldi	r24, 0x00	; 0
     17a:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     17e:	87 b1       	in	r24, 0x07	; 7
     180:	82 60       	ori	r24, 0x02	; 2
     182:	87 b9       	out	0x07, r24	; 7
     184:	2c c0       	rjmp	.+88     	; 0x1de <ADC_vidInit+0xaa>
     186:	40 e0       	ldi	r20, 0x00	; 0
     188:	63 e0       	ldi	r22, 0x03	; 3
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     190:	87 b1       	in	r24, 0x07	; 7
     192:	83 60       	ori	r24, 0x03	; 3
     194:	87 b9       	out	0x07, r24	; 7
     196:	23 c0       	rjmp	.+70     	; 0x1de <ADC_vidInit+0xaa>
     198:	40 e0       	ldi	r20, 0x00	; 0
     19a:	64 e0       	ldi	r22, 0x04	; 4
     19c:	80 e0       	ldi	r24, 0x00	; 0
     19e:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     1a2:	87 b1       	in	r24, 0x07	; 7
     1a4:	84 60       	ori	r24, 0x04	; 4
     1a6:	87 b9       	out	0x07, r24	; 7
     1a8:	1a c0       	rjmp	.+52     	; 0x1de <ADC_vidInit+0xaa>
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	65 e0       	ldi	r22, 0x05	; 5
     1ae:	80 e0       	ldi	r24, 0x00	; 0
     1b0:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     1b4:	87 b1       	in	r24, 0x07	; 7
     1b6:	85 60       	ori	r24, 0x05	; 5
     1b8:	87 b9       	out	0x07, r24	; 7
     1ba:	11 c0       	rjmp	.+34     	; 0x1de <ADC_vidInit+0xaa>
     1bc:	40 e0       	ldi	r20, 0x00	; 0
     1be:	66 e0       	ldi	r22, 0x06	; 6
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     1c6:	87 b1       	in	r24, 0x07	; 7
     1c8:	86 60       	ori	r24, 0x06	; 6
     1ca:	87 b9       	out	0x07, r24	; 7
     1cc:	08 c0       	rjmp	.+16     	; 0x1de <ADC_vidInit+0xaa>
     1ce:	40 e0       	ldi	r20, 0x00	; 0
     1d0:	67 e0       	ldi	r22, 0x07	; 7
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     1d8:	87 b1       	in	r24, 0x07	; 7
     1da:	87 60       	ori	r24, 0x07	; 7
     1dc:	87 b9       	out	0x07, r24	; 7
     1de:	86 b1       	in	r24, 0x06	; 6
     1e0:	88 7f       	andi	r24, 0xF8	; 248
     1e2:	86 b9       	out	0x06, r24	; 6
     1e4:	86 b1       	in	r24, 0x06	; 6
     1e6:	83 60       	ori	r24, 0x03	; 3
     1e8:	86 b9       	out	0x06, r24	; 6
     1ea:	87 b1       	in	r24, 0x07	; 7
     1ec:	88 7f       	andi	r24, 0xF8	; 248
     1ee:	87 b9       	out	0x07, r24	; 7
     1f0:	87 b1       	in	r24, 0x07	; 7
     1f2:	80 6c       	ori	r24, 0xC0	; 192
     1f4:	87 b9       	out	0x07, r24	; 7
     1f6:	87 b1       	in	r24, 0x07	; 7
     1f8:	8f 7d       	andi	r24, 0xDF	; 223
     1fa:	87 b9       	out	0x07, r24	; 7
     1fc:	86 b1       	in	r24, 0x06	; 6
     1fe:	80 62       	ori	r24, 0x20	; 32
     200:	86 b9       	out	0x06, r24	; 6
     202:	86 b1       	in	r24, 0x06	; 6
     204:	80 68       	ori	r24, 0x80	; 128
     206:	86 b9       	out	0x06, r24	; 6
     208:	08 95       	ret

0000020a <ADC_u16Read>:
     20a:	86 b1       	in	r24, 0x06	; 6
     20c:	80 64       	ori	r24, 0x40	; 64
     20e:	86 b9       	out	0x06, r24	; 6
     210:	34 9b       	sbis	0x06, 4	; 6
     212:	fe cf       	rjmp	.-4      	; 0x210 <ADC_u16Read+0x6>
     214:	86 b1       	in	r24, 0x06	; 6
     216:	80 61       	ori	r24, 0x10	; 16
     218:	86 b9       	out	0x06, r24	; 6
     21a:	24 b1       	in	r18, 0x04	; 4
     21c:	35 b1       	in	r19, 0x05	; 5
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	93 2f       	mov	r25, r19
     222:	82 2b       	or	r24, r18
     224:	08 95       	ret

00000226 <Home_control_Menue>:
     226:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
     22a:	80 e7       	ldi	r24, 0x70	; 112
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	70 e0       	ldi	r23, 0x00	; 0
     236:	82 e0       	ldi	r24, 0x02	; 2
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     23e:	8c e7       	ldi	r24, 0x7C	; 124
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     246:	61 e0       	ldi	r22, 0x01	; 1
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	83 e0       	ldi	r24, 0x03	; 3
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     252:	8c e8       	ldi	r24, 0x8C	; 140
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	84 e0       	ldi	r24, 0x04	; 4
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     266:	8c e9       	ldi	r24, 0x9C	; 156
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     26e:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
     272:	80 93 51 05 	sts	0x0551, r24	; 0x800551 <u8choice>
     276:	82 33       	cpi	r24, 0x32	; 50
     278:	61 f0       	breq	.+24     	; 0x292 <Home_control_Menue+0x6c>
     27a:	18 f4       	brcc	.+6      	; 0x282 <Home_control_Menue+0x5c>
     27c:	81 33       	cpi	r24, 0x31	; 49
     27e:	31 f0       	breq	.+12     	; 0x28c <Home_control_Menue+0x66>
     280:	11 c0       	rjmp	.+34     	; 0x2a4 <Home_control_Menue+0x7e>
     282:	83 33       	cpi	r24, 0x33	; 51
     284:	49 f0       	breq	.+18     	; 0x298 <Home_control_Menue+0x72>
     286:	84 33       	cpi	r24, 0x34	; 52
     288:	51 f0       	breq	.+20     	; 0x29e <Home_control_Menue+0x78>
     28a:	0c c0       	rjmp	.+24     	; 0x2a4 <Home_control_Menue+0x7e>
     28c:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <open_door>
     290:	08 95       	ret
     292:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <Print>
     296:	08 95       	ret
     298:	0e 94 72 01 	call	0x2e4	; 0x2e4 <Air_condition>
     29c:	08 95       	ret
     29e:	0e 94 c4 0a 	call	0x1588	; 0x1588 <admin_menue>
     2a2:	08 95       	ret
     2a4:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
     2a8:	85 ea       	ldi	r24, 0xA5	; 165
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     2b0:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
     2b4:	08 95       	ret

000002b6 <back>:
     2b6:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     2ba:	80 33       	cpi	r24, 0x30	; 48
     2bc:	51 f4       	brne	.+20     	; 0x2d2 <back+0x1c>
     2be:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <Isadmin>
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	19 f4       	brne	.+6      	; 0x2cc <back+0x16>
     2c6:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
     2ca:	08 95       	ret
     2cc:	0e 94 14 0c 	call	0x1828	; 0x1828 <User_menue>
     2d0:	08 95       	ret
     2d2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
     2d6:	85 ea       	ldi	r24, 0xA5	; 165
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     2de:	0e 94 72 01 	call	0x2e4	; 0x2e4 <Air_condition>
     2e2:	08 95       	ret

000002e4 <Air_condition>:
     2e4:	0e 94 22 02 	call	0x444	; 0x444 <DC_Motor_vidInit>
     2e8:	0e 94 cc 04 	call	0x998	; 0x998 <LCD_vidInit>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	0e 94 91 05 	call	0xb22	; 0xb22 <LM35_vidInit>
     2f2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
     2f6:	d1 e0       	ldi	r29, 0x01	; 1
     2f8:	01 c0       	rjmp	.+2      	; 0x2fc <Air_condition+0x18>
     2fa:	dc 2f       	mov	r29, r28
     2fc:	61 e0       	ldi	r22, 0x01	; 1
     2fe:	82 e0       	ldi	r24, 0x02	; 2
     300:	0e 94 19 04 	call	0x832	; 0x832 <KPD_u8GetPressedKey>
     304:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
     308:	8f 3f       	cpi	r24, 0xFF	; 255
     30a:	09 f0       	breq	.+2      	; 0x30e <Air_condition+0x2a>
     30c:	4f c0       	rjmp	.+158    	; 0x3ac <Air_condition+0xc8>
     30e:	0e 94 94 05 	call	0xb28	; 0xb28 <LM35_u8Read>
     312:	c8 2f       	mov	r28, r24
     314:	d8 17       	cp	r29, r24
     316:	91 f3       	breq	.-28     	; 0x2fc <Air_condition+0x18>
     318:	61 e0       	ldi	r22, 0x01	; 1
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     320:	82 eb       	ldi	r24, 0xB2	; 178
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     328:	6c 2f       	mov	r22, r28
     32a:	70 e0       	ldi	r23, 0x00	; 0
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 39 05 	call	0xa72	; 0xa72 <LCD_vidDisplayNumber>
     334:	80 ec       	ldi	r24, 0xC0	; 192
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     33c:	cc 31       	cpi	r28, 0x1C	; 28
     33e:	d0 f0       	brcs	.+52     	; 0x374 <Air_condition+0x90>
     340:	62 e0       	ldi	r22, 0x02	; 2
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	83 e0       	ldi	r24, 0x03	; 3
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 89 05 	call	0xb12	; 0xb12 <LED_vidTurnOn>
     34c:	61 e0       	ldi	r22, 0x01	; 1
     34e:	82 e0       	ldi	r24, 0x02	; 2
     350:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     354:	82 ec       	ldi	r24, 0xC2	; 194
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     35c:	0e 94 2d 02 	call	0x45a	; 0x45a <DC_Motor_vidTurnOn>
     360:	61 e0       	ldi	r22, 0x01	; 1
     362:	83 e0       	ldi	r24, 0x03	; 3
     364:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     368:	8a ec       	ldi	r24, 0xCA	; 202
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     370:	dc 2f       	mov	r29, r28
     372:	c4 cf       	rjmp	.-120    	; 0x2fc <Air_condition+0x18>
     374:	c6 31       	cpi	r28, 0x16	; 22
     376:	08 f6       	brcc	.-126    	; 0x2fa <Air_condition+0x16>
     378:	62 e0       	ldi	r22, 0x02	; 2
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	83 e0       	ldi	r24, 0x03	; 3
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
     384:	61 e0       	ldi	r22, 0x01	; 1
     386:	82 e0       	ldi	r24, 0x02	; 2
     388:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     38c:	8a ed       	ldi	r24, 0xDA	; 218
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     394:	0e 94 38 02 	call	0x470	; 0x470 <DC_Motor_vidTurnOff>
     398:	61 e0       	ldi	r22, 0x01	; 1
     39a:	83 e0       	ldi	r24, 0x03	; 3
     39c:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
     3a0:	8a ec       	ldi	r24, 0xCA	; 202
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     3a8:	dc 2f       	mov	r29, r28
     3aa:	a8 cf       	rjmp	.-176    	; 0x2fc <Air_condition+0x18>
     3ac:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <back>
     3b0:	a5 cf       	rjmp	.-182    	; 0x2fc <Air_condition+0x18>

000003b2 <control_rooms>:
     3b2:	cf 93       	push	r28
     3b4:	c8 2f       	mov	r28, r24
     3b6:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
     3ba:	8c 2f       	mov	r24, r28
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	fc 01       	movw	r30, r24
     3c0:	33 97       	sbiw	r30, 0x03	; 3
     3c2:	e8 30       	cpi	r30, 0x08	; 8
     3c4:	f1 05       	cpc	r31, r1
     3c6:	30 f5       	brcc	.+76     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3c8:	ee 5c       	subi	r30, 0xCE	; 206
     3ca:	ff 4f       	sbci	r31, 0xFF	; 255
     3cc:	0c 94 9a 10 	jmp	0x2134	; 0x2134 <__tablejump2__>
     3d0:	83 ee       	ldi	r24, 0xE3	; 227
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     3d8:	1d c0       	rjmp	.+58     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3da:	81 ef       	ldi	r24, 0xF1	; 241
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     3e2:	18 c0       	rjmp	.+48     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3e4:	8f ef       	ldi	r24, 0xFF	; 255
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     3ec:	13 c0       	rjmp	.+38     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3ee:	8d e0       	ldi	r24, 0x0D	; 13
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     3f6:	0e c0       	rjmp	.+28     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3f8:	8b e1       	ldi	r24, 0x1B	; 27
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     400:	09 c0       	rjmp	.+18     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     402:	89 e2       	ldi	r24, 0x29	; 41
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     40a:	04 c0       	rjmp	.+8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     40c:	87 e3       	ldi	r24, 0x37	; 55
     40e:	91 e0       	ldi	r25, 0x01	; 1
     410:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
     414:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     418:	80 53       	subi	r24, 0x30	; 48
     41a:	83 30       	cpi	r24, 0x03	; 3
     41c:	60 f6       	brcc	.-104    	; 0x3b6 <control_rooms+0x4>
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <u8GetKeyPressed>:
     422:	61 e0       	ldi	r22, 0x01	; 1
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	0e 94 19 04 	call	0x832	; 0x832 <KPD_u8GetPressedKey>
     42a:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     42e:	8f e4       	ldi	r24, 0x4F	; 79
     430:	93 ec       	ldi	r25, 0xC3	; 195
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	f1 f7       	brne	.-4      	; 0x432 <u8GetKeyPressed+0x10>
     436:	00 c0       	rjmp	.+0      	; 0x438 <u8GetKeyPressed+0x16>
     438:	00 00       	nop
     43a:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     43e:	8f 3f       	cpi	r24, 0xFF	; 255
     440:	81 f3       	breq	.-32     	; 0x422 <u8GetKeyPressed>
     442:	08 95       	ret

00000444 <DC_Motor_vidInit>:
     444:	41 e0       	ldi	r20, 0x01	; 1
     446:	66 e0       	ldi	r22, 0x06	; 6
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     44e:	41 e0       	ldi	r20, 0x01	; 1
     450:	67 e0       	ldi	r22, 0x07	; 7
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     458:	08 95       	ret

0000045a <DC_Motor_vidTurnOn>:
     45a:	41 e0       	ldi	r20, 0x01	; 1
     45c:	66 e0       	ldi	r22, 0x06	; 6
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     464:	40 e0       	ldi	r20, 0x00	; 0
     466:	67 e0       	ldi	r22, 0x07	; 7
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     46e:	08 95       	ret

00000470 <DC_Motor_vidTurnOff>:
     470:	40 e0       	ldi	r20, 0x00	; 0
     472:	66 e0       	ldi	r22, 0x06	; 6
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     47a:	40 e0       	ldi	r20, 0x00	; 0
     47c:	67 e0       	ldi	r22, 0x07	; 7
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     484:	08 95       	ret

00000486 <DIO_vidSetPinMode>:
     486:	81 30       	cpi	r24, 0x01	; 1
     488:	01 f1       	breq	.+64     	; 0x4ca <DIO_vidSetPinMode+0x44>
     48a:	30 f0       	brcs	.+12     	; 0x498 <DIO_vidSetPinMode+0x12>
     48c:	82 30       	cpi	r24, 0x02	; 2
     48e:	b1 f1       	breq	.+108    	; 0x4fc <DIO_vidSetPinMode+0x76>
     490:	83 30       	cpi	r24, 0x03	; 3
     492:	09 f4       	brne	.+2      	; 0x496 <DIO_vidSetPinMode+0x10>
     494:	4c c0       	rjmp	.+152    	; 0x52e <DIO_vidSetPinMode+0xa8>
     496:	08 95       	ret
     498:	41 30       	cpi	r20, 0x01	; 1
     49a:	59 f4       	brne	.+22     	; 0x4b2 <DIO_vidSetPinMode+0x2c>
     49c:	2a b3       	in	r18, 0x1a	; 26
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <DIO_vidSetPinMode+0x22>
     4a4:	88 0f       	add	r24, r24
     4a6:	99 1f       	adc	r25, r25
     4a8:	6a 95       	dec	r22
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <DIO_vidSetPinMode+0x1e>
     4ac:	82 2b       	or	r24, r18
     4ae:	8a bb       	out	0x1a, r24	; 26
     4b0:	08 95       	ret
     4b2:	2a b3       	in	r18, 0x1a	; 26
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	02 c0       	rjmp	.+4      	; 0x4be <DIO_vidSetPinMode+0x38>
     4ba:	88 0f       	add	r24, r24
     4bc:	99 1f       	adc	r25, r25
     4be:	6a 95       	dec	r22
     4c0:	e2 f7       	brpl	.-8      	; 0x4ba <DIO_vidSetPinMode+0x34>
     4c2:	80 95       	com	r24
     4c4:	82 23       	and	r24, r18
     4c6:	8a bb       	out	0x1a, r24	; 26
     4c8:	08 95       	ret
     4ca:	41 30       	cpi	r20, 0x01	; 1
     4cc:	59 f4       	brne	.+22     	; 0x4e4 <DIO_vidSetPinMode+0x5e>
     4ce:	27 b3       	in	r18, 0x17	; 23
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	02 c0       	rjmp	.+4      	; 0x4da <DIO_vidSetPinMode+0x54>
     4d6:	88 0f       	add	r24, r24
     4d8:	99 1f       	adc	r25, r25
     4da:	6a 95       	dec	r22
     4dc:	e2 f7       	brpl	.-8      	; 0x4d6 <DIO_vidSetPinMode+0x50>
     4de:	82 2b       	or	r24, r18
     4e0:	87 bb       	out	0x17, r24	; 23
     4e2:	08 95       	ret
     4e4:	27 b3       	in	r18, 0x17	; 23
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <DIO_vidSetPinMode+0x6a>
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	6a 95       	dec	r22
     4f2:	e2 f7       	brpl	.-8      	; 0x4ec <DIO_vidSetPinMode+0x66>
     4f4:	80 95       	com	r24
     4f6:	82 23       	and	r24, r18
     4f8:	87 bb       	out	0x17, r24	; 23
     4fa:	08 95       	ret
     4fc:	41 30       	cpi	r20, 0x01	; 1
     4fe:	59 f4       	brne	.+22     	; 0x516 <DIO_vidSetPinMode+0x90>
     500:	24 b3       	in	r18, 0x14	; 20
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_vidSetPinMode+0x86>
     508:	88 0f       	add	r24, r24
     50a:	99 1f       	adc	r25, r25
     50c:	6a 95       	dec	r22
     50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_vidSetPinMode+0x82>
     510:	82 2b       	or	r24, r18
     512:	84 bb       	out	0x14, r24	; 20
     514:	08 95       	ret
     516:	24 b3       	in	r18, 0x14	; 20
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	02 c0       	rjmp	.+4      	; 0x522 <DIO_vidSetPinMode+0x9c>
     51e:	88 0f       	add	r24, r24
     520:	99 1f       	adc	r25, r25
     522:	6a 95       	dec	r22
     524:	e2 f7       	brpl	.-8      	; 0x51e <DIO_vidSetPinMode+0x98>
     526:	80 95       	com	r24
     528:	82 23       	and	r24, r18
     52a:	84 bb       	out	0x14, r24	; 20
     52c:	08 95       	ret
     52e:	41 30       	cpi	r20, 0x01	; 1
     530:	59 f4       	brne	.+22     	; 0x548 <DIO_vidSetPinMode+0xc2>
     532:	21 b3       	in	r18, 0x11	; 17
     534:	81 e0       	ldi	r24, 0x01	; 1
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	02 c0       	rjmp	.+4      	; 0x53e <DIO_vidSetPinMode+0xb8>
     53a:	88 0f       	add	r24, r24
     53c:	99 1f       	adc	r25, r25
     53e:	6a 95       	dec	r22
     540:	e2 f7       	brpl	.-8      	; 0x53a <DIO_vidSetPinMode+0xb4>
     542:	82 2b       	or	r24, r18
     544:	81 bb       	out	0x11, r24	; 17
     546:	08 95       	ret
     548:	21 b3       	in	r18, 0x11	; 17
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	02 c0       	rjmp	.+4      	; 0x554 <DIO_vidSetPinMode+0xce>
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	6a 95       	dec	r22
     556:	e2 f7       	brpl	.-8      	; 0x550 <DIO_vidSetPinMode+0xca>
     558:	80 95       	com	r24
     55a:	82 23       	and	r24, r18
     55c:	81 bb       	out	0x11, r24	; 17
     55e:	08 95       	ret

00000560 <DIO_vidWritePin>:
     560:	81 30       	cpi	r24, 0x01	; 1
     562:	01 f1       	breq	.+64     	; 0x5a4 <DIO_vidWritePin+0x44>
     564:	30 f0       	brcs	.+12     	; 0x572 <DIO_vidWritePin+0x12>
     566:	82 30       	cpi	r24, 0x02	; 2
     568:	b1 f1       	breq	.+108    	; 0x5d6 <DIO_vidWritePin+0x76>
     56a:	83 30       	cpi	r24, 0x03	; 3
     56c:	09 f4       	brne	.+2      	; 0x570 <DIO_vidWritePin+0x10>
     56e:	4c c0       	rjmp	.+152    	; 0x608 <DIO_vidWritePin+0xa8>
     570:	08 95       	ret
     572:	41 30       	cpi	r20, 0x01	; 1
     574:	59 f4       	brne	.+22     	; 0x58c <DIO_vidWritePin+0x2c>
     576:	2b b3       	in	r18, 0x1b	; 27
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	02 c0       	rjmp	.+4      	; 0x582 <DIO_vidWritePin+0x22>
     57e:	88 0f       	add	r24, r24
     580:	99 1f       	adc	r25, r25
     582:	6a 95       	dec	r22
     584:	e2 f7       	brpl	.-8      	; 0x57e <DIO_vidWritePin+0x1e>
     586:	82 2b       	or	r24, r18
     588:	8b bb       	out	0x1b, r24	; 27
     58a:	08 95       	ret
     58c:	2b b3       	in	r18, 0x1b	; 27
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	02 c0       	rjmp	.+4      	; 0x598 <DIO_vidWritePin+0x38>
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	6a 95       	dec	r22
     59a:	e2 f7       	brpl	.-8      	; 0x594 <DIO_vidWritePin+0x34>
     59c:	80 95       	com	r24
     59e:	82 23       	and	r24, r18
     5a0:	8b bb       	out	0x1b, r24	; 27
     5a2:	08 95       	ret
     5a4:	41 30       	cpi	r20, 0x01	; 1
     5a6:	59 f4       	brne	.+22     	; 0x5be <DIO_vidWritePin+0x5e>
     5a8:	28 b3       	in	r18, 0x18	; 24
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <DIO_vidWritePin+0x54>
     5b0:	88 0f       	add	r24, r24
     5b2:	99 1f       	adc	r25, r25
     5b4:	6a 95       	dec	r22
     5b6:	e2 f7       	brpl	.-8      	; 0x5b0 <DIO_vidWritePin+0x50>
     5b8:	82 2b       	or	r24, r18
     5ba:	88 bb       	out	0x18, r24	; 24
     5bc:	08 95       	ret
     5be:	28 b3       	in	r18, 0x18	; 24
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	02 c0       	rjmp	.+4      	; 0x5ca <DIO_vidWritePin+0x6a>
     5c6:	88 0f       	add	r24, r24
     5c8:	99 1f       	adc	r25, r25
     5ca:	6a 95       	dec	r22
     5cc:	e2 f7       	brpl	.-8      	; 0x5c6 <DIO_vidWritePin+0x66>
     5ce:	80 95       	com	r24
     5d0:	82 23       	and	r24, r18
     5d2:	88 bb       	out	0x18, r24	; 24
     5d4:	08 95       	ret
     5d6:	41 30       	cpi	r20, 0x01	; 1
     5d8:	59 f4       	brne	.+22     	; 0x5f0 <DIO_vidWritePin+0x90>
     5da:	25 b3       	in	r18, 0x15	; 21
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_vidWritePin+0x86>
     5e2:	88 0f       	add	r24, r24
     5e4:	99 1f       	adc	r25, r25
     5e6:	6a 95       	dec	r22
     5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_vidWritePin+0x82>
     5ea:	82 2b       	or	r24, r18
     5ec:	85 bb       	out	0x15, r24	; 21
     5ee:	08 95       	ret
     5f0:	25 b3       	in	r18, 0x15	; 21
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	02 c0       	rjmp	.+4      	; 0x5fc <DIO_vidWritePin+0x9c>
     5f8:	88 0f       	add	r24, r24
     5fa:	99 1f       	adc	r25, r25
     5fc:	6a 95       	dec	r22
     5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <DIO_vidWritePin+0x98>
     600:	80 95       	com	r24
     602:	82 23       	and	r24, r18
     604:	85 bb       	out	0x15, r24	; 21
     606:	08 95       	ret
     608:	41 30       	cpi	r20, 0x01	; 1
     60a:	59 f4       	brne	.+22     	; 0x622 <DIO_vidWritePin+0xc2>
     60c:	22 b3       	in	r18, 0x12	; 18
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	02 c0       	rjmp	.+4      	; 0x618 <DIO_vidWritePin+0xb8>
     614:	88 0f       	add	r24, r24
     616:	99 1f       	adc	r25, r25
     618:	6a 95       	dec	r22
     61a:	e2 f7       	brpl	.-8      	; 0x614 <DIO_vidWritePin+0xb4>
     61c:	82 2b       	or	r24, r18
     61e:	82 bb       	out	0x12, r24	; 18
     620:	08 95       	ret
     622:	22 b3       	in	r18, 0x12	; 18
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_vidWritePin+0xce>
     62a:	88 0f       	add	r24, r24
     62c:	99 1f       	adc	r25, r25
     62e:	6a 95       	dec	r22
     630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_vidWritePin+0xca>
     632:	80 95       	com	r24
     634:	82 23       	and	r24, r18
     636:	82 bb       	out	0x12, r24	; 18
     638:	08 95       	ret

0000063a <DIO_enuReadPin>:
     63a:	81 30       	cpi	r24, 0x01	; 1
     63c:	e1 f0       	breq	.+56     	; 0x676 <DIO_enuReadPin+0x3c>
     63e:	30 f0       	brcs	.+12     	; 0x64c <DIO_enuReadPin+0x12>
     640:	82 30       	cpi	r24, 0x02	; 2
     642:	71 f1       	breq	.+92     	; 0x6a0 <DIO_enuReadPin+0x66>
     644:	83 30       	cpi	r24, 0x03	; 3
     646:	09 f4       	brne	.+2      	; 0x64a <DIO_enuReadPin+0x10>
     648:	40 c0       	rjmp	.+128    	; 0x6ca <DIO_enuReadPin+0x90>
     64a:	53 c0       	rjmp	.+166    	; 0x6f2 <DIO_enuReadPin+0xb8>
     64c:	49 b3       	in	r20, 0x19	; 25
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	9c 01       	movw	r18, r24
     654:	06 2e       	mov	r0, r22
     656:	02 c0       	rjmp	.+4      	; 0x65c <DIO_enuReadPin+0x22>
     658:	22 0f       	add	r18, r18
     65a:	33 1f       	adc	r19, r19
     65c:	0a 94       	dec	r0
     65e:	e2 f7       	brpl	.-8      	; 0x658 <DIO_enuReadPin+0x1e>
     660:	84 2f       	mov	r24, r20
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	82 23       	and	r24, r18
     666:	93 23       	and	r25, r19
     668:	02 c0       	rjmp	.+4      	; 0x66e <DIO_enuReadPin+0x34>
     66a:	95 95       	asr	r25
     66c:	87 95       	ror	r24
     66e:	6a 95       	dec	r22
     670:	e2 f7       	brpl	.-8      	; 0x66a <DIO_enuReadPin+0x30>
     672:	98 2f       	mov	r25, r24
     674:	3e c0       	rjmp	.+124    	; 0x6f2 <DIO_enuReadPin+0xb8>
     676:	46 b3       	in	r20, 0x16	; 22
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	9c 01       	movw	r18, r24
     67e:	06 2e       	mov	r0, r22
     680:	02 c0       	rjmp	.+4      	; 0x686 <DIO_enuReadPin+0x4c>
     682:	22 0f       	add	r18, r18
     684:	33 1f       	adc	r19, r19
     686:	0a 94       	dec	r0
     688:	e2 f7       	brpl	.-8      	; 0x682 <DIO_enuReadPin+0x48>
     68a:	84 2f       	mov	r24, r20
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	82 23       	and	r24, r18
     690:	93 23       	and	r25, r19
     692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_enuReadPin+0x5e>
     694:	95 95       	asr	r25
     696:	87 95       	ror	r24
     698:	6a 95       	dec	r22
     69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_enuReadPin+0x5a>
     69c:	98 2f       	mov	r25, r24
     69e:	29 c0       	rjmp	.+82     	; 0x6f2 <DIO_enuReadPin+0xb8>
     6a0:	43 b3       	in	r20, 0x13	; 19
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	9c 01       	movw	r18, r24
     6a8:	06 2e       	mov	r0, r22
     6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <DIO_enuReadPin+0x76>
     6ac:	22 0f       	add	r18, r18
     6ae:	33 1f       	adc	r19, r19
     6b0:	0a 94       	dec	r0
     6b2:	e2 f7       	brpl	.-8      	; 0x6ac <DIO_enuReadPin+0x72>
     6b4:	84 2f       	mov	r24, r20
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	82 23       	and	r24, r18
     6ba:	93 23       	and	r25, r19
     6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <DIO_enuReadPin+0x88>
     6be:	95 95       	asr	r25
     6c0:	87 95       	ror	r24
     6c2:	6a 95       	dec	r22
     6c4:	e2 f7       	brpl	.-8      	; 0x6be <DIO_enuReadPin+0x84>
     6c6:	98 2f       	mov	r25, r24
     6c8:	14 c0       	rjmp	.+40     	; 0x6f2 <DIO_enuReadPin+0xb8>
     6ca:	40 b3       	in	r20, 0x10	; 16
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	9c 01       	movw	r18, r24
     6d2:	06 2e       	mov	r0, r22
     6d4:	02 c0       	rjmp	.+4      	; 0x6da <DIO_enuReadPin+0xa0>
     6d6:	22 0f       	add	r18, r18
     6d8:	33 1f       	adc	r19, r19
     6da:	0a 94       	dec	r0
     6dc:	e2 f7       	brpl	.-8      	; 0x6d6 <DIO_enuReadPin+0x9c>
     6de:	84 2f       	mov	r24, r20
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	82 23       	and	r24, r18
     6e4:	93 23       	and	r25, r19
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_enuReadPin+0xb2>
     6e8:	95 95       	asr	r25
     6ea:	87 95       	ror	r24
     6ec:	6a 95       	dec	r22
     6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_enuReadPin+0xae>
     6f0:	98 2f       	mov	r25, r24
     6f2:	89 2f       	mov	r24, r25
     6f4:	08 95       	ret

000006f6 <DIO_vidSetLowNibbleMode>:
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	18 2f       	mov	r17, r24
     6fe:	d6 2f       	mov	r29, r22
     700:	c0 e0       	ldi	r28, 0x00	; 0
     702:	06 c0       	rjmp	.+12     	; 0x710 <DIO_vidSetLowNibbleMode+0x1a>
     704:	4d 2f       	mov	r20, r29
     706:	6c 2f       	mov	r22, r28
     708:	81 2f       	mov	r24, r17
     70a:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     70e:	cf 5f       	subi	r28, 0xFF	; 255
     710:	c4 30       	cpi	r28, 0x04	; 4
     712:	c0 f3       	brcs	.-16     	; 0x704 <DIO_vidSetLowNibbleMode+0xe>
     714:	df 91       	pop	r29
     716:	cf 91       	pop	r28
     718:	1f 91       	pop	r17
     71a:	08 95       	ret

0000071c <DIO_vidWriteLowNibble>:
     71c:	6f 70       	andi	r22, 0x0F	; 15
     71e:	81 30       	cpi	r24, 0x01	; 1
     720:	69 f0       	breq	.+26     	; 0x73c <DIO_vidWriteLowNibble+0x20>
     722:	28 f0       	brcs	.+10     	; 0x72e <DIO_vidWriteLowNibble+0x12>
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	89 f0       	breq	.+34     	; 0x74a <DIO_vidWriteLowNibble+0x2e>
     728:	83 30       	cpi	r24, 0x03	; 3
     72a:	b1 f0       	breq	.+44     	; 0x758 <DIO_vidWriteLowNibble+0x3c>
     72c:	08 95       	ret
     72e:	8b b3       	in	r24, 0x1b	; 27
     730:	80 7f       	andi	r24, 0xF0	; 240
     732:	8b bb       	out	0x1b, r24	; 27
     734:	8b b3       	in	r24, 0x1b	; 27
     736:	68 2b       	or	r22, r24
     738:	6b bb       	out	0x1b, r22	; 27
     73a:	08 95       	ret
     73c:	88 b3       	in	r24, 0x18	; 24
     73e:	80 7f       	andi	r24, 0xF0	; 240
     740:	88 bb       	out	0x18, r24	; 24
     742:	88 b3       	in	r24, 0x18	; 24
     744:	68 2b       	or	r22, r24
     746:	68 bb       	out	0x18, r22	; 24
     748:	08 95       	ret
     74a:	85 b3       	in	r24, 0x15	; 21
     74c:	80 7f       	andi	r24, 0xF0	; 240
     74e:	85 bb       	out	0x15, r24	; 21
     750:	85 b3       	in	r24, 0x15	; 21
     752:	68 2b       	or	r22, r24
     754:	65 bb       	out	0x15, r22	; 21
     756:	08 95       	ret
     758:	82 b3       	in	r24, 0x12	; 18
     75a:	80 7f       	andi	r24, 0xF0	; 240
     75c:	82 bb       	out	0x12, r24	; 18
     75e:	82 b3       	in	r24, 0x12	; 18
     760:	68 2b       	or	r22, r24
     762:	62 bb       	out	0x12, r22	; 18
     764:	08 95       	ret

00000766 <DIO_vidSetHighNibbleMode>:
     766:	1f 93       	push	r17
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	18 2f       	mov	r17, r24
     76e:	d6 2f       	mov	r29, r22
     770:	c4 e0       	ldi	r28, 0x04	; 4
     772:	06 c0       	rjmp	.+12     	; 0x780 <DIO_vidSetHighNibbleMode+0x1a>
     774:	4d 2f       	mov	r20, r29
     776:	6c 2f       	mov	r22, r28
     778:	81 2f       	mov	r24, r17
     77a:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     77e:	cf 5f       	subi	r28, 0xFF	; 255
     780:	c8 30       	cpi	r28, 0x08	; 8
     782:	c0 f3       	brcs	.-16     	; 0x774 <DIO_vidSetHighNibbleMode+0xe>
     784:	df 91       	pop	r29
     786:	cf 91       	pop	r28
     788:	1f 91       	pop	r17
     78a:	08 95       	ret

0000078c <DIO_vidWriteHighNibble>:
     78c:	60 7f       	andi	r22, 0xF0	; 240
     78e:	81 30       	cpi	r24, 0x01	; 1
     790:	69 f0       	breq	.+26     	; 0x7ac <DIO_vidWriteHighNibble+0x20>
     792:	28 f0       	brcs	.+10     	; 0x79e <DIO_vidWriteHighNibble+0x12>
     794:	82 30       	cpi	r24, 0x02	; 2
     796:	89 f0       	breq	.+34     	; 0x7ba <DIO_vidWriteHighNibble+0x2e>
     798:	83 30       	cpi	r24, 0x03	; 3
     79a:	b1 f0       	breq	.+44     	; 0x7c8 <DIO_vidWriteHighNibble+0x3c>
     79c:	08 95       	ret
     79e:	8b b3       	in	r24, 0x1b	; 27
     7a0:	8f 70       	andi	r24, 0x0F	; 15
     7a2:	8b bb       	out	0x1b, r24	; 27
     7a4:	8b b3       	in	r24, 0x1b	; 27
     7a6:	68 2b       	or	r22, r24
     7a8:	6b bb       	out	0x1b, r22	; 27
     7aa:	08 95       	ret
     7ac:	88 b3       	in	r24, 0x18	; 24
     7ae:	8f 70       	andi	r24, 0x0F	; 15
     7b0:	88 bb       	out	0x18, r24	; 24
     7b2:	88 b3       	in	r24, 0x18	; 24
     7b4:	68 2b       	or	r22, r24
     7b6:	68 bb       	out	0x18, r22	; 24
     7b8:	08 95       	ret
     7ba:	85 b3       	in	r24, 0x15	; 21
     7bc:	8f 70       	andi	r24, 0x0F	; 15
     7be:	85 bb       	out	0x15, r24	; 21
     7c0:	85 b3       	in	r24, 0x15	; 21
     7c2:	68 2b       	or	r22, r24
     7c4:	65 bb       	out	0x15, r22	; 21
     7c6:	08 95       	ret
     7c8:	82 b3       	in	r24, 0x12	; 18
     7ca:	8f 70       	andi	r24, 0x0F	; 15
     7cc:	82 bb       	out	0x12, r24	; 18
     7ce:	82 b3       	in	r24, 0x12	; 18
     7d0:	68 2b       	or	r22, r24
     7d2:	62 bb       	out	0x12, r22	; 18
     7d4:	08 95       	ret

000007d6 <EEPROM_vidWrite>:
     7d6:	8e bb       	out	0x1e, r24	; 30
     7d8:	9f bb       	out	0x1f, r25	; 31
     7da:	6d bb       	out	0x1d, r22	; 29
     7dc:	84 e0       	ldi	r24, 0x04	; 4
     7de:	8c bb       	out	0x1c, r24	; 28
     7e0:	8c b3       	in	r24, 0x1c	; 28
     7e2:	82 60       	ori	r24, 0x02	; 2
     7e4:	8c bb       	out	0x1c, r24	; 28
     7e6:	e1 99       	sbic	0x1c, 1	; 28
     7e8:	fe cf       	rjmp	.-4      	; 0x7e6 <EEPROM_vidWrite+0x10>
     7ea:	08 95       	ret

000007ec <EEPROM_u8Read>:
     7ec:	8e bb       	out	0x1e, r24	; 30
     7ee:	9f bb       	out	0x1f, r25	; 31
     7f0:	8c b3       	in	r24, 0x1c	; 28
     7f2:	81 60       	ori	r24, 0x01	; 1
     7f4:	8c bb       	out	0x1c, r24	; 28
     7f6:	8d b3       	in	r24, 0x1d	; 29
     7f8:	08 95       	ret

000007fa <KPD_vidInit>:
     7fa:	cf 93       	push	r28
     7fc:	c8 2f       	mov	r28, r24
     7fe:	61 11       	cpse	r22, r1
     800:	0b c0       	rjmp	.+22     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     802:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <DIO_vidSetLowNibbleMode>
     806:	61 e0       	ldi	r22, 0x01	; 1
     808:	8c 2f       	mov	r24, r28
     80a:	0e 94 b3 03 	call	0x766	; 0x766 <DIO_vidSetHighNibbleMode>
     80e:	6f e0       	ldi	r22, 0x0F	; 15
     810:	8c 2f       	mov	r24, r28
     812:	0e 94 8e 03 	call	0x71c	; 0x71c <DIO_vidWriteLowNibble>
     816:	0b c0       	rjmp	.+22     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     818:	60 e0       	ldi	r22, 0x00	; 0
     81a:	0e 94 b3 03 	call	0x766	; 0x766 <DIO_vidSetHighNibbleMode>
     81e:	61 e0       	ldi	r22, 0x01	; 1
     820:	8c 2f       	mov	r24, r28
     822:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <DIO_vidSetLowNibbleMode>
     826:	60 ef       	ldi	r22, 0xF0	; 240
     828:	8c 2f       	mov	r24, r28
     82a:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
     82e:	cf 91       	pop	r28
     830:	08 95       	ret

00000832 <KPD_u8GetPressedKey>:
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	cd b7       	in	r28, 0x3d	; 61
     840:	de b7       	in	r29, 0x3e	; 62
     842:	60 97       	sbiw	r28, 0x10	; 16
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	f8 94       	cli
     848:	de bf       	out	0x3e, r29	; 62
     84a:	0f be       	out	0x3f, r0	; 63
     84c:	cd bf       	out	0x3d, r28	; 61
     84e:	f8 2e       	mov	r15, r24
     850:	80 e1       	ldi	r24, 0x10	; 16
     852:	e0 e6       	ldi	r30, 0x60	; 96
     854:	f0 e0       	ldi	r31, 0x00	; 0
     856:	de 01       	movw	r26, r28
     858:	11 96       	adiw	r26, 0x01	; 1
     85a:	01 90       	ld	r0, Z+
     85c:	0d 92       	st	X+, r0
     85e:	8a 95       	dec	r24
     860:	e1 f7       	brne	.-8      	; 0x85a <KPD_u8GetPressedKey+0x28>
     862:	66 23       	and	r22, r22
     864:	61 f1       	breq	.+88     	; 0x8be <__stack+0x5f>
     866:	e1 2c       	mov	r14, r1
     868:	59 c0       	rjmp	.+178    	; 0x91c <__stack+0xbd>
     86a:	60 ef       	ldi	r22, 0xF0	; 240
     86c:	8f 2d       	mov	r24, r15
     86e:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
     872:	40 e0       	ldi	r20, 0x00	; 0
     874:	64 e0       	ldi	r22, 0x04	; 4
     876:	6e 0d       	add	r22, r14
     878:	8f 2d       	mov	r24, r15
     87a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     87e:	00 e0       	ldi	r16, 0x00	; 0
     880:	08 c0       	rjmp	.+16     	; 0x892 <__stack+0x33>
     882:	60 2f       	mov	r22, r16
     884:	8f 2d       	mov	r24, r15
     886:	0e 94 1d 03 	call	0x63a	; 0x63a <DIO_enuReadPin>
     88a:	18 2f       	mov	r17, r24
     88c:	88 23       	and	r24, r24
     88e:	19 f0       	breq	.+6      	; 0x896 <__stack+0x37>
     890:	0f 5f       	subi	r16, 0xFF	; 255
     892:	04 30       	cpi	r16, 0x04	; 4
     894:	b0 f3       	brcs	.-20     	; 0x882 <__stack+0x23>
     896:	11 11       	cpse	r17, r1
     898:	10 c0       	rjmp	.+32     	; 0x8ba <__stack+0x5b>
     89a:	ee 2d       	mov	r30, r14
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	ee 0f       	add	r30, r30
     8a0:	ff 1f       	adc	r31, r31
     8a2:	ee 0f       	add	r30, r30
     8a4:	ff 1f       	adc	r31, r31
     8a6:	81 e0       	ldi	r24, 0x01	; 1
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	8c 0f       	add	r24, r28
     8ac:	9d 1f       	adc	r25, r29
     8ae:	e8 0f       	add	r30, r24
     8b0:	f9 1f       	adc	r31, r25
     8b2:	e0 0f       	add	r30, r16
     8b4:	f1 1d       	adc	r31, r1
     8b6:	80 81       	ld	r24, Z
     8b8:	35 c0       	rjmp	.+106    	; 0x924 <__stack+0xc5>
     8ba:	e3 94       	inc	r14
     8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <__stack+0x61>
     8be:	e1 2c       	mov	r14, r1
     8c0:	93 e0       	ldi	r25, 0x03	; 3
     8c2:	9e 15       	cp	r25, r14
     8c4:	90 f6       	brcc	.-92     	; 0x86a <__stack+0xb>
     8c6:	8f ef       	ldi	r24, 0xFF	; 255
     8c8:	2d c0       	rjmp	.+90     	; 0x924 <__stack+0xc5>
     8ca:	6f e0       	ldi	r22, 0x0F	; 15
     8cc:	8f 2d       	mov	r24, r15
     8ce:	0e 94 8e 03 	call	0x71c	; 0x71c <DIO_vidWriteLowNibble>
     8d2:	40 e0       	ldi	r20, 0x00	; 0
     8d4:	6e 2d       	mov	r22, r14
     8d6:	8f 2d       	mov	r24, r15
     8d8:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     8dc:	00 e0       	ldi	r16, 0x00	; 0
     8de:	09 c0       	rjmp	.+18     	; 0x8f2 <__stack+0x93>
     8e0:	64 e0       	ldi	r22, 0x04	; 4
     8e2:	60 0f       	add	r22, r16
     8e4:	8f 2d       	mov	r24, r15
     8e6:	0e 94 1d 03 	call	0x63a	; 0x63a <DIO_enuReadPin>
     8ea:	18 2f       	mov	r17, r24
     8ec:	88 23       	and	r24, r24
     8ee:	19 f0       	breq	.+6      	; 0x8f6 <__stack+0x97>
     8f0:	0f 5f       	subi	r16, 0xFF	; 255
     8f2:	04 30       	cpi	r16, 0x04	; 4
     8f4:	a8 f3       	brcs	.-22     	; 0x8e0 <__stack+0x81>
     8f6:	11 11       	cpse	r17, r1
     8f8:	10 c0       	rjmp	.+32     	; 0x91a <__stack+0xbb>
     8fa:	ee 2d       	mov	r30, r14
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	ee 0f       	add	r30, r30
     900:	ff 1f       	adc	r31, r31
     902:	ee 0f       	add	r30, r30
     904:	ff 1f       	adc	r31, r31
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	8c 0f       	add	r24, r28
     90c:	9d 1f       	adc	r25, r29
     90e:	e8 0f       	add	r30, r24
     910:	f9 1f       	adc	r31, r25
     912:	e0 0f       	add	r30, r16
     914:	f1 1d       	adc	r31, r1
     916:	80 81       	ld	r24, Z
     918:	05 c0       	rjmp	.+10     	; 0x924 <__stack+0xc5>
     91a:	e3 94       	inc	r14
     91c:	93 e0       	ldi	r25, 0x03	; 3
     91e:	9e 15       	cp	r25, r14
     920:	a0 f6       	brcc	.-88     	; 0x8ca <__stack+0x6b>
     922:	8f ef       	ldi	r24, 0xFF	; 255
     924:	60 96       	adiw	r28, 0x10	; 16
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	f8 94       	cli
     92a:	de bf       	out	0x3e, r29	; 62
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	cd bf       	out	0x3d, r28	; 61
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	1f 91       	pop	r17
     936:	0f 91       	pop	r16
     938:	ff 90       	pop	r15
     93a:	ef 90       	pop	r14
     93c:	08 95       	ret

0000093e <LCD_vidSendEnablePulse>:
    #endif
}

static void LCD_vidSendEnablePulse(void)
{
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, HIGH);
     93e:	41 e0       	ldi	r20, 0x01	; 1
     940:	63 e0       	ldi	r22, 0x03	; 3
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     948:	8f e9       	ldi	r24, 0x9F	; 159
     94a:	9f e0       	ldi	r25, 0x0F	; 15
     94c:	01 97       	sbiw	r24, 0x01	; 1
     94e:	f1 f7       	brne	.-4      	; 0x94c <LCD_vidSendEnablePulse+0xe>
     950:	00 c0       	rjmp	.+0      	; 0x952 <LCD_vidSendEnablePulse+0x14>
     952:	00 00       	nop
    _delay_ms(2);
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, LOW);
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	63 e0       	ldi	r22, 0x03	; 3
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     95e:	08 95       	ret

00000960 <LCD_vidSendCmd>:
    _delay_ms(10);
    LCD_vidSendCmd(LCD_ENTRY_MODE);
}

static void LCD_vidSendCmd(u8 u8Cmd)
{
     960:	cf 93       	push	r28
     962:	c8 2f       	mov	r28, r24
    DIO_vidWritePin(LCD_RW_PORT, LCD_RW_PIN, LOW); // Set Write Operation
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	62 e0       	ldi	r22, 0x02	; 2
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
    DIO_vidWritePin(LCD_RS_PORT, LCD_RS_PIN, LOW); // Select Command Register
     96e:	40 e0       	ldi	r20, 0x00	; 0
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
            LCD_vidSendEnablePulse();
			_delay_ms(2);
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Cmd));
            LCD_vidSendEnablePulse();
        #else
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Cmd));
     978:	6c 2f       	mov	r22, r28
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
     980:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_vidSendEnablePulse>
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Cmd<<4));
     984:	6c 2f       	mov	r22, r28
     986:	62 95       	swap	r22
     988:	60 7f       	andi	r22, 0xF0	; 240
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
     990:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_vidSendEnablePulse>
        #endif
    #endif
}
     994:	cf 91       	pop	r28
     996:	08 95       	ret

00000998 <LCD_vidInit>:
     998:	2f ef       	ldi	r18, 0xFF	; 255
     99a:	81 ee       	ldi	r24, 0xE1	; 225
     99c:	94 e0       	ldi	r25, 0x04	; 4
     99e:	21 50       	subi	r18, 0x01	; 1
     9a0:	80 40       	sbci	r24, 0x00	; 0
     9a2:	90 40       	sbci	r25, 0x00	; 0
     9a4:	e1 f7       	brne	.-8      	; 0x99e <LCD_vidInit+0x6>
     9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <LCD_vidInit+0x10>
     9a8:	00 00       	nop
#include "util/delay.h"

void LCD_vidInit(void)
{
    _delay_ms(200);
    DIO_vidSetPinMode(LCD_RS_PORT, LCD_RS_PIN, OUTPUT);
     9aa:	41 e0       	ldi	r20, 0x01	; 1
     9ac:	61 e0       	ldi	r22, 0x01	; 1
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
    DIO_vidSetPinMode(LCD_RW_PORT, LCD_RW_PIN, OUTPUT);
     9b4:	41 e0       	ldi	r20, 0x01	; 1
     9b6:	62 e0       	ldi	r22, 0x02	; 2
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
    DIO_vidSetPinMode(LCD_EN_PORT, LCD_EN_PIN, OUTPUT);
     9be:	41 e0       	ldi	r20, 0x01	; 1
     9c0:	63 e0       	ldi	r22, 0x03	; 3
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
        _delay_ms(1);
    #else
        #if  NIBBLE_MODE  == LOW_NIBBLE
            DIO_vidSetLowNibbleMode(LCD_DATA_PORT, OUTPUT);
        #else
            DIO_vidSetHighNibbleMode(LCD_DATA_PORT, OUTPUT);
     9c8:	61 e0       	ldi	r22, 0x01	; 1
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	0e 94 b3 03 	call	0x766	; 0x766 <DIO_vidSetHighNibbleMode>
        #endif 
       LCD_vidSendCmd(LCD_RETURN_HOME);
     9d0:	82 e0       	ldi	r24, 0x02	; 2
     9d2:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     9d6:	8f e2       	ldi	r24, 0x2F	; 47
     9d8:	95 e7       	ldi	r25, 0x75	; 117
     9da:	01 97       	sbiw	r24, 0x01	; 1
     9dc:	f1 f7       	brne	.-4      	; 0x9da <LCD_vidInit+0x42>
     9de:	00 c0       	rjmp	.+0      	; 0x9e0 <LCD_vidInit+0x48>
     9e0:	00 00       	nop
        _delay_ms(15);
		LCD_vidSendCmd(LCD_FUNCTION_4BIT_2LINES);
     9e2:	88 e2       	ldi	r24, 0x28	; 40
     9e4:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     9e8:	8f ec       	ldi	r24, 0xCF	; 207
     9ea:	97 e0       	ldi	r25, 0x07	; 7
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <LCD_vidInit+0x54>
     9f0:	00 c0       	rjmp	.+0      	; 0x9f2 <LCD_vidInit+0x5a>
     9f2:	00 00       	nop
        _delay_ms(1);
        
    #endif
    LCD_vidSendCmd(LCD_DISP_ON_CURSOR_ON);
     9f4:	8e e0       	ldi	r24, 0x0E	; 14
     9f6:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     9fa:	8f ec       	ldi	r24, 0xCF	; 207
     9fc:	97 e0       	ldi	r25, 0x07	; 7
     9fe:	01 97       	sbiw	r24, 0x01	; 1
     a00:	f1 f7       	brne	.-4      	; 0x9fe <LCD_vidInit+0x66>
     a02:	00 c0       	rjmp	.+0      	; 0xa04 <LCD_vidInit+0x6c>
     a04:	00 00       	nop
    _delay_ms(1);
    LCD_vidSendCmd(LCD_CLEAR_SCREEN);
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     a0c:	8f e1       	ldi	r24, 0x1F	; 31
     a0e:	9e e4       	ldi	r25, 0x4E	; 78
     a10:	01 97       	sbiw	r24, 0x01	; 1
     a12:	f1 f7       	brne	.-4      	; 0xa10 <LCD_vidInit+0x78>
     a14:	00 c0       	rjmp	.+0      	; 0xa16 <LCD_vidInit+0x7e>
     a16:	00 00       	nop
    _delay_ms(10);
    LCD_vidSendCmd(LCD_ENTRY_MODE);
     a18:	86 e0       	ldi	r24, 0x06	; 6
     a1a:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     a1e:	08 95       	ret

00000a20 <LCD_vidDisplayCharacter>:
    _delay_ms(2);
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, LOW);
}

void LCD_vidDisplayCharacter(u8 u8Char)
{
     a20:	cf 93       	push	r28
     a22:	c8 2f       	mov	r28, r24
    DIO_vidWritePin(LCD_RW_PORT, LCD_RW_PIN, LOW); // Set Write Operation
     a24:	40 e0       	ldi	r20, 0x00	; 0
     a26:	62 e0       	ldi	r22, 0x02	; 2
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
    DIO_vidWritePin(LCD_RS_PORT, LCD_RS_PIN, HIGH); // Select Data Register
     a2e:	41 e0       	ldi	r20, 0x01	; 1
     a30:	61 e0       	ldi	r22, 0x01	; 1
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Char>>4));
            LCD_vidSendEnablePulse();
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Char));
            LCD_vidSendEnablePulse();
        #else
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Char));
     a38:	6c 2f       	mov	r22, r28
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
     a40:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_vidSendEnablePulse>
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Char<<4));
     a44:	6c 2f       	mov	r22, r28
     a46:	62 95       	swap	r22
     a48:	60 7f       	andi	r22, 0xF0	; 240
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	0e 94 c6 03 	call	0x78c	; 0x78c <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
     a50:	0e 94 9f 04 	call	0x93e	; 0x93e <LCD_vidSendEnablePulse>
        #endif
    #endif
}
     a54:	cf 91       	pop	r28
     a56:	08 95       	ret

00000a58 <LCD_vidDisplayString>:

void LCD_vidDisplayString(u8 *u8PtrString)
{
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	ec 01       	movw	r28, r24
    while(*u8PtrString != '\0')
     a5e:	03 c0       	rjmp	.+6      	; 0xa66 <LCD_vidDisplayString+0xe>
    {
        LCD_vidDisplayCharacter(*u8PtrString);
     a60:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_vidDisplayCharacter>
        u8PtrString++;
     a64:	21 96       	adiw	r28, 0x01	; 1
    #endif
}

void LCD_vidDisplayString(u8 *u8PtrString)
{
    while(*u8PtrString != '\0')
     a66:	88 81       	ld	r24, Y
     a68:	81 11       	cpse	r24, r1
     a6a:	fa cf       	rjmp	.-12     	; 0xa60 <LCD_vidDisplayString+0x8>
    {
        LCD_vidDisplayCharacter(*u8PtrString);
        u8PtrString++;
    }
}
     a6c:	df 91       	pop	r29
     a6e:	cf 91       	pop	r28
     a70:	08 95       	ret

00000a72 <LCD_vidDisplayNumber>:

void LCD_vidDisplayNumber(u32 u32Number)
{
     a72:	0f 93       	push	r16
     a74:	1f 93       	push	r17
     a76:	cf 93       	push	r28
     a78:	df 93       	push	r29
     a7a:	cd b7       	in	r28, 0x3d	; 61
     a7c:	de b7       	in	r29, 0x3e	; 62
     a7e:	27 97       	sbiw	r28, 0x07	; 7
     a80:	0f b6       	in	r0, 0x3f	; 63
     a82:	f8 94       	cli
     a84:	de bf       	out	0x3e, r29	; 62
     a86:	0f be       	out	0x3f, r0	; 63
     a88:	cd bf       	out	0x3d, r28	; 61
	u8 u8arr[7];
	sprintf(u8arr, "%d", u32Number);
     a8a:	9f 93       	push	r25
     a8c:	8f 93       	push	r24
     a8e:	7f 93       	push	r23
     a90:	6f 93       	push	r22
     a92:	82 e4       	ldi	r24, 0x42	; 66
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	9f 93       	push	r25
     a98:	8f 93       	push	r24
     a9a:	8e 01       	movw	r16, r28
     a9c:	0f 5f       	subi	r16, 0xFF	; 255
     a9e:	1f 4f       	sbci	r17, 0xFF	; 255
     aa0:	1f 93       	push	r17
     aa2:	0f 93       	push	r16
     aa4:	0e 94 a0 10 	call	0x2140	; 0x2140 <sprintf>
	LCD_vidDisplayString(u8arr);
     aa8:	c8 01       	movw	r24, r16
     aaa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
}
     aae:	0f b6       	in	r0, 0x3f	; 63
     ab0:	f8 94       	cli
     ab2:	de bf       	out	0x3e, r29	; 62
     ab4:	0f be       	out	0x3f, r0	; 63
     ab6:	cd bf       	out	0x3d, r28	; 61
     ab8:	27 96       	adiw	r28, 0x07	; 7
     aba:	0f b6       	in	r0, 0x3f	; 63
     abc:	f8 94       	cli
     abe:	de bf       	out	0x3e, r29	; 62
     ac0:	0f be       	out	0x3f, r0	; 63
     ac2:	cd bf       	out	0x3d, r28	; 61
     ac4:	df 91       	pop	r29
     ac6:	cf 91       	pop	r28
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	08 95       	ret

00000ace <LCD_vidClearScreen>:

void LCD_vidClearScreen(void)
{
	LCD_vidSendCmd(LCD_CLEAR_SCREEN);
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     ad4:	8f e1       	ldi	r24, 0x1F	; 31
     ad6:	9e e4       	ldi	r25, 0x4E	; 78
     ad8:	01 97       	sbiw	r24, 0x01	; 1
     ada:	f1 f7       	brne	.-4      	; 0xad8 <LCD_vidClearScreen+0xa>
     adc:	00 c0       	rjmp	.+0      	; 0xade <LCD_vidClearScreen+0x10>
     ade:	00 00       	nop
     ae0:	08 95       	ret

00000ae2 <LCD_vidMoveCursor>:
	_delay_ms(10);
}
void LCD_vidMoveCursor(u8 u8Line, u8 u8Position)
{
	u8 u8PositionCmd;
	if(u8Line == 1)
     ae2:	81 30       	cpi	r24, 0x01	; 1
     ae4:	19 f4       	brne	.+6      	; 0xaec <LCD_vidMoveCursor+0xa>
	{
		u8PositionCmd = 0x80 + (u8Position-1);
     ae6:	8f e7       	ldi	r24, 0x7F	; 127
     ae8:	86 0f       	add	r24, r22
     aea:	0c c0       	rjmp	.+24     	; 0xb04 <LCD_vidMoveCursor+0x22>
	}
	else if(u8Line == 2)
     aec:	82 30       	cpi	r24, 0x02	; 2
     aee:	19 f4       	brne	.+6      	; 0xaf6 <LCD_vidMoveCursor+0x14>
	{
		u8PositionCmd = 0xC0 + (u8Position-1);	
     af0:	8f eb       	ldi	r24, 0xBF	; 191
     af2:	86 0f       	add	r24, r22
     af4:	07 c0       	rjmp	.+14     	; 0xb04 <LCD_vidMoveCursor+0x22>
	}
	else if(u8Line == 3)
     af6:	83 30       	cpi	r24, 0x03	; 3
     af8:	19 f4       	brne	.+6      	; 0xb00 <LCD_vidMoveCursor+0x1e>
	{
		u8PositionCmd = 0x90 + (u8Position-1);	
     afa:	8f e8       	ldi	r24, 0x8F	; 143
     afc:	86 0f       	add	r24, r22
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <LCD_vidMoveCursor+0x22>
	}
	else 
	{
		u8PositionCmd = 0xD0 + (u8Position-1);
     b00:	8f ec       	ldi	r24, 0xCF	; 207
     b02:	86 0f       	add	r24, r22
	}
	LCD_vidSendCmd(u8PositionCmd);
     b04:	0e 94 b0 04 	call	0x960	; 0x960 <LCD_vidSendCmd>
     b08:	08 95       	ret

00000b0a <LED_vidInit>:
     b0a:	41 e0       	ldi	r20, 0x01	; 1
     b0c:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
     b10:	08 95       	ret

00000b12 <LED_vidTurnOn>:
     b12:	41 e0       	ldi	r20, 0x01	; 1
     b14:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     b18:	08 95       	ret

00000b1a <LED_vidTurnOff>:
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
     b20:	08 95       	ret

00000b22 <LM35_vidInit>:
     b22:	0e 94 9a 00 	call	0x134	; 0x134 <ADC_vidInit>
     b26:	08 95       	ret

00000b28 <LM35_u8Read>:
     b28:	0e 94 05 01 	call	0x20a	; 0x20a <ADC_u16Read>
     b2c:	bc 01       	movw	r22, r24
     b2e:	80 e0       	ldi	r24, 0x00	; 0
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__floatunsisf>
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	30 e0       	ldi	r19, 0x00	; 0
     b3a:	40 e8       	ldi	r20, 0x80	; 128
     b3c:	5e e3       	ldi	r21, 0x3E	; 62
     b3e:	0e 94 0b 10 	call	0x2016	; 0x2016 <__mulsf3>
     b42:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fixunssfsi>
     b46:	86 2f       	mov	r24, r22
     b48:	08 95       	ret

00000b4a <u8RecieveByte>:
		
	}
}

u8 u8RecieveByte(){
	u8ReturnedValue = USART_u8RecieveByte();
     b4a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     b4e:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     b52:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	
	u8ReturnedValue = USART_u8RecieveByte();
     b56:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     b5a:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     b5e:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	
	u8ReturnedValue = USART_u8RecieveByte();
     b62:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     b66:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     b6a:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>

}
     b6e:	08 95       	ret

00000b70 <control_Remoted_Rooms>:


void control_Remoted_Rooms()
{
	USART_vidSendString("R1: Z & z   R2: B & b   R3: F & f   R4: D & d   R5: E & e");
     b70:	81 e5       	ldi	r24, 0x51	; 81
     b72:	91 e0       	ldi	r25, 0x01	; 1
     b74:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     b78:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	while(1){

		
		
		u8ReturnedValue = USART_u8RecieveByte();
     b7c:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     b80:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
		USART_vidEnableRXInterrupt();
     b84:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
		
		switch(u8ReturnedValue){
     b88:	e0 91 52 05 	lds	r30, 0x0552	; 0x800552 <u8ReturnedValue>
     b8c:	8e 2f       	mov	r24, r30
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	fc 01       	movw	r30, r24
     b92:	e2 54       	subi	r30, 0x42	; 66
     b94:	f1 09       	sbc	r31, r1
     b96:	e9 33       	cpi	r30, 0x39	; 57
     b98:	f1 05       	cpc	r31, r1
     b9a:	80 f7       	brcc	.-32     	; 0xb7c <control_Remoted_Rooms+0xc>
     b9c:	e6 5c       	subi	r30, 0xC6	; 198
     b9e:	ff 4f       	sbci	r31, 0xFF	; 255
     ba0:	0c 94 9a 10 	jmp	0x2134	; 0x2134 <__tablejump2__>
			
			case 'Z' :
			USART_vidSendByte('Z');
     ba4:	8a e5       	ldi	r24, 0x5A	; 90
     ba6:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     baa:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bae:	e6 cf       	rjmp	.-52     	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'z' :
			USART_vidSendByte('z');
     bb0:	8a e7       	ldi	r24, 0x7A	; 122
     bb2:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bb6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bba:	e0 cf       	rjmp	.-64     	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'B' :
			USART_vidSendByte('B');
     bbc:	82 e4       	ldi	r24, 0x42	; 66
     bbe:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bc2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bc6:	da cf       	rjmp	.-76     	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'b' :
			USART_vidSendByte('b');
     bc8:	82 e6       	ldi	r24, 0x62	; 98
     bca:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bce:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bd2:	d4 cf       	rjmp	.-88     	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'F' :
			USART_vidSendByte('F');
     bd4:	86 e4       	ldi	r24, 0x46	; 70
     bd6:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bda:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bde:	ce cf       	rjmp	.-100    	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'f' :
			USART_vidSendByte('f');
     be0:	86 e6       	ldi	r24, 0x66	; 102
     be2:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     be6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bea:	c8 cf       	rjmp	.-112    	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'D' :
			USART_vidSendByte('D');
     bec:	84 e4       	ldi	r24, 0x44	; 68
     bee:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bf2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     bf6:	c2 cf       	rjmp	.-124    	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'd' :
			USART_vidSendByte('d');
     bf8:	84 e6       	ldi	r24, 0x64	; 100
     bfa:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     bfe:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     c02:	bc cf       	rjmp	.-136    	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'E' :
			USART_vidSendByte('E');
     c04:	85 e4       	ldi	r24, 0x45	; 69
     c06:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     c0a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     c0e:	b6 cf       	rjmp	.-148    	; 0xb7c <control_Remoted_Rooms+0xc>
			
			case 'e' :
			USART_vidSendByte('e');
     c10:	85 e6       	ldi	r24, 0x65	; 101
     c12:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
			USART_vidEnableTXInterrupt();
     c16:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
			break;
     c1a:	b0 cf       	rjmp	.-160    	; 0xb7c <control_Remoted_Rooms+0xc>

00000c1c <Air_Condition_Remoted>:
	
}

void Air_Condition_Remoted(){
	
	DC_Motor_vidInit();
     c1c:	0e 94 22 02 	call	0x444	; 0x444 <DC_Motor_vidInit>
	u8 temp,pre=1;
	DIO_vidSetPinMode(GPIOB,PIN0,OUTPUT);
     c20:	41 e0       	ldi	r20, 0x01	; 1
     c22:	60 e0       	ldi	r22, 0x00	; 0
     c24:	81 e0       	ldi	r24, 0x01	; 1
     c26:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
	LM35_vidInit(ADC_CH0);
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 91 05 	call	0xb22	; 0xb22 <LM35_vidInit>
}

void Air_Condition_Remoted(){
	
	DC_Motor_vidInit();
	u8 temp,pre=1;
     c32:	d1 e0       	ldi	r29, 0x01	; 1
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <Air_Condition_Remoted+0x1c>
		
		temp = LM35_u8Read();
		if(temp != pre)
		{
			
			pre = temp;
     c36:	dc 2f       	mov	r29, r28
	LM35_vidInit(ADC_CH0);
	
	while (1)
	{
		
		temp = LM35_u8Read();
     c38:	0e 94 94 05 	call	0xb28	; 0xb28 <LM35_u8Read>
     c3c:	c8 2f       	mov	r28, r24
		if(temp != pre)
     c3e:	d8 17       	cp	r29, r24
     c40:	d9 f3       	breq	.-10     	; 0xc38 <Air_Condition_Remoted+0x1c>
		{
			
			pre = temp;
			if(temp >= 25)
     c42:	89 31       	cpi	r24, 0x19	; 25
     c44:	50 f0       	brcs	.+20     	; 0xc5a <Air_Condition_Remoted+0x3e>
			{
				USART_vidSendString("Air condition ON   ");
     c46:	8b e8       	ldi	r24, 0x8B	; 139
     c48:	91 e0       	ldi	r25, 0x01	; 1
     c4a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
				USART_vidEnableTXInterrupt();
     c4e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
				DC_Motor_vidTurnOn();
     c52:	0e 94 2d 02 	call	0x45a	; 0x45a <DC_Motor_vidTurnOn>
		
		temp = LM35_u8Read();
		if(temp != pre)
		{
			
			pre = temp;
     c56:	dc 2f       	mov	r29, r28
     c58:	ef cf       	rjmp	.-34     	; 0xc38 <Air_Condition_Remoted+0x1c>
				USART_vidEnableTXInterrupt();
				DC_Motor_vidTurnOn();
				
				
			}
			else if(temp <= 21 )
     c5a:	86 31       	cpi	r24, 0x16	; 22
     c5c:	60 f7       	brcc	.-40     	; 0xc36 <Air_Condition_Remoted+0x1a>
			{
				USART_vidSendString("Air conditon off  ");
     c5e:	8f e9       	ldi	r24, 0x9F	; 159
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
				USART_vidEnableTXInterrupt();
     c66:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
		
		temp = LM35_u8Read();
		if(temp != pre)
		{
			
			pre = temp;
     c6a:	dc 2f       	mov	r29, r28
     c6c:	e5 cf       	rjmp	.-54     	; 0xc38 <Air_Condition_Remoted+0x1c>

00000c6e <Add_Remoted_User>:
	
	
}


void Add_Remoted_User(){
     c6e:	1f 93       	push	r17
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
	u8 UserId;

	USART_vidSendString("set user ID");
     c74:	82 eb       	ldi	r24, 0xB2	; 178
     c76:	91 e0       	ldi	r25, 0x01	; 1
     c78:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     c7c:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	UserId = u8RecieveByte();
     c80:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     c84:	18 2f       	mov	r17, r24
	int i=0;
	USART_vidSendString("Enter User ");
     c86:	8e eb       	ldi	r24, 0xBE	; 190
     c88:	91 e0       	ldi	r25, 0x01	; 1
     c8a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     c8e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	u8RecieveByte();
     c92:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     c96:	c0 e6       	ldi	r28, 0x60	; 96
     c98:	d5 e0       	ldi	r29, 0x05	; 5
     c9a:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     c9e:	88 83       	st	Y, r24
	i++;
	
	u8RecieveByte();
     ca0:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     ca4:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     ca8:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	u8RecieveByte();
     caa:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     cae:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     cb2:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8RecieveByte();
     cb4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     cb8:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     cbc:	8b 83       	std	Y+3, r24	; 0x03
	i++;
	
	i=0;
	USART_vidSendString("Enter Password");
     cbe:	8a ec       	ldi	r24, 0xCA	; 202
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     cc6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	
	u8RecieveByte();
     cca:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     cce:	c4 e5       	ldi	r28, 0x54	; 84
     cd0:	d5 e0       	ldi	r29, 0x05	; 5
     cd2:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     cd6:	88 83       	st	Y, r24
	i++;
	
	
	u8RecieveByte();
     cd8:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     cdc:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     ce0:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	u8RecieveByte();
     ce2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     ce6:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     cea:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8RecieveByte();
     cec:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     cf0:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     cf4:	8b 83       	std	Y+3, r24	; 0x03
	i++;
	// take pass from user
	write_EEPROM(UserId);
     cf6:	81 2f       	mov	r24, r17
     cf8:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <write_EEPROM>
	USART_vidSendString("User Added Successfully");
     cfc:	89 ed       	ldi	r24, 0xD9	; 217
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	
	USART_vidEnableTXInterrupt();
     d04:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
}
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	1f 91       	pop	r17
     d0e:	08 95       	ret

00000d10 <Admin_Remoted_Menue>:
	}

}

void Admin_Remoted_Menue(){
	USART_vidSendString("1.Control Home       ");
     d10:	81 ef       	ldi	r24, 0xF1	; 241
     d12:	91 e0       	ldi	r25, 0x01	; 1
     d14:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     d18:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	USART_vidSendString("2.Add user           ");
     d1c:	87 e0       	ldi	r24, 0x07	; 7
     d1e:	92 e0       	ldi	r25, 0x02	; 2
     d20:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     d24:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	USART_vidSendString("3.Log out            ");
     d28:	8d e1       	ldi	r24, 0x1D	; 29
     d2a:	92 e0       	ldi	r25, 0x02	; 2
     d2c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	
	u8ReturnedValue=USART_u8RecieveByte();
     d30:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     d34:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     d38:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	u8ReturnedValue=USART_u8RecieveByte();
     d3c:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     d40:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     d44:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	u8ReturnedValue=USART_u8RecieveByte();
     d48:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
     d4c:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     d50:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	
	switch(u8ReturnedValue){
     d54:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     d58:	82 33       	cpi	r24, 0x32	; 50
     d5a:	39 f0       	breq	.+14     	; 0xd6a <Admin_Remoted_Menue+0x5a>
     d5c:	83 33       	cpi	r24, 0x33	; 51
     d5e:	41 f0       	breq	.+16     	; 0xd70 <Admin_Remoted_Menue+0x60>
     d60:	81 33       	cpi	r24, 0x31	; 49
     d62:	41 f4       	brne	.+16     	; 0xd74 <Admin_Remoted_Menue+0x64>
		case '1':
		control_home_remoted();
     d64:	0e 94 7f 08 	call	0x10fe	; 0x10fe <control_home_remoted>
		break;
     d68:	08 95       	ret
		
		case '2':
		Add_Remoted_User();
     d6a:	0e 94 37 06 	call	0xc6e	; 0xc6e <Add_Remoted_User>
		break;
     d6e:	08 95       	ret
		
		case '3':
		Admin_Remoted_Login();
     d70:	0e 94 c2 07 	call	0xf84	; 0xf84 <Admin_Remoted_Login>
     d74:	08 95       	ret

00000d76 <User_Remoted_Login>:
		USART_vidEnableTXInterrupt();
		Bluetooth_Control();
	}
}

void User_Remoted_Login(){
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
	u8 i=0;
	u8 UserId;

	USART_vidSendString("Enter User ID ");
     d7a:	83 e3       	ldi	r24, 0x33	; 51
     d7c:	92 e0       	ldi	r25, 0x02	; 2
     d7e:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     d82:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	UserId= u8RecieveByte();
     d86:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	
	read_EEPROM(UserId );
     d8a:	0e 94 93 09 	call	0x1326	; 0x1326 <read_EEPROM>
	
	
	USART_vidSendString("Enter Username");
     d8e:	82 e4       	ldi	r24, 0x42	; 66
     d90:	92 e0       	ldi	r25, 0x02	; 2
     d92:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     d96:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	u8ReturnedValue = u8RecieveByte();
     d9a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     d9e:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     da2:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	user[i]=u8ReturnedValue;
     da6:	c0 e6       	ldi	r28, 0x60	; 96
     da8:	d5 e0       	ldi	r29, 0x05	; 5
     daa:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     dae:	88 83       	st	Y, r24
	i++;
	
	u8ReturnedValue = u8RecieveByte();
     db0:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     db4:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     db8:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	user[i]=u8ReturnedValue;
     dbc:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     dc0:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	u8ReturnedValue = u8RecieveByte();
     dc2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     dc6:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     dca:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	user[i]=u8ReturnedValue;
     dce:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     dd2:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8ReturnedValue = u8RecieveByte();
     dd4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     dd8:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     ddc:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	user[i]=u8ReturnedValue;
     de0:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     de4:	8b 83       	std	Y+3, r24	; 0x03
	i++;
	
	
	i=0;
	USART_vidSendString("Enter Password");
     de6:	8a ec       	ldi	r24, 0xCA	; 202
     de8:	91 e0       	ldi	r25, 0x01	; 1
     dea:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     dee:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	
	u8ReturnedValue=u8RecieveByte();
     df2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     df6:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     dfa:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	pass[i]=u8ReturnedValue;
     dfe:	c4 e5       	ldi	r28, 0x54	; 84
     e00:	d5 e0       	ldi	r29, 0x05	; 5
     e02:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     e06:	88 83       	st	Y, r24
	i++;
	
	u8ReturnedValue=u8RecieveByte();
     e08:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     e0c:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     e10:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	pass[i]=u8ReturnedValue;
     e14:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     e18:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	
	u8ReturnedValue=u8RecieveByte();
     e1a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     e1e:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     e22:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	pass[i]=u8ReturnedValue;
     e26:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     e2a:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8ReturnedValue=u8RecieveByte();
     e2c:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
     e30:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
     e34:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	pass[i]=u8ReturnedValue;
     e38:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     e3c:	8b 83       	std	Y+3, r24	; 0x03
	i++;

	
	
	check_user=0;									// initialize check variable to 0
     e3e:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <check_user>
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	12 c0       	rjmp	.+36     	; 0xe6a <User_Remoted_Login+0xf4>
	{
		if (user[i] == EEPROM_user[i])			// check if two value are equal or not
     e46:	82 2f       	mov	r24, r18
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	fc 01       	movw	r30, r24
     e4c:	e0 5a       	subi	r30, 0xA0	; 160
     e4e:	fa 4f       	sbci	r31, 0xFA	; 250
     e50:	30 81       	ld	r19, Z
     e52:	fc 01       	movw	r30, r24
     e54:	e8 5a       	subi	r30, 0xA8	; 168
     e56:	fa 4f       	sbci	r31, 0xFA	; 250
     e58:	80 81       	ld	r24, Z
     e5a:	38 13       	cpse	r19, r24
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <User_Remoted_Login+0xf2>
		{
			check_user++;							// if that increase the check variable by one
     e5e:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
     e62:	8f 5f       	subi	r24, 0xFF	; 255
     e64:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <check_user>
	i++;

	
	
	check_user=0;									// initialize check variable to 0
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     e68:	2f 5f       	subi	r18, 0xFF	; 255
     e6a:	24 30       	cpi	r18, 0x04	; 4
     e6c:	60 f3       	brcs	.-40     	; 0xe46 <User_Remoted_Login+0xd0>
		else
		{
		}
	}
	
	check=0;									// initialize check variable to 0
     e6e:	10 92 6c 05 	sts	0x056C, r1	; 0x80056c <check>
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     e72:	20 e0       	ldi	r18, 0x00	; 0
     e74:	12 c0       	rjmp	.+36     	; 0xe9a <User_Remoted_Login+0x124>
	{
		if (pass[i] == EEPROM_pass[i])			// check if two value are equal or not
     e76:	82 2f       	mov	r24, r18
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	fc 01       	movw	r30, r24
     e7c:	ec 5a       	subi	r30, 0xAC	; 172
     e7e:	fa 4f       	sbci	r31, 0xFA	; 250
     e80:	30 81       	ld	r19, Z
     e82:	fc 01       	movw	r30, r24
     e84:	e3 59       	subi	r30, 0x93	; 147
     e86:	fa 4f       	sbci	r31, 0xFA	; 250
     e88:	80 81       	ld	r24, Z
     e8a:	38 13       	cpse	r19, r24
     e8c:	05 c0       	rjmp	.+10     	; 0xe98 <User_Remoted_Login+0x122>
		{
			check++;							// if that increase the check variable by one
     e8e:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
     e92:	8f 5f       	subi	r24, 0xFF	; 255
     e94:	80 93 6c 05 	sts	0x056C, r24	; 0x80056c <check>
		{
		}
	}
	
	check=0;									// initialize check variable to 0
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     e98:	2f 5f       	subi	r18, 0xFF	; 255
     e9a:	24 30       	cpi	r18, 0x04	; 4
     e9c:	60 f3       	brcs	.-40     	; 0xe76 <User_Remoted_Login+0x100>
		}
		else
		{
		}
	}
	if(check == 4 && check_user == 4)								// check if check variable equal 4 or not (correct pass)
     e9e:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
     ea2:	84 30       	cpi	r24, 0x04	; 4
     ea4:	79 f4       	brne	.+30     	; 0xec4 <User_Remoted_Login+0x14e>
     ea6:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
     eaa:	84 30       	cpi	r24, 0x04	; 4
     eac:	59 f4       	brne	.+22     	; 0xec4 <User_Remoted_Login+0x14e>
	{
		USART_vidSendString("Correct Password                                                            ");
     eae:	81 e5       	ldi	r24, 0x51	; 81
     eb0:	92 e0       	ldi	r25, 0x02	; 2
     eb2:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
		USART_vidEnableTXInterrupt();
     eb6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
		wrong_pass_count = 0;
     eba:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <__data_end>
		Admin_Remoted_Menue();					// reset wrong_pass_count variable by reinitialize by 0
     ebe:	0e 94 88 06 	call	0xd10	; 0xd10 <Admin_Remoted_Menue>
		else
		{
		}
	}
	if(check == 4 && check_user == 4)								// check if check variable equal 4 or not (correct pass)
	{
     ec2:	0b c0       	rjmp	.+22     	; 0xeda <User_Remoted_Login+0x164>

		
	}
	else
	{
		wrong_pass_count++;							// increase wrong_pass_count variable by one
     ec4:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
     ec8:	8f 5f       	subi	r24, 0xFF	; 255
     eca:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <__data_end>
		USART_vidSendString("Password Wrong");
     ece:	8e e9       	ldi	r24, 0x9E	; 158
     ed0:	92 e0       	ldi	r25, 0x02	; 2
     ed2:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
		USART_vidEnableTXInterrupt();
     ed6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	}
}
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	08 95       	ret

00000ee0 <check_admin_pass_remoted>:
}


void check_admin_pass_remoted()
{
	read_EEPROM(0x0);
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	0e 94 93 09 	call	0x1326	; 0x1326 <read_EEPROM>
	
	check_user=0;									// initialize check variable to 0
     ee6:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <check_user>
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	12 c0       	rjmp	.+36     	; 0xf12 <check_admin_pass_remoted+0x32>
	{
		if (user[i] == EEPROM_user[i])			// check if two value are equal or not
     eee:	82 2f       	mov	r24, r18
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	fc 01       	movw	r30, r24
     ef4:	e0 5a       	subi	r30, 0xA0	; 160
     ef6:	fa 4f       	sbci	r31, 0xFA	; 250
     ef8:	30 81       	ld	r19, Z
     efa:	fc 01       	movw	r30, r24
     efc:	e8 5a       	subi	r30, 0xA8	; 168
     efe:	fa 4f       	sbci	r31, 0xFA	; 250
     f00:	80 81       	ld	r24, Z
     f02:	38 13       	cpse	r19, r24
     f04:	05 c0       	rjmp	.+10     	; 0xf10 <check_admin_pass_remoted+0x30>
		{
			check_user++;							// if that increase the check variable by one
     f06:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
     f0a:	8f 5f       	subi	r24, 0xFF	; 255
     f0c:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <check_user>
void check_admin_pass_remoted()
{
	read_EEPROM(0x0);
	
	check_user=0;									// initialize check variable to 0
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     f10:	2f 5f       	subi	r18, 0xFF	; 255
     f12:	24 30       	cpi	r18, 0x04	; 4
     f14:	60 f3       	brcs	.-40     	; 0xeee <check_admin_pass_remoted+0xe>
		else
		{
		}
	}
	
	check=0;									// initialize check variable to 0
     f16:	10 92 6c 05 	sts	0x056C, r1	; 0x80056c <check>
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	12 c0       	rjmp	.+36     	; 0xf42 <check_admin_pass_remoted+0x62>
	{
		if (pass[i] == EEPROM_pass[i])			// check if two value are equal or not
     f1e:	82 2f       	mov	r24, r18
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	fc 01       	movw	r30, r24
     f24:	ec 5a       	subi	r30, 0xAC	; 172
     f26:	fa 4f       	sbci	r31, 0xFA	; 250
     f28:	30 81       	ld	r19, Z
     f2a:	fc 01       	movw	r30, r24
     f2c:	e3 59       	subi	r30, 0x93	; 147
     f2e:	fa 4f       	sbci	r31, 0xFA	; 250
     f30:	80 81       	ld	r24, Z
     f32:	38 13       	cpse	r19, r24
     f34:	05 c0       	rjmp	.+10     	; 0xf40 <check_admin_pass_remoted+0x60>
		{
			check++;							// if that increase the check variable by one
     f36:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
     f3a:	8f 5f       	subi	r24, 0xFF	; 255
     f3c:	80 93 6c 05 	sts	0x056C, r24	; 0x80056c <check>
		{
		}
	}
	
	check=0;									// initialize check variable to 0
	for (u8 i=0;i<4;i++)						// loop to check if pass entered is correct or not (same saved in EEPROM)
     f40:	2f 5f       	subi	r18, 0xFF	; 255
     f42:	24 30       	cpi	r18, 0x04	; 4
     f44:	60 f3       	brcs	.-40     	; 0xf1e <check_admin_pass_remoted+0x3e>
		}
		else
		{
		}
	}
	if(check == 4 && check_user == 4)								// check if check variable equal 4 or not (correct pass)
     f46:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
     f4a:	84 30       	cpi	r24, 0x04	; 4
     f4c:	79 f4       	brne	.+30     	; 0xf6c <check_admin_pass_remoted+0x8c>
     f4e:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
     f52:	84 30       	cpi	r24, 0x04	; 4
     f54:	59 f4       	brne	.+22     	; 0xf6c <check_admin_pass_remoted+0x8c>
	{
		USART_vidSendString("Correct Password                                                            ");
     f56:	81 e5       	ldi	r24, 0x51	; 81
     f58:	92 e0       	ldi	r25, 0x02	; 2
     f5a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
		USART_vidEnableTXInterrupt();
     f5e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
		wrong_pass_count = 0;
     f62:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <__data_end>
		Admin_Remoted_Menue();				// reset wrong_pass_count variable by reinitialize by 0
     f66:	0e 94 88 06 	call	0xd10	; 0xd10 <Admin_Remoted_Menue>
		else
		{
		}
	}
	if(check == 4 && check_user == 4)								// check if check variable equal 4 or not (correct pass)
	{
     f6a:	08 95       	ret

		
	}
	else
	{
		wrong_pass_count++;							// increase wrong_pass_count variable by one
     f6c:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
     f70:	8f 5f       	subi	r24, 0xFF	; 255
     f72:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <__data_end>
		USART_vidSendString("Password Wrong");
     f76:	8e e9       	ldi	r24, 0x9E	; 158
     f78:	92 e0       	ldi	r25, 0x02	; 2
     f7a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
		USART_vidEnableTXInterrupt();
     f7e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
     f82:	08 95       	ret

00000f84 <Admin_Remoted_Login>:





void Admin_Remoted_Login(){
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
	int i=0;
	USART_vidSendString("Enter User ");
     f88:	8e eb       	ldi	r24, 0xBE	; 190
     f8a:	91 e0       	ldi	r25, 0x01	; 1
     f8c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     f90:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	u8RecieveByte();
     f94:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     f98:	c0 e6       	ldi	r28, 0x60	; 96
     f9a:	d5 e0       	ldi	r29, 0x05	; 5
     f9c:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fa0:	88 83       	st	Y, r24
	i++;
	
	u8RecieveByte();
     fa2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     fa6:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     faa:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	u8RecieveByte();
     fac:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     fb0:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fb4:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8RecieveByte();
     fb6:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	user[i]=u8ReturnedValue;
     fba:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fbe:	8b 83       	std	Y+3, r24	; 0x03
	i++;
	
	i=0;
	USART_vidSendString("Enter Password");
     fc0:	8a ec       	ldi	r24, 0xCA	; 202
     fc2:	91 e0       	ldi	r25, 0x01	; 1
     fc4:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
     fc8:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	
	u8RecieveByte();
     fcc:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     fd0:	c4 e5       	ldi	r28, 0x54	; 84
     fd2:	d5 e0       	ldi	r29, 0x05	; 5
     fd4:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fd8:	88 83       	st	Y, r24
	i++;
	
	
	u8RecieveByte();
     fda:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     fde:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fe2:	89 83       	std	Y+1, r24	; 0x01
	i++;
	
	u8RecieveByte();
     fe4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     fe8:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     fec:	8a 83       	std	Y+2, r24	; 0x02
	i++;
	
	u8RecieveByte();
     fee:	0e 94 a5 05 	call	0xb4a	; 0xb4a <u8RecieveByte>
	pass[i]=u8ReturnedValue;
     ff2:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
     ff6:	8b 83       	std	Y+3, r24	; 0x03
	i++;

	check_admin_pass_remoted();
     ff8:	0e 94 70 07 	call	0xee0	; 0xee0 <check_admin_pass_remoted>
	
	
}
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	08 95       	ret

00001002 <Bluetooth_Control>:
	}
}


void Bluetooth_Control(){
	USART_vidSendString("Press A for Admin Login & U for user login");
    1002:	8d ea       	ldi	r24, 0xAD	; 173
    1004:	92 e0       	ldi	r25, 0x02	; 2
    1006:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
    100a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	u8ReturnedValue = USART_u8RecieveByte();
    100e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
    1012:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
    1016:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>

	
	if (u8ReturnedValue=='A')
    101a:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    101e:	81 34       	cpi	r24, 0x41	; 65
    1020:	19 f4       	brne	.+6      	; 0x1028 <Bluetooth_Control+0x26>
	{
		Admin_Remoted_Login();
    1022:	0e 94 c2 07 	call	0xf84	; 0xf84 <Admin_Remoted_Login>
    1026:	08 95       	ret
	}
	else if (u8ReturnedValue=='U')
    1028:	85 35       	cpi	r24, 0x55	; 85
    102a:	19 f4       	brne	.+6      	; 0x1032 <Bluetooth_Control+0x30>
	{
		User_Remoted_Login();
    102c:	0e 94 bb 06 	call	0xd76	; 0xd76 <User_Remoted_Login>
    1030:	08 95       	ret
	}
	else{
		USART_vidSendString("Wrong Choice");
    1032:	85 ea       	ldi	r24, 0xA5	; 165
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
		USART_vidEnableTXInterrupt();
    103a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
		Bluetooth_Control();
    103e:	0e 94 01 08 	call	0x1002	; 0x1002 <Bluetooth_Control>
    1042:	08 95       	ret

00001044 <main>:
//#define F_CPU 8000000UL

int main(void)
{
//	u8 u8ReturnedValue;
	LM35_vidInit(ADC_CH0);
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 94 91 05 	call	0xb22	; 0xb22 <LM35_vidInit>
	USART_vidInit(9600);
    104c:	60 e8       	ldi	r22, 0x80	; 128
    104e:	75 e2       	ldi	r23, 0x25	; 37
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <USART_vidInit>
	LCD_vidInit();											// initialize LCD
    1058:	0e 94 cc 04 	call	0x998	; 0x998 <LCD_vidInit>
	KPD_vidInit(GPIOC, HIGH_NIBBLE);						// initialize KPD 
    105c:	61 e0       	ldi	r22, 0x01	; 1
    105e:	82 e0       	ldi	r24, 0x02	; 2
    1060:	0e 94 fd 03 	call	0x7fa	; 0x7fa <KPD_vidInit>
	Servo_Init();
    1064:	0e 94 b8 08 	call	0x1170	; 0x1170 <Servo_Init>
	 
	LED_vidInit(GPIOD, PIN3);
    1068:	63 e0       	ldi	r22, 0x03	; 3
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	83 e0       	ldi	r24, 0x03	; 3
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	0e 94 85 05 	call	0xb0a	; 0xb0a <LED_vidInit>
	LED_vidInit(GPIOD, PIN4);
    1074:	64 e0       	ldi	r22, 0x04	; 4
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	83 e0       	ldi	r24, 0x03	; 3
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	0e 94 85 05 	call	0xb0a	; 0xb0a <LED_vidInit>
	LED_vidInit(GPIOB, PIN5);
    1080:	65 e0       	ldi	r22, 0x05	; 5
    1082:	70 e0       	ldi	r23, 0x00	; 0
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	0e 94 85 05 	call	0xb0a	; 0xb0a <LED_vidInit>
	LED_vidInit(GPIOD, PIN2);
    108c:	62 e0       	ldi	r22, 0x02	; 2
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	83 e0       	ldi	r24, 0x03	; 3
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	0e 94 85 05 	call	0xb0a	; 0xb0a <LED_vidInit>
	LED_vidInit(GPIOD, PIN6);
    1098:	66 e0       	ldi	r22, 0x06	; 6
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	83 e0       	ldi	r24, 0x03	; 3
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0e 94 85 05 	call	0xb0a	; 0xb0a <LED_vidInit>
	DIO_vidSetPinMode(GPIOD, PIN7, OUTPUT);
    10a4:	41 e0       	ldi	r20, 0x01	; 1
    10a6:	67 e0       	ldi	r22, 0x07	; 7
    10a8:	83 e0       	ldi	r24, 0x03	; 3
    10aa:	0e 94 43 02 	call	0x486	; 0x486 <DIO_vidSetPinMode>
	LCD_vidMoveCursor(1,3);
    10ae:	63 e0       	ldi	r22, 0x03	; 3
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
	LCD_vidDisplayString(" Welcome to ");						// display message on screen
    10b6:	88 ed       	ldi	r24, 0xD8	; 216
    10b8:	92 e0       	ldi	r25, 0x02	; 2
    10ba:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
	LCD_vidMoveCursor(2,3);
    10be:	63 e0       	ldi	r22, 0x03	; 3
    10c0:	82 e0       	ldi	r24, 0x02	; 2
    10c2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
	LCD_vidDisplayString(" smart home ");						// display message on screen
    10c6:	85 ee       	ldi	r24, 0xE5	; 229
    10c8:	92 e0       	ldi	r25, 0x02	; 2
    10ca:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    10ce:	2f e7       	ldi	r18, 0x7F	; 127
    10d0:	8a e1       	ldi	r24, 0x1A	; 26
    10d2:	96 e0       	ldi	r25, 0x06	; 6
    10d4:	21 50       	subi	r18, 0x01	; 1
    10d6:	80 40       	sbci	r24, 0x00	; 0
    10d8:	90 40       	sbci	r25, 0x00	; 0
    10da:	e1 f7       	brne	.-8      	; 0x10d4 <main+0x90>
    10dc:	00 c0       	rjmp	.+0      	; 0x10de <main+0x9a>
    10de:	00 00       	nop
	_delay_ms(2000);											// delay 250m second
	LCD_vidClearScreen();	
    10e0:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
	Bluetooth_Control();
    10e4:	0e 94 01 08 	call	0x1002	; 0x1002 <Bluetooth_Control>
								// clear LCD screen
	 start();	
    10e8:	0e 94 ca 09 	call	0x1394	; 0x1394 <start>
    								// sett pass if not set or read pass if already set 
    while (1) 
    {    
	
		u8 wrong_pass_count = smart_lock();					// if pass wrong and exceed tries safe go on lock mode
    10ec:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <smart_lock>
		if (wrong_pass_count == 0 || wrong_pass_count == 3)	// if wrong_pass_count equal to (0 when pass correct) or (3 when user exceed number of tries)
    10f0:	88 23       	and	r24, r24
    10f2:	11 f0       	breq	.+4      	; 0x10f8 <main+0xb4>
    10f4:	83 30       	cpi	r24, 0x03	; 3
    10f6:	d1 f7       	brne	.-12     	; 0x10ec <main+0xa8>
		{
			break;											// stop the loop
		}
		
	}
}
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	08 95       	ret

000010fe <control_home_remoted>:
		break;
	}
}

void control_home_remoted(){
	USART_vidSendString("1.Openning Door  ");
    10fe:	82 ef       	ldi	r24, 0xF2	; 242
    1100:	92 e0       	ldi	r25, 0x02	; 2
    1102:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
    1106:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	USART_vidSendString("2.Room Lighting  ");
    110a:	84 e0       	ldi	r24, 0x04	; 4
    110c:	93 e0       	ldi	r25, 0x03	; 3
    110e:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
    1112:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	USART_vidSendString("3.Air condition  ");
    1116:	86 e1       	ldi	r24, 0x16	; 22
    1118:	93 e0       	ldi	r25, 0x03	; 3
    111a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
    111e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	USART_vidSendString("4.Return        ");
    1122:	88 e2       	ldi	r24, 0x28	; 40
    1124:	93 e0       	ldi	r25, 0x03	; 3
    1126:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <USART_vidSendString>
	USART_vidEnableTXInterrupt();
    112a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <USART_vidEnableTXInterrupt>
	
	u8ReturnedValue=USART_u8RecieveByte();
    112e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
    1132:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
    1136:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	u8ReturnedValue=USART_u8RecieveByte();
    113a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
    113e:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
    1142:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	u8ReturnedValue=USART_u8RecieveByte();
    1146:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <USART_u8RecieveByte>
    114a:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
	USART_vidEnableRXInterrupt();
    114e:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <USART_vidEnableRXInterrupt>
	
	switch(u8ReturnedValue){
    1152:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    1156:	83 33       	cpi	r24, 0x33	; 51
    1158:	31 f0       	breq	.+12     	; 0x1166 <control_home_remoted+0x68>
    115a:	84 33       	cpi	r24, 0x34	; 52
    115c:	31 f0       	breq	.+12     	; 0x116a <control_home_remoted+0x6c>
    115e:	82 33       	cpi	r24, 0x32	; 50
    1160:	31 f4       	brne	.+12     	; 0x116e <control_home_remoted+0x70>
		case '1':
		break;
		
		case '2':
		control_Remoted_Rooms();
    1162:	0e 94 b8 05 	call	0xb70	; 0xb70 <control_Remoted_Rooms>
		break;
		
		case '3':
		Air_Condition_Remoted();
    1166:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Air_Condition_Remoted>
		break;
		
		case '4':
		Admin_Remoted_Menue();
    116a:	0e 94 88 06 	call	0xd10	; 0xd10 <Admin_Remoted_Menue>
    116e:	08 95       	ret

00001170 <Servo_Init>:
    1170:	81 b3       	in	r24, 0x11	; 17
    1172:	80 62       	ori	r24, 0x20	; 32
    1174:	81 bb       	out	0x11, r24	; 17
    1176:	1d bc       	out	0x2d, r1	; 45
    1178:	1c bc       	out	0x2c, r1	; 44
    117a:	83 ec       	ldi	r24, 0xC3	; 195
    117c:	99 e0       	ldi	r25, 0x09	; 9
    117e:	97 bd       	out	0x27, r25	; 39
    1180:	86 bd       	out	0x26, r24	; 38
    1182:	82 e8       	ldi	r24, 0x82	; 130
    1184:	8f bd       	out	0x2f, r24	; 47
    1186:	8b e1       	ldi	r24, 0x1B	; 27
    1188:	8e bd       	out	0x2e, r24	; 46
    118a:	08 95       	ret

0000118c <Servo_Clockwise>:
    118c:	8b 35       	cpi	r24, 0x5B	; 91
    118e:	b0 f4       	brcc	.+44     	; 0x11bc <Servo_Clockwise+0x30>
    1190:	68 2f       	mov	r22, r24
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__floatsisf>
    119c:	2b e0       	ldi	r18, 0x0B	; 11
    119e:	36 e4       	ldi	r19, 0x46	; 70
    11a0:	45 ea       	ldi	r20, 0xA5	; 165
    11a2:	5f e3       	ldi	r21, 0x3F	; 63
    11a4:	0e 94 0b 10 	call	0x2016	; 0x2016 <__mulsf3>
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	46 e3       	ldi	r20, 0x36	; 54
    11ae:	53 e4       	ldi	r21, 0x43	; 67
    11b0:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__addsf3>
    11b4:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fixunssfsi>
    11b8:	7b bd       	out	0x2b, r23	; 43
    11ba:	6a bd       	out	0x2a, r22	; 42
    11bc:	08 95       	ret

000011be <Servo_Counterclockwise>:
    11be:	8b 35       	cpi	r24, 0x5B	; 91
    11c0:	b0 f4       	brcc	.+44     	; 0x11ee <Servo_Counterclockwise+0x30>
    11c2:	68 2f       	mov	r22, r24
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	80 e0       	ldi	r24, 0x00	; 0
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__floatsisf>
    11ce:	2b e0       	ldi	r18, 0x0B	; 11
    11d0:	36 e4       	ldi	r19, 0x46	; 70
    11d2:	45 ea       	ldi	r20, 0xA5	; 165
    11d4:	5f eb       	ldi	r21, 0xBF	; 191
    11d6:	0e 94 0b 10 	call	0x2016	; 0x2016 <__mulsf3>
    11da:	20 e0       	ldi	r18, 0x00	; 0
    11dc:	30 e0       	ldi	r19, 0x00	; 0
    11de:	46 e3       	ldi	r20, 0x36	; 54
    11e0:	53 e4       	ldi	r21, 0x43	; 67
    11e2:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__addsf3>
    11e6:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fixunssfsi>
    11ea:	7b bd       	out	0x2b, r23	; 43
    11ec:	6a bd       	out	0x2a, r22	; 42
    11ee:	08 95       	ret

000011f0 <Scan_pass>:
    11f0:	cf 93       	push	r28
    11f2:	c0 e0       	ldi	r28, 0x00	; 0
    11f4:	2e c0       	rjmp	.+92     	; 0x1252 <Scan_pass+0x62>
    11f6:	61 e0       	ldi	r22, 0x01	; 1
    11f8:	82 e0       	ldi	r24, 0x02	; 2
    11fa:	0e 94 19 04 	call	0x832	; 0x832 <KPD_u8GetPressedKey>
    11fe:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    1202:	2f ef       	ldi	r18, 0xFF	; 255
    1204:	80 e7       	ldi	r24, 0x70	; 112
    1206:	92 e0       	ldi	r25, 0x02	; 2
    1208:	21 50       	subi	r18, 0x01	; 1
    120a:	80 40       	sbci	r24, 0x00	; 0
    120c:	90 40       	sbci	r25, 0x00	; 0
    120e:	e1 f7       	brne	.-8      	; 0x1208 <Scan_pass+0x18>
    1210:	00 c0       	rjmp	.+0      	; 0x1212 <Scan_pass+0x22>
    1212:	00 00       	nop
    1214:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    1218:	8f 3f       	cpi	r24, 0xFF	; 255
    121a:	69 f3       	breq	.-38     	; 0x11f6 <Scan_pass+0x6>
    121c:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_vidDisplayCharacter>
    1220:	2f eb       	ldi	r18, 0xBF	; 191
    1222:	84 ed       	ldi	r24, 0xD4	; 212
    1224:	91 e0       	ldi	r25, 0x01	; 1
    1226:	21 50       	subi	r18, 0x01	; 1
    1228:	80 40       	sbci	r24, 0x00	; 0
    122a:	90 40       	sbci	r25, 0x00	; 0
    122c:	e1 f7       	brne	.-8      	; 0x1226 <Scan_pass+0x36>
    122e:	00 c0       	rjmp	.+0      	; 0x1230 <Scan_pass+0x40>
    1230:	00 00       	nop
    1232:	63 e0       	ldi	r22, 0x03	; 3
    1234:	6c 0f       	add	r22, r28
    1236:	84 e0       	ldi	r24, 0x04	; 4
    1238:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    123c:	8a e2       	ldi	r24, 0x2A	; 42
    123e:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_vidDisplayCharacter>
    1242:	ec 2f       	mov	r30, r28
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	ec 5a       	subi	r30, 0xAC	; 172
    1248:	fa 4f       	sbci	r31, 0xFA	; 250
    124a:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    124e:	80 83       	st	Z, r24
    1250:	cf 5f       	subi	r28, 0xFF	; 255
    1252:	c4 30       	cpi	r28, 0x04	; 4
    1254:	80 f2       	brcs	.-96     	; 0x11f6 <Scan_pass+0x6>
    1256:	cf 91       	pop	r28
    1258:	08 95       	ret

0000125a <Scan_user>:
    125a:	cf 93       	push	r28
    125c:	c0 e0       	ldi	r28, 0x00	; 0
    125e:	26 c0       	rjmp	.+76     	; 0x12ac <Scan_user+0x52>
    1260:	61 e0       	ldi	r22, 0x01	; 1
    1262:	82 e0       	ldi	r24, 0x02	; 2
    1264:	0e 94 19 04 	call	0x832	; 0x832 <KPD_u8GetPressedKey>
    1268:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    126c:	2f ef       	ldi	r18, 0xFF	; 255
    126e:	80 e7       	ldi	r24, 0x70	; 112
    1270:	92 e0       	ldi	r25, 0x02	; 2
    1272:	21 50       	subi	r18, 0x01	; 1
    1274:	80 40       	sbci	r24, 0x00	; 0
    1276:	90 40       	sbci	r25, 0x00	; 0
    1278:	e1 f7       	brne	.-8      	; 0x1272 <Scan_user+0x18>
    127a:	00 c0       	rjmp	.+0      	; 0x127c <Scan_user+0x22>
    127c:	00 00       	nop
    127e:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    1282:	8f 3f       	cpi	r24, 0xFF	; 255
    1284:	69 f3       	breq	.-38     	; 0x1260 <Scan_user+0x6>
    1286:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_vidDisplayCharacter>
    128a:	2f eb       	ldi	r18, 0xBF	; 191
    128c:	84 ed       	ldi	r24, 0xD4	; 212
    128e:	91 e0       	ldi	r25, 0x01	; 1
    1290:	21 50       	subi	r18, 0x01	; 1
    1292:	80 40       	sbci	r24, 0x00	; 0
    1294:	90 40       	sbci	r25, 0x00	; 0
    1296:	e1 f7       	brne	.-8      	; 0x1290 <Scan_user+0x36>
    1298:	00 c0       	rjmp	.+0      	; 0x129a <Scan_user+0x40>
    129a:	00 00       	nop
    129c:	ec 2f       	mov	r30, r28
    129e:	f0 e0       	ldi	r31, 0x00	; 0
    12a0:	e0 5a       	subi	r30, 0xA0	; 160
    12a2:	fa 4f       	sbci	r31, 0xFA	; 250
    12a4:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    12a8:	80 83       	st	Z, r24
    12aa:	cf 5f       	subi	r28, 0xFF	; 255
    12ac:	c4 30       	cpi	r28, 0x04	; 4
    12ae:	c0 f2       	brcs	.-80     	; 0x1260 <Scan_user+0x6>
    12b0:	cf 91       	pop	r28
    12b2:	08 95       	ret

000012b4 <write_EEPROM>:
    12b4:	1f 93       	push	r17
    12b6:	cf 93       	push	r28
    12b8:	df 93       	push	r29
    12ba:	18 2f       	mov	r17, r24
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	0c 96       	adiw	r24, 0x0c	; 12
    12c0:	d8 2f       	mov	r29, r24
    12c2:	dd 0f       	add	r29, r29
    12c4:	dd 0f       	add	r29, r29
    12c6:	dd 0f       	add	r29, r29
    12c8:	c0 e0       	ldi	r28, 0x00	; 0
    12ca:	10 c0       	rjmp	.+32     	; 0x12ec <write_EEPROM+0x38>
    12cc:	2c 2f       	mov	r18, r28
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	f9 01       	movw	r30, r18
    12d2:	e0 5a       	subi	r30, 0xA0	; 160
    12d4:	fa 4f       	sbci	r31, 0xFA	; 250
    12d6:	60 81       	ld	r22, Z
    12d8:	9b ea       	ldi	r25, 0xAB	; 171
    12da:	69 27       	eor	r22, r25
    12dc:	60 83       	st	Z, r22
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	c9 01       	movw	r24, r18
    12e2:	8d 0f       	add	r24, r29
    12e4:	91 1d       	adc	r25, r1
    12e6:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <EEPROM_vidWrite>
    12ea:	cf 5f       	subi	r28, 0xFF	; 255
    12ec:	c4 30       	cpi	r28, 0x04	; 4
    12ee:	70 f3       	brcs	.-36     	; 0x12cc <write_EEPROM+0x18>
    12f0:	d1 2f       	mov	r29, r17
    12f2:	dd 0f       	add	r29, r29
    12f4:	dd 0f       	add	r29, r29
    12f6:	c0 e0       	ldi	r28, 0x00	; 0
    12f8:	10 c0       	rjmp	.+32     	; 0x131a <write_EEPROM+0x66>
    12fa:	2c 2f       	mov	r18, r28
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	f9 01       	movw	r30, r18
    1300:	ec 5a       	subi	r30, 0xAC	; 172
    1302:	fa 4f       	sbci	r31, 0xFA	; 250
    1304:	60 81       	ld	r22, Z
    1306:	9b ea       	ldi	r25, 0xAB	; 171
    1308:	69 27       	eor	r22, r25
    130a:	60 83       	st	Z, r22
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	c9 01       	movw	r24, r18
    1310:	8d 0f       	add	r24, r29
    1312:	91 1d       	adc	r25, r1
    1314:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <EEPROM_vidWrite>
    1318:	cf 5f       	subi	r28, 0xFF	; 255
    131a:	c4 30       	cpi	r28, 0x04	; 4
    131c:	70 f3       	brcs	.-36     	; 0x12fa <write_EEPROM+0x46>
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	08 95       	ret

00001326 <read_EEPROM>:
    1326:	ff 92       	push	r15
    1328:	0f 93       	push	r16
    132a:	1f 93       	push	r17
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	f8 2e       	mov	r15, r24
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0c 96       	adiw	r24, 0x0c	; 12
    1336:	08 2f       	mov	r16, r24
    1338:	00 0f       	add	r16, r16
    133a:	00 0f       	add	r16, r16
    133c:	00 0f       	add	r16, r16
    133e:	10 e0       	ldi	r17, 0x00	; 0
    1340:	0d c0       	rjmp	.+26     	; 0x135c <read_EEPROM+0x36>
    1342:	c1 2f       	mov	r28, r17
    1344:	d0 e0       	ldi	r29, 0x00	; 0
    1346:	ce 01       	movw	r24, r28
    1348:	80 0f       	add	r24, r16
    134a:	91 1d       	adc	r25, r1
    134c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <EEPROM_u8Read>
    1350:	c8 5a       	subi	r28, 0xA8	; 168
    1352:	da 4f       	sbci	r29, 0xFA	; 250
    1354:	9b ea       	ldi	r25, 0xAB	; 171
    1356:	89 27       	eor	r24, r25
    1358:	88 83       	st	Y, r24
    135a:	1f 5f       	subi	r17, 0xFF	; 255
    135c:	14 30       	cpi	r17, 0x04	; 4
    135e:	88 f3       	brcs	.-30     	; 0x1342 <read_EEPROM+0x1c>
    1360:	0f 2d       	mov	r16, r15
    1362:	00 0f       	add	r16, r16
    1364:	00 0f       	add	r16, r16
    1366:	10 e0       	ldi	r17, 0x00	; 0
    1368:	0d c0       	rjmp	.+26     	; 0x1384 <read_EEPROM+0x5e>
    136a:	c1 2f       	mov	r28, r17
    136c:	d0 e0       	ldi	r29, 0x00	; 0
    136e:	ce 01       	movw	r24, r28
    1370:	80 0f       	add	r24, r16
    1372:	91 1d       	adc	r25, r1
    1374:	0e 94 f6 03 	call	0x7ec	; 0x7ec <EEPROM_u8Read>
    1378:	c3 59       	subi	r28, 0x93	; 147
    137a:	da 4f       	sbci	r29, 0xFA	; 250
    137c:	9b ea       	ldi	r25, 0xAB	; 171
    137e:	89 27       	eor	r24, r25
    1380:	88 83       	st	Y, r24
    1382:	1f 5f       	subi	r17, 0xFF	; 255
    1384:	14 30       	cpi	r17, 0x04	; 4
    1386:	88 f3       	brcs	.-30     	; 0x136a <read_EEPROM+0x44>
    1388:	df 91       	pop	r29
    138a:	cf 91       	pop	r28
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	ff 90       	pop	r15
    1392:	08 95       	ret

00001394 <start>:
    1394:	80 e5       	ldi	r24, 0x50	; 80
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	0e 94 f6 03 	call	0x7ec	; 0x7ec <EEPROM_u8Read>
    139c:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <pass_check>
    13a0:	88 23       	and	r24, r24
    13a2:	09 f4       	brne	.+2      	; 0x13a6 <start+0x12>
    13a4:	6e c0       	rjmp	.+220    	; 0x1482 <start+0xee>
    13a6:	89 e3       	ldi	r24, 0x39	; 57
    13a8:	93 e0       	ldi	r25, 0x03	; 3
    13aa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    13ae:	61 e0       	ldi	r22, 0x01	; 1
    13b0:	82 e0       	ldi	r24, 0x02	; 2
    13b2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    13b6:	89 e4       	ldi	r24, 0x49	; 73
    13b8:	93 e0       	ldi	r25, 0x03	; 3
    13ba:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    13be:	0e 94 2d 09 	call	0x125a	; 0x125a <Scan_user>
    13c2:	61 e0       	ldi	r22, 0x01	; 1
    13c4:	83 e0       	ldi	r24, 0x03	; 3
    13c6:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    13ca:	8c e4       	ldi	r24, 0x4C	; 76
    13cc:	93 e0       	ldi	r25, 0x03	; 3
    13ce:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    13d2:	61 e0       	ldi	r22, 0x01	; 1
    13d4:	84 e0       	ldi	r24, 0x04	; 4
    13d6:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    13da:	89 e4       	ldi	r24, 0x49	; 73
    13dc:	93 e0       	ldi	r25, 0x03	; 3
    13de:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    13e2:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <Scan_pass>
    13e6:	80 e0       	ldi	r24, 0x00	; 0
    13e8:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <write_EEPROM>
    13ec:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    13f0:	8d e5       	ldi	r24, 0x5D	; 93
    13f2:	93 e0       	ldi	r25, 0x03	; 3
    13f4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    13f8:	61 e0       	ldi	r22, 0x01	; 1
    13fa:	82 e0       	ldi	r24, 0x02	; 2
    13fc:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1400:	84 ee       	ldi	r24, 0xE4	; 228
    1402:	91 e0       	ldi	r25, 0x01	; 1
    1404:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1408:	2f ef       	ldi	r18, 0xFF	; 255
    140a:	80 e7       	ldi	r24, 0x70	; 112
    140c:	92 e0       	ldi	r25, 0x02	; 2
    140e:	21 50       	subi	r18, 0x01	; 1
    1410:	80 40       	sbci	r24, 0x00	; 0
    1412:	90 40       	sbci	r25, 0x00	; 0
    1414:	e1 f7       	brne	.-8      	; 0x140e <start+0x7a>
    1416:	00 c0       	rjmp	.+0      	; 0x1418 <start+0x84>
    1418:	00 00       	nop
    141a:	60 e0       	ldi	r22, 0x00	; 0
    141c:	70 e0       	ldi	r23, 0x00	; 0
    141e:	80 e5       	ldi	r24, 0x50	; 80
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <EEPROM_vidWrite>
    1426:	80 e5       	ldi	r24, 0x50	; 80
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <EEPROM_u8Read>
    142e:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <pass_check>
    1432:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1436:	89 e6       	ldi	r24, 0x69	; 105
    1438:	93 e0       	ldi	r25, 0x03	; 3
    143a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    143e:	61 e0       	ldi	r22, 0x01	; 1
    1440:	82 e0       	ldi	r24, 0x02	; 2
    1442:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1446:	88 e7       	ldi	r24, 0x78	; 120
    1448:	93 e0       	ldi	r25, 0x03	; 3
    144a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    144e:	61 e0       	ldi	r22, 0x01	; 1
    1450:	83 e0       	ldi	r24, 0x03	; 3
    1452:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1456:	89 e4       	ldi	r24, 0x49	; 73
    1458:	93 e0       	ldi	r25, 0x03	; 3
    145a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    145e:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1462:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <choice>
    1466:	2f eb       	ldi	r18, 0xBF	; 191
    1468:	84 ed       	ldi	r24, 0xD4	; 212
    146a:	91 e0       	ldi	r25, 0x01	; 1
    146c:	21 50       	subi	r18, 0x01	; 1
    146e:	80 40       	sbci	r24, 0x00	; 0
    1470:	90 40       	sbci	r25, 0x00	; 0
    1472:	e1 f7       	brne	.-8      	; 0x146c <start+0xd8>
    1474:	00 c0       	rjmp	.+0      	; 0x1476 <start+0xe2>
    1476:	00 00       	nop
    1478:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <choice>
    147c:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <logInFlag>
    1480:	08 95       	ret
    1482:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1486:	89 e6       	ldi	r24, 0x69	; 105
    1488:	93 e0       	ldi	r25, 0x03	; 3
    148a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    148e:	61 e0       	ldi	r22, 0x01	; 1
    1490:	82 e0       	ldi	r24, 0x02	; 2
    1492:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1496:	88 e7       	ldi	r24, 0x78	; 120
    1498:	93 e0       	ldi	r25, 0x03	; 3
    149a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    149e:	61 e0       	ldi	r22, 0x01	; 1
    14a0:	83 e0       	ldi	r24, 0x03	; 3
    14a2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    14a6:	89 e4       	ldi	r24, 0x49	; 73
    14a8:	93 e0       	ldi	r25, 0x03	; 3
    14aa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    14ae:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    14b2:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <choice>
    14b6:	2f eb       	ldi	r18, 0xBF	; 191
    14b8:	84 ed       	ldi	r24, 0xD4	; 212
    14ba:	91 e0       	ldi	r25, 0x01	; 1
    14bc:	21 50       	subi	r18, 0x01	; 1
    14be:	80 40       	sbci	r24, 0x00	; 0
    14c0:	90 40       	sbci	r25, 0x00	; 0
    14c2:	e1 f7       	brne	.-8      	; 0x14bc <start+0x128>
    14c4:	00 c0       	rjmp	.+0      	; 0x14c6 <start+0x132>
    14c6:	00 00       	nop
    14c8:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <choice>
    14cc:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <logInFlag>
    14d0:	08 95       	ret

000014d2 <Isadmin>:
    14d2:	80 91 73 05 	lds	r24, 0x0573	; 0x800573 <logInFlag>
    14d6:	81 11       	cpse	r24, r1
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <Isadmin+0xc>
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	08 95       	ret
    14de:	80 e0       	ldi	r24, 0x00	; 0
    14e0:	08 95       	ret

000014e2 <LogOut>:
    14e2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    14e6:	61 e0       	ldi	r22, 0x01	; 1
    14e8:	82 e0       	ldi	r24, 0x02	; 2
    14ea:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    14ee:	85 e8       	ldi	r24, 0x85	; 133
    14f0:	93 e0       	ldi	r25, 0x03	; 3
    14f2:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    14f6:	61 e0       	ldi	r22, 0x01	; 1
    14f8:	83 e0       	ldi	r24, 0x03	; 3
    14fa:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    14fe:	81 e9       	ldi	r24, 0x91	; 145
    1500:	93 e0       	ldi	r25, 0x03	; 3
    1502:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1506:	2f e7       	ldi	r18, 0x7F	; 127
    1508:	8a e1       	ldi	r24, 0x1A	; 26
    150a:	96 e0       	ldi	r25, 0x06	; 6
    150c:	21 50       	subi	r18, 0x01	; 1
    150e:	80 40       	sbci	r24, 0x00	; 0
    1510:	90 40       	sbci	r25, 0x00	; 0
    1512:	e1 f7       	brne	.-8      	; 0x150c <LogOut+0x2a>
    1514:	00 c0       	rjmp	.+0      	; 0x1516 <LogOut+0x34>
    1516:	00 00       	nop
    1518:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    151c:	80 ea       	ldi	r24, 0xA0	; 160
    151e:	93 e0       	ldi	r25, 0x03	; 3
    1520:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1524:	61 e0       	ldi	r22, 0x01	; 1
    1526:	82 e0       	ldi	r24, 0x02	; 2
    1528:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    152c:	88 e7       	ldi	r24, 0x78	; 120
    152e:	93 e0       	ldi	r25, 0x03	; 3
    1530:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1534:	61 e0       	ldi	r22, 0x01	; 1
    1536:	83 e0       	ldi	r24, 0x03	; 3
    1538:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    153c:	89 e4       	ldi	r24, 0x49	; 73
    153e:	93 e0       	ldi	r25, 0x03	; 3
    1540:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1544:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1548:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    154c:	2f eb       	ldi	r18, 0xBF	; 191
    154e:	84 ed       	ldi	r24, 0xD4	; 212
    1550:	91 e0       	ldi	r25, 0x01	; 1
    1552:	21 50       	subi	r18, 0x01	; 1
    1554:	80 40       	sbci	r24, 0x00	; 0
    1556:	90 40       	sbci	r25, 0x00	; 0
    1558:	e1 f7       	brne	.-8      	; 0x1552 <LogOut+0x70>
    155a:	00 c0       	rjmp	.+0      	; 0x155c <LogOut+0x7a>
    155c:	00 00       	nop
    155e:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    1562:	81 33       	cpi	r24, 0x31	; 49
    1564:	19 f4       	brne	.+6      	; 0x156c <LogOut+0x8a>
    1566:	0e 94 01 0b 	call	0x1602	; 0x1602 <check_admin_pass>
    156a:	08 95       	ret
    156c:	82 33       	cpi	r24, 0x32	; 50
    156e:	19 f4       	brne	.+6      	; 0x1576 <LogOut+0x94>
    1570:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <check_user_pass>
    1574:	08 95       	ret
    1576:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    157a:	85 ea       	ldi	r24, 0xA5	; 165
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1582:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <LogOut>
    1586:	08 95       	ret

00001588 <admin_menue>:
    1588:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    158c:	8e ea       	ldi	r24, 0xAE	; 174
    158e:	93 e0       	ldi	r25, 0x03	; 3
    1590:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1594:	61 e0       	ldi	r22, 0x01	; 1
    1596:	82 e0       	ldi	r24, 0x02	; 2
    1598:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    159c:	8d eb       	ldi	r24, 0xBD	; 189
    159e:	93 e0       	ldi	r25, 0x03	; 3
    15a0:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    15a4:	61 e0       	ldi	r22, 0x01	; 1
    15a6:	83 e0       	ldi	r24, 0x03	; 3
    15a8:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    15ac:	88 ec       	ldi	r24, 0xC8	; 200
    15ae:	93 e0       	ldi	r25, 0x03	; 3
    15b0:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    15b4:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    15b8:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <choice>
    15bc:	2f e3       	ldi	r18, 0x3F	; 63
    15be:	8d e0       	ldi	r24, 0x0D	; 13
    15c0:	93 e0       	ldi	r25, 0x03	; 3
    15c2:	21 50       	subi	r18, 0x01	; 1
    15c4:	80 40       	sbci	r24, 0x00	; 0
    15c6:	90 40       	sbci	r25, 0x00	; 0
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <admin_menue+0x3a>
    15ca:	00 c0       	rjmp	.+0      	; 0x15cc <admin_menue+0x44>
    15cc:	00 00       	nop
    15ce:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <choice>
    15d2:	82 33       	cpi	r24, 0x32	; 50
    15d4:	39 f0       	breq	.+14     	; 0x15e4 <admin_menue+0x5c>
    15d6:	83 33       	cpi	r24, 0x33	; 51
    15d8:	41 f0       	breq	.+16     	; 0x15ea <admin_menue+0x62>
    15da:	81 33       	cpi	r24, 0x31	; 49
    15dc:	49 f4       	brne	.+18     	; 0x15f0 <admin_menue+0x68>
    15de:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
    15e2:	08 95       	ret
    15e4:	0e 94 b9 0b 	call	0x1772	; 0x1772 <add_user>
    15e8:	08 95       	ret
    15ea:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <LogOut>
    15ee:	08 95       	ret
    15f0:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    15f4:	85 ea       	ldi	r24, 0xA5	; 165
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    15fc:	0e 94 c4 0a 	call	0x1588	; 0x1588 <admin_menue>
    1600:	08 95       	ret

00001602 <check_admin_pass>:
    1602:	80 e0       	ldi	r24, 0x00	; 0
    1604:	0e 94 93 09 	call	0x1326	; 0x1326 <read_EEPROM>
    1608:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    160c:	82 ed       	ldi	r24, 0xD2	; 210
    160e:	93 e0       	ldi	r25, 0x03	; 3
    1610:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1614:	61 e0       	ldi	r22, 0x01	; 1
    1616:	82 e0       	ldi	r24, 0x02	; 2
    1618:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    161c:	89 e4       	ldi	r24, 0x49	; 73
    161e:	93 e0       	ldi	r25, 0x03	; 3
    1620:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1624:	0e 94 2d 09 	call	0x125a	; 0x125a <Scan_user>
    1628:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <check_user>
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	12 c0       	rjmp	.+36     	; 0x1654 <check_admin_pass+0x52>
    1630:	82 2f       	mov	r24, r18
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	fc 01       	movw	r30, r24
    1636:	e0 5a       	subi	r30, 0xA0	; 160
    1638:	fa 4f       	sbci	r31, 0xFA	; 250
    163a:	30 81       	ld	r19, Z
    163c:	fc 01       	movw	r30, r24
    163e:	e8 5a       	subi	r30, 0xA8	; 168
    1640:	fa 4f       	sbci	r31, 0xFA	; 250
    1642:	80 81       	ld	r24, Z
    1644:	38 13       	cpse	r19, r24
    1646:	05 c0       	rjmp	.+10     	; 0x1652 <check_admin_pass+0x50>
    1648:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
    164c:	8f 5f       	subi	r24, 0xFF	; 255
    164e:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <check_user>
    1652:	2f 5f       	subi	r18, 0xFF	; 255
    1654:	24 30       	cpi	r18, 0x04	; 4
    1656:	60 f3       	brcs	.-40     	; 0x1630 <check_admin_pass+0x2e>
    1658:	61 e0       	ldi	r22, 0x01	; 1
    165a:	83 e0       	ldi	r24, 0x03	; 3
    165c:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1660:	8e ed       	ldi	r24, 0xDE	; 222
    1662:	93 e0       	ldi	r25, 0x03	; 3
    1664:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1668:	61 e0       	ldi	r22, 0x01	; 1
    166a:	84 e0       	ldi	r24, 0x04	; 4
    166c:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1670:	89 e4       	ldi	r24, 0x49	; 73
    1672:	93 e0       	ldi	r25, 0x03	; 3
    1674:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1678:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <Scan_pass>
    167c:	10 92 6c 05 	sts	0x056C, r1	; 0x80056c <check>
    1680:	20 e0       	ldi	r18, 0x00	; 0
    1682:	12 c0       	rjmp	.+36     	; 0x16a8 <check_admin_pass+0xa6>
    1684:	82 2f       	mov	r24, r18
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	fc 01       	movw	r30, r24
    168a:	ec 5a       	subi	r30, 0xAC	; 172
    168c:	fa 4f       	sbci	r31, 0xFA	; 250
    168e:	30 81       	ld	r19, Z
    1690:	fc 01       	movw	r30, r24
    1692:	e3 59       	subi	r30, 0x93	; 147
    1694:	fa 4f       	sbci	r31, 0xFA	; 250
    1696:	80 81       	ld	r24, Z
    1698:	38 13       	cpse	r19, r24
    169a:	05 c0       	rjmp	.+10     	; 0x16a6 <check_admin_pass+0xa4>
    169c:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
    16a0:	8f 5f       	subi	r24, 0xFF	; 255
    16a2:	80 93 6c 05 	sts	0x056C, r24	; 0x80056c <check>
    16a6:	2f 5f       	subi	r18, 0xFF	; 255
    16a8:	24 30       	cpi	r18, 0x04	; 4
    16aa:	60 f3       	brcs	.-40     	; 0x1684 <check_admin_pass+0x82>
    16ac:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    16b0:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
    16b4:	84 30       	cpi	r24, 0x04	; 4
    16b6:	71 f5       	brne	.+92     	; 0x1714 <check_admin_pass+0x112>
    16b8:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
    16bc:	84 30       	cpi	r24, 0x04	; 4
    16be:	51 f5       	brne	.+84     	; 0x1714 <check_admin_pass+0x112>
    16c0:	63 e0       	ldi	r22, 0x03	; 3
    16c2:	70 e0       	ldi	r23, 0x00	; 0
    16c4:	83 e0       	ldi	r24, 0x03	; 3
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 89 05 	call	0xb12	; 0xb12 <LED_vidTurnOn>
    16cc:	64 e0       	ldi	r22, 0x04	; 4
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	83 e0       	ldi	r24, 0x03	; 3
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    16d8:	65 e0       	ldi	r22, 0x05	; 5
    16da:	70 e0       	ldi	r23, 0x00	; 0
    16dc:	83 e0       	ldi	r24, 0x03	; 3
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    16e4:	8e ee       	ldi	r24, 0xEE	; 238
    16e6:	93 e0       	ldi	r25, 0x03	; 3
    16e8:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    16ec:	2f e3       	ldi	r18, 0x3F	; 63
    16ee:	8d e0       	ldi	r24, 0x0D	; 13
    16f0:	93 e0       	ldi	r25, 0x03	; 3
    16f2:	21 50       	subi	r18, 0x01	; 1
    16f4:	80 40       	sbci	r24, 0x00	; 0
    16f6:	90 40       	sbci	r25, 0x00	; 0
    16f8:	e1 f7       	brne	.-8      	; 0x16f2 <check_admin_pass+0xf0>
    16fa:	00 c0       	rjmp	.+0      	; 0x16fc <check_admin_pass+0xfa>
    16fc:	00 00       	nop
    16fe:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <__data_end>
    1702:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1706:	8f ef       	ldi	r24, 0xFF	; 255
    1708:	93 e0       	ldi	r25, 0x03	; 3
    170a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    170e:	0e 94 c4 0a 	call	0x1588	; 0x1588 <admin_menue>
    1712:	25 c0       	rjmp	.+74     	; 0x175e <check_admin_pass+0x15c>
    1714:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    1718:	8f 5f       	subi	r24, 0xFF	; 255
    171a:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <__data_end>
    171e:	8b e0       	ldi	r24, 0x0B	; 11
    1720:	94 e0       	ldi	r25, 0x04	; 4
    1722:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1726:	61 e0       	ldi	r22, 0x01	; 1
    1728:	82 e0       	ldi	r24, 0x02	; 2
    172a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    172e:	8a e1       	ldi	r24, 0x1A	; 26
    1730:	94 e0       	ldi	r25, 0x04	; 4
    1732:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1736:	61 e0       	ldi	r22, 0x01	; 1
    1738:	83 e0       	ldi	r24, 0x03	; 3
    173a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    173e:	82 e2       	ldi	r24, 0x22	; 34
    1740:	94 e0       	ldi	r25, 0x04	; 4
    1742:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1746:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    174a:	63 e0       	ldi	r22, 0x03	; 3
    174c:	70 e0       	ldi	r23, 0x00	; 0
    174e:	68 1b       	sub	r22, r24
    1750:	71 09       	sbc	r23, r1
    1752:	07 2e       	mov	r0, r23
    1754:	00 0c       	add	r0, r0
    1756:	88 0b       	sbc	r24, r24
    1758:	99 0b       	sbc	r25, r25
    175a:	0e 94 39 05 	call	0xa72	; 0xa72 <LCD_vidDisplayNumber>
    175e:	2f e7       	ldi	r18, 0x7F	; 127
    1760:	88 e3       	ldi	r24, 0x38	; 56
    1762:	91 e0       	ldi	r25, 0x01	; 1
    1764:	21 50       	subi	r18, 0x01	; 1
    1766:	80 40       	sbci	r24, 0x00	; 0
    1768:	90 40       	sbci	r25, 0x00	; 0
    176a:	e1 f7       	brne	.-8      	; 0x1764 <check_admin_pass+0x162>
    176c:	00 c0       	rjmp	.+0      	; 0x176e <check_admin_pass+0x16c>
    176e:	00 00       	nop
    1770:	08 95       	ret

00001772 <add_user>:
    1772:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1776:	8d e2       	ldi	r24, 0x2D	; 45
    1778:	94 e0       	ldi	r25, 0x04	; 4
    177a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    177e:	61 e0       	ldi	r22, 0x01	; 1
    1780:	83 e0       	ldi	r24, 0x03	; 3
    1782:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1786:	88 e3       	ldi	r24, 0x38	; 56
    1788:	94 e0       	ldi	r25, 0x04	; 4
    178a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    178e:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1792:	80 93 74 05 	sts	0x0574, r24	; 0x800574 <UserId>
    1796:	2f ef       	ldi	r18, 0xFF	; 255
    1798:	80 e7       	ldi	r24, 0x70	; 112
    179a:	92 e0       	ldi	r25, 0x02	; 2
    179c:	21 50       	subi	r18, 0x01	; 1
    179e:	80 40       	sbci	r24, 0x00	; 0
    17a0:	90 40       	sbci	r25, 0x00	; 0
    17a2:	e1 f7       	brne	.-8      	; 0x179c <add_user+0x2a>
    17a4:	00 c0       	rjmp	.+0      	; 0x17a6 <add_user+0x34>
    17a6:	00 00       	nop
    17a8:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    17ac:	84 e4       	ldi	r24, 0x44	; 68
    17ae:	94 e0       	ldi	r25, 0x04	; 4
    17b0:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    17b4:	61 e0       	ldi	r22, 0x01	; 1
    17b6:	82 e0       	ldi	r24, 0x02	; 2
    17b8:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    17bc:	89 e4       	ldi	r24, 0x49	; 73
    17be:	93 e0       	ldi	r25, 0x03	; 3
    17c0:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    17c4:	0e 94 2d 09 	call	0x125a	; 0x125a <Scan_user>
    17c8:	61 e0       	ldi	r22, 0x01	; 1
    17ca:	83 e0       	ldi	r24, 0x03	; 3
    17cc:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    17d0:	8c e4       	ldi	r24, 0x4C	; 76
    17d2:	93 e0       	ldi	r25, 0x03	; 3
    17d4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    17d8:	61 e0       	ldi	r22, 0x01	; 1
    17da:	84 e0       	ldi	r24, 0x04	; 4
    17dc:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    17e0:	89 e4       	ldi	r24, 0x49	; 73
    17e2:	93 e0       	ldi	r25, 0x03	; 3
    17e4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    17e8:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <Scan_pass>
    17ec:	80 91 74 05 	lds	r24, 0x0574	; 0x800574 <UserId>
    17f0:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <write_EEPROM>
    17f4:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    17f8:	8d e5       	ldi	r24, 0x5D	; 93
    17fa:	93 e0       	ldi	r25, 0x03	; 3
    17fc:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1800:	61 e0       	ldi	r22, 0x01	; 1
    1802:	82 e0       	ldi	r24, 0x02	; 2
    1804:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1808:	84 ee       	ldi	r24, 0xE4	; 228
    180a:	91 e0       	ldi	r25, 0x01	; 1
    180c:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1810:	2f e3       	ldi	r18, 0x3F	; 63
    1812:	8d e0       	ldi	r24, 0x0D	; 13
    1814:	93 e0       	ldi	r25, 0x03	; 3
    1816:	21 50       	subi	r18, 0x01	; 1
    1818:	80 40       	sbci	r24, 0x00	; 0
    181a:	90 40       	sbci	r25, 0x00	; 0
    181c:	e1 f7       	brne	.-8      	; 0x1816 <add_user+0xa4>
    181e:	00 c0       	rjmp	.+0      	; 0x1820 <add_user+0xae>
    1820:	00 00       	nop
    1822:	0e 94 c4 0a 	call	0x1588	; 0x1588 <admin_menue>
    1826:	08 95       	ret

00001828 <User_menue>:
    1828:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    182c:	81 e5       	ldi	r24, 0x51	; 81
    182e:	94 e0       	ldi	r25, 0x04	; 4
    1830:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1834:	61 e0       	ldi	r22, 0x01	; 1
    1836:	82 e0       	ldi	r24, 0x02	; 2
    1838:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    183c:	81 e6       	ldi	r24, 0x61	; 97
    183e:	94 e0       	ldi	r25, 0x04	; 4
    1840:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1844:	61 e0       	ldi	r22, 0x01	; 1
    1846:	83 e0       	ldi	r24, 0x03	; 3
    1848:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    184c:	81 e7       	ldi	r24, 0x71	; 113
    184e:	94 e0       	ldi	r25, 0x04	; 4
    1850:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1854:	61 e0       	ldi	r22, 0x01	; 1
    1856:	84 e0       	ldi	r24, 0x04	; 4
    1858:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    185c:	8b e7       	ldi	r24, 0x7B	; 123
    185e:	94 e0       	ldi	r25, 0x04	; 4
    1860:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1864:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1868:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <choice>
    186c:	2f eb       	ldi	r18, 0xBF	; 191
    186e:	84 ed       	ldi	r24, 0xD4	; 212
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	21 50       	subi	r18, 0x01	; 1
    1874:	80 40       	sbci	r24, 0x00	; 0
    1876:	90 40       	sbci	r25, 0x00	; 0
    1878:	e1 f7       	brne	.-8      	; 0x1872 <User_menue+0x4a>
    187a:	00 c0       	rjmp	.+0      	; 0x187c <User_menue+0x54>
    187c:	00 00       	nop
    187e:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <choice>
    1882:	82 33       	cpi	r24, 0x32	; 50
    1884:	61 f0       	breq	.+24     	; 0x189e <User_menue+0x76>
    1886:	18 f4       	brcc	.+6      	; 0x188e <User_menue+0x66>
    1888:	81 33       	cpi	r24, 0x31	; 49
    188a:	31 f0       	breq	.+12     	; 0x1898 <User_menue+0x70>
    188c:	12 c0       	rjmp	.+36     	; 0x18b2 <User_menue+0x8a>
    188e:	83 33       	cpi	r24, 0x33	; 51
    1890:	49 f0       	breq	.+18     	; 0x18a4 <User_menue+0x7c>
    1892:	84 33       	cpi	r24, 0x34	; 52
    1894:	51 f0       	breq	.+20     	; 0x18aa <User_menue+0x82>
    1896:	0d c0       	rjmp	.+26     	; 0x18b2 <User_menue+0x8a>
    1898:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <Print>
    189c:	08 95       	ret
    189e:	0e 94 72 01 	call	0x2e4	; 0x2e4 <Air_condition>
    18a2:	08 95       	ret
    18a4:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <LogOut>
    18a8:	08 95       	ret
    18aa:	8a e0       	ldi	r24, 0x0A	; 10
    18ac:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    18b0:	08 95       	ret
    18b2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    18b6:	80 e8       	ldi	r24, 0x80	; 128
    18b8:	94 e0       	ldi	r25, 0x04	; 4
    18ba:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    18be:	0e 94 14 0c 	call	0x1828	; 0x1828 <User_menue>
    18c2:	08 95       	ret

000018c4 <Print>:
    18c4:	c1 e0       	ldi	r28, 0x01	; 1
    18c6:	8f ef       	ldi	r24, 0xFF	; 255
    18c8:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    18cc:	8c 2f       	mov	r24, r28
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	fc 01       	movw	r30, r24
    18d2:	31 97       	sbiw	r30, 0x01	; 1
    18d4:	e8 30       	cpi	r30, 0x08	; 8
    18d6:	f1 05       	cpc	r31, r1
    18d8:	b0 f7       	brcc	.-20     	; 0x18c6 <Print+0x2>
    18da:	ed 58       	subi	r30, 0x8D	; 141
    18dc:	ff 4f       	sbci	r31, 0xFF	; 255
    18de:	0c 94 9a 10 	jmp	0x2134	; 0x2134 <__tablejump2__>
    18e2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    18e6:	8c e8       	ldi	r24, 0x8C	; 140
    18e8:	94 e0       	ldi	r25, 0x04	; 4
    18ea:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    18ee:	61 e0       	ldi	r22, 0x01	; 1
    18f0:	82 e0       	ldi	r24, 0x02	; 2
    18f2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    18f6:	8d e9       	ldi	r24, 0x9D	; 157
    18f8:	94 e0       	ldi	r25, 0x04	; 4
    18fa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    18fe:	61 e0       	ldi	r22, 0x01	; 1
    1900:	83 e0       	ldi	r24, 0x03	; 3
    1902:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1906:	8e ea       	ldi	r24, 0xAE	; 174
    1908:	94 e0       	ldi	r25, 0x04	; 4
    190a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    190e:	61 e0       	ldi	r22, 0x01	; 1
    1910:	84 e0       	ldi	r24, 0x04	; 4
    1912:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1916:	8e eb       	ldi	r24, 0xBE	; 190
    1918:	94 e0       	ldi	r25, 0x04	; 4
    191a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    191e:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1922:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    1926:	2f ef       	ldi	r18, 0xFF	; 255
    1928:	80 e7       	ldi	r24, 0x70	; 112
    192a:	92 e0       	ldi	r25, 0x02	; 2
    192c:	21 50       	subi	r18, 0x01	; 1
    192e:	80 40       	sbci	r24, 0x00	; 0
    1930:	90 40       	sbci	r25, 0x00	; 0
    1932:	e1 f7       	brne	.-8      	; 0x192c <Print+0x68>
    1934:	00 c0       	rjmp	.+0      	; 0x1936 <Print+0x72>
    1936:	00 00       	nop
    1938:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    193c:	81 33       	cpi	r24, 0x31	; 49
    193e:	41 f1       	breq	.+80     	; 0x1990 <Print+0xcc>
    1940:	82 33       	cpi	r24, 0x32	; 50
    1942:	41 f1       	breq	.+80     	; 0x1994 <Print+0xd0>
    1944:	83 33       	cpi	r24, 0x33	; 51
    1946:	41 f1       	breq	.+80     	; 0x1998 <Print+0xd4>
    1948:	84 33       	cpi	r24, 0x34	; 52
    194a:	41 f1       	breq	.+80     	; 0x199c <Print+0xd8>
    194c:	85 33       	cpi	r24, 0x35	; 53
    194e:	41 f1       	breq	.+80     	; 0x19a0 <Print+0xdc>
    1950:	86 33       	cpi	r24, 0x36	; 54
    1952:	41 f1       	breq	.+80     	; 0x19a4 <Print+0xe0>
    1954:	80 33       	cpi	r24, 0x30	; 48
    1956:	51 f4       	brne	.+20     	; 0x196c <Print+0xa8>
    1958:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <Isadmin>
    195c:	81 30       	cpi	r24, 0x01	; 1
    195e:	19 f4       	brne	.+6      	; 0x1966 <Print+0xa2>
    1960:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
    1964:	20 c0       	rjmp	.+64     	; 0x19a6 <Print+0xe2>
    1966:	0e 94 14 0c 	call	0x1828	; 0x1828 <User_menue>
    196a:	1d c0       	rjmp	.+58     	; 0x19a6 <Print+0xe2>
    196c:	8f 3f       	cpi	r24, 0xFF	; 255
    196e:	d9 f0       	breq	.+54     	; 0x19a6 <Print+0xe2>
    1970:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1974:	80 e8       	ldi	r24, 0x80	; 128
    1976:	94 e0       	ldi	r25, 0x04	; 4
    1978:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    197c:	2f e3       	ldi	r18, 0x3F	; 63
    197e:	8d e0       	ldi	r24, 0x0D	; 13
    1980:	93 e0       	ldi	r25, 0x03	; 3
    1982:	21 50       	subi	r18, 0x01	; 1
    1984:	80 40       	sbci	r24, 0x00	; 0
    1986:	90 40       	sbci	r25, 0x00	; 0
    1988:	e1 f7       	brne	.-8      	; 0x1982 <Print+0xbe>
    198a:	00 c0       	rjmp	.+0      	; 0x198c <Print+0xc8>
    198c:	00 00       	nop
    198e:	0b c0       	rjmp	.+22     	; 0x19a6 <Print+0xe2>
    1990:	c3 e0       	ldi	r28, 0x03	; 3
    1992:	09 c0       	rjmp	.+18     	; 0x19a6 <Print+0xe2>
    1994:	c4 e0       	ldi	r28, 0x04	; 4
    1996:	07 c0       	rjmp	.+14     	; 0x19a6 <Print+0xe2>
    1998:	c5 e0       	ldi	r28, 0x05	; 5
    199a:	05 c0       	rjmp	.+10     	; 0x19a6 <Print+0xe2>
    199c:	c6 e0       	ldi	r28, 0x06	; 6
    199e:	03 c0       	rjmp	.+6      	; 0x19a6 <Print+0xe2>
    19a0:	c7 e0       	ldi	r28, 0x07	; 7
    19a2:	01 c0       	rjmp	.+2      	; 0x19a6 <Print+0xe2>
    19a4:	c8 e0       	ldi	r28, 0x08	; 8
    19a6:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    19aa:	80 53       	subi	r24, 0x30	; 48
    19ac:	87 30       	cpi	r24, 0x07	; 7
    19ae:	08 f0       	brcs	.+2      	; 0x19b2 <Print+0xee>
    19b0:	98 cf       	rjmp	.-208    	; 0x18e2 <Print+0x1e>
    19b2:	89 cf       	rjmp	.-238    	; 0x18c6 <Print+0x2>
    19b4:	83 e0       	ldi	r24, 0x03	; 3
    19b6:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19ba:	c1 e0       	ldi	r28, 0x01	; 1
    19bc:	84 cf       	rjmp	.-248    	; 0x18c6 <Print+0x2>
    19be:	84 e0       	ldi	r24, 0x04	; 4
    19c0:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19c4:	c1 e0       	ldi	r28, 0x01	; 1
    19c6:	7f cf       	rjmp	.-258    	; 0x18c6 <Print+0x2>
    19c8:	85 e0       	ldi	r24, 0x05	; 5
    19ca:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19ce:	c1 e0       	ldi	r28, 0x01	; 1
    19d0:	7a cf       	rjmp	.-268    	; 0x18c6 <Print+0x2>
    19d2:	86 e0       	ldi	r24, 0x06	; 6
    19d4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19d8:	c1 e0       	ldi	r28, 0x01	; 1
    19da:	75 cf       	rjmp	.-278    	; 0x18c6 <Print+0x2>
    19dc:	87 e0       	ldi	r24, 0x07	; 7
    19de:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19e2:	c1 e0       	ldi	r28, 0x01	; 1
    19e4:	70 cf       	rjmp	.-288    	; 0x18c6 <Print+0x2>
    19e6:	88 e0       	ldi	r24, 0x08	; 8
    19e8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <control_rooms>
    19ec:	c1 e0       	ldi	r28, 0x01	; 1
    19ee:	6b cf       	rjmp	.-298    	; 0x18c6 <Print+0x2>

000019f0 <check_user_pass>:
    19f0:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    19f4:	8b ec       	ldi	r24, 0xCB	; 203
    19f6:	94 e0       	ldi	r25, 0x04	; 4
    19f8:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    19fc:	61 e0       	ldi	r22, 0x01	; 1
    19fe:	82 e0       	ldi	r24, 0x02	; 2
    1a00:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1a04:	89 ed       	ldi	r24, 0xD9	; 217
    1a06:	94 e0       	ldi	r25, 0x04	; 4
    1a08:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1a0c:	61 e0       	ldi	r22, 0x01	; 1
    1a0e:	83 e0       	ldi	r24, 0x03	; 3
    1a10:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1a14:	83 e3       	ldi	r24, 0x33	; 51
    1a16:	92 e0       	ldi	r25, 0x02	; 2
    1a18:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1a1c:	61 e0       	ldi	r22, 0x01	; 1
    1a1e:	84 e0       	ldi	r24, 0x04	; 4
    1a20:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1a24:	87 ec       	ldi	r24, 0xC7	; 199
    1a26:	94 e0       	ldi	r25, 0x04	; 4
    1a28:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1a2c:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1a30:	80 93 74 05 	sts	0x0574, r24	; 0x800574 <UserId>
    1a34:	0e 94 93 09 	call	0x1326	; 0x1326 <read_EEPROM>
    1a38:	2f ef       	ldi	r18, 0xFF	; 255
    1a3a:	80 e7       	ldi	r24, 0x70	; 112
    1a3c:	92 e0       	ldi	r25, 0x02	; 2
    1a3e:	21 50       	subi	r18, 0x01	; 1
    1a40:	80 40       	sbci	r24, 0x00	; 0
    1a42:	90 40       	sbci	r25, 0x00	; 0
    1a44:	e1 f7       	brne	.-8      	; 0x1a3e <check_user_pass+0x4e>
    1a46:	00 c0       	rjmp	.+0      	; 0x1a48 <check_user_pass+0x58>
    1a48:	00 00       	nop
    1a4a:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1a4e:	88 ee       	ldi	r24, 0xE8	; 232
    1a50:	94 e0       	ldi	r25, 0x04	; 4
    1a52:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1a56:	61 e0       	ldi	r22, 0x01	; 1
    1a58:	82 e0       	ldi	r24, 0x02	; 2
    1a5a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1a5e:	89 e4       	ldi	r24, 0x49	; 73
    1a60:	93 e0       	ldi	r25, 0x03	; 3
    1a62:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1a66:	0e 94 2d 09 	call	0x125a	; 0x125a <Scan_user>
    1a6a:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <check_user>
    1a6e:	20 e0       	ldi	r18, 0x00	; 0
    1a70:	12 c0       	rjmp	.+36     	; 0x1a96 <check_user_pass+0xa6>
    1a72:	82 2f       	mov	r24, r18
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	fc 01       	movw	r30, r24
    1a78:	e0 5a       	subi	r30, 0xA0	; 160
    1a7a:	fa 4f       	sbci	r31, 0xFA	; 250
    1a7c:	30 81       	ld	r19, Z
    1a7e:	fc 01       	movw	r30, r24
    1a80:	e8 5a       	subi	r30, 0xA8	; 168
    1a82:	fa 4f       	sbci	r31, 0xFA	; 250
    1a84:	80 81       	ld	r24, Z
    1a86:	38 13       	cpse	r19, r24
    1a88:	05 c0       	rjmp	.+10     	; 0x1a94 <check_user_pass+0xa4>
    1a8a:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
    1a8e:	8f 5f       	subi	r24, 0xFF	; 255
    1a90:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <check_user>
    1a94:	2f 5f       	subi	r18, 0xFF	; 255
    1a96:	24 30       	cpi	r18, 0x04	; 4
    1a98:	60 f3       	brcs	.-40     	; 0x1a72 <check_user_pass+0x82>
    1a9a:	61 e0       	ldi	r22, 0x01	; 1
    1a9c:	83 e0       	ldi	r24, 0x03	; 3
    1a9e:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1aa2:	8e ed       	ldi	r24, 0xDE	; 222
    1aa4:	93 e0       	ldi	r25, 0x03	; 3
    1aa6:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1aaa:	61 e0       	ldi	r22, 0x01	; 1
    1aac:	84 e0       	ldi	r24, 0x04	; 4
    1aae:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1ab2:	89 e4       	ldi	r24, 0x49	; 73
    1ab4:	93 e0       	ldi	r25, 0x03	; 3
    1ab6:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1aba:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <Scan_pass>
    1abe:	10 92 6c 05 	sts	0x056C, r1	; 0x80056c <check>
    1ac2:	20 e0       	ldi	r18, 0x00	; 0
    1ac4:	12 c0       	rjmp	.+36     	; 0x1aea <check_user_pass+0xfa>
    1ac6:	82 2f       	mov	r24, r18
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	fc 01       	movw	r30, r24
    1acc:	ec 5a       	subi	r30, 0xAC	; 172
    1ace:	fa 4f       	sbci	r31, 0xFA	; 250
    1ad0:	30 81       	ld	r19, Z
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	e3 59       	subi	r30, 0x93	; 147
    1ad6:	fa 4f       	sbci	r31, 0xFA	; 250
    1ad8:	80 81       	ld	r24, Z
    1ada:	38 13       	cpse	r19, r24
    1adc:	05 c0       	rjmp	.+10     	; 0x1ae8 <check_user_pass+0xf8>
    1ade:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
    1ae2:	8f 5f       	subi	r24, 0xFF	; 255
    1ae4:	80 93 6c 05 	sts	0x056C, r24	; 0x80056c <check>
    1ae8:	2f 5f       	subi	r18, 0xFF	; 255
    1aea:	24 30       	cpi	r18, 0x04	; 4
    1aec:	60 f3       	brcs	.-40     	; 0x1ac6 <check_user_pass+0xd6>
    1aee:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1af2:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <check>
    1af6:	84 30       	cpi	r24, 0x04	; 4
    1af8:	69 f5       	brne	.+90     	; 0x1b54 <check_user_pass+0x164>
    1afa:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <check_user>
    1afe:	84 30       	cpi	r24, 0x04	; 4
    1b00:	49 f5       	brne	.+82     	; 0x1b54 <check_user_pass+0x164>
    1b02:	64 e0       	ldi	r22, 0x04	; 4
    1b04:	70 e0       	ldi	r23, 0x00	; 0
    1b06:	83 e0       	ldi	r24, 0x03	; 3
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	0e 94 89 05 	call	0xb12	; 0xb12 <LED_vidTurnOn>
    1b0e:	63 e0       	ldi	r22, 0x03	; 3
    1b10:	70 e0       	ldi	r23, 0x00	; 0
    1b12:	83 e0       	ldi	r24, 0x03	; 3
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    1b1a:	65 e0       	ldi	r22, 0x05	; 5
    1b1c:	70 e0       	ldi	r23, 0x00	; 0
    1b1e:	83 e0       	ldi	r24, 0x03	; 3
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    1b26:	8e ee       	ldi	r24, 0xEE	; 238
    1b28:	93 e0       	ldi	r25, 0x03	; 3
    1b2a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1b2e:	2f e3       	ldi	r18, 0x3F	; 63
    1b30:	8d e0       	ldi	r24, 0x0D	; 13
    1b32:	93 e0       	ldi	r25, 0x03	; 3
    1b34:	21 50       	subi	r18, 0x01	; 1
    1b36:	80 40       	sbci	r24, 0x00	; 0
    1b38:	90 40       	sbci	r25, 0x00	; 0
    1b3a:	e1 f7       	brne	.-8      	; 0x1b34 <check_user_pass+0x144>
    1b3c:	00 c0       	rjmp	.+0      	; 0x1b3e <check_user_pass+0x14e>
    1b3e:	00 00       	nop
    1b40:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <__data_end>
    1b44:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1b48:	8f ef       	ldi	r24, 0xFF	; 255
    1b4a:	93 e0       	ldi	r25, 0x03	; 3
    1b4c:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1b50:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <Print>
    1b54:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    1b58:	8f 5f       	subi	r24, 0xFF	; 255
    1b5a:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <__data_end>
    1b5e:	8b e0       	ldi	r24, 0x0B	; 11
    1b60:	94 e0       	ldi	r25, 0x04	; 4
    1b62:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1b66:	61 e0       	ldi	r22, 0x01	; 1
    1b68:	82 e0       	ldi	r24, 0x02	; 2
    1b6a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1b6e:	8a e1       	ldi	r24, 0x1A	; 26
    1b70:	94 e0       	ldi	r25, 0x04	; 4
    1b72:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1b76:	61 e0       	ldi	r22, 0x01	; 1
    1b78:	83 e0       	ldi	r24, 0x03	; 3
    1b7a:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1b7e:	82 e2       	ldi	r24, 0x22	; 34
    1b80:	94 e0       	ldi	r25, 0x04	; 4
    1b82:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1b86:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    1b8a:	63 e0       	ldi	r22, 0x03	; 3
    1b8c:	70 e0       	ldi	r23, 0x00	; 0
    1b8e:	68 1b       	sub	r22, r24
    1b90:	71 09       	sbc	r23, r1
    1b92:	07 2e       	mov	r0, r23
    1b94:	00 0c       	add	r0, r0
    1b96:	88 0b       	sbc	r24, r24
    1b98:	99 0b       	sbc	r25, r25
    1b9a:	0e 94 39 05 	call	0xa72	; 0xa72 <LCD_vidDisplayNumber>
    1b9e:	2f e7       	ldi	r18, 0x7F	; 127
    1ba0:	88 e3       	ldi	r24, 0x38	; 56
    1ba2:	91 e0       	ldi	r25, 0x01	; 1
    1ba4:	21 50       	subi	r18, 0x01	; 1
    1ba6:	80 40       	sbci	r24, 0x00	; 0
    1ba8:	90 40       	sbci	r25, 0x00	; 0
    1baa:	e1 f7       	brne	.-8      	; 0x1ba4 <check_user_pass+0x1b4>
    1bac:	00 c0       	rjmp	.+0      	; 0x1bae <check_user_pass+0x1be>
    1bae:	00 00       	nop
    1bb0:	08 95       	ret

00001bb2 <smart_lock>:
    1bb2:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <choice>
    1bb6:	81 33       	cpi	r24, 0x31	; 49
    1bb8:	21 f0       	breq	.+8      	; 0x1bc2 <smart_lock+0x10>
    1bba:	90 91 75 05 	lds	r25, 0x0575	; 0x800575 <recive>
    1bbe:	91 34       	cpi	r25, 0x41	; 65
    1bc0:	29 f4       	brne	.+10     	; 0x1bcc <smart_lock+0x1a>
    1bc2:	10 92 73 05 	sts	0x0573, r1	; 0x800573 <logInFlag>
    1bc6:	0e 94 01 0b 	call	0x1602	; 0x1602 <check_admin_pass>
    1bca:	10 c0       	rjmp	.+32     	; 0x1bec <smart_lock+0x3a>
    1bcc:	82 33       	cpi	r24, 0x32	; 50
    1bce:	31 f4       	brne	.+12     	; 0x1bdc <smart_lock+0x2a>
    1bd0:	81 e0       	ldi	r24, 0x01	; 1
    1bd2:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <logInFlag>
    1bd6:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <check_user_pass>
    1bda:	08 c0       	rjmp	.+16     	; 0x1bec <smart_lock+0x3a>
    1bdc:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1be0:	87 ef       	ldi	r24, 0xF7	; 247
    1be2:	94 e0       	ldi	r25, 0x04	; 4
    1be4:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1be8:	0e 94 ca 09 	call	0x1394	; 0x1394 <start>
    1bec:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    1bf0:	83 30       	cpi	r24, 0x03	; 3
    1bf2:	59 f5       	brne	.+86     	; 0x1c4a <smart_lock+0x98>
    1bf4:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1bf8:	84 e0       	ldi	r24, 0x04	; 4
    1bfa:	95 e0       	ldi	r25, 0x05	; 5
    1bfc:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c00:	65 e0       	ldi	r22, 0x05	; 5
    1c02:	70 e0       	ldi	r23, 0x00	; 0
    1c04:	81 e0       	ldi	r24, 0x01	; 1
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 89 05 	call	0xb12	; 0xb12 <LED_vidTurnOn>
    1c0c:	64 e0       	ldi	r22, 0x04	; 4
    1c0e:	70 e0       	ldi	r23, 0x00	; 0
    1c10:	83 e0       	ldi	r24, 0x03	; 3
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    1c18:	63 e0       	ldi	r22, 0x03	; 3
    1c1a:	70 e0       	ldi	r23, 0x00	; 0
    1c1c:	83 e0       	ldi	r24, 0x03	; 3
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	0e 94 8d 05 	call	0xb1a	; 0xb1a <LED_vidTurnOff>
    1c24:	41 e0       	ldi	r20, 0x01	; 1
    1c26:	67 e0       	ldi	r22, 0x07	; 7
    1c28:	83 e0       	ldi	r24, 0x03	; 3
    1c2a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
    1c2e:	2f ef       	ldi	r18, 0xFF	; 255
    1c30:	8a e1       	ldi	r24, 0x1A	; 26
    1c32:	97 eb       	ldi	r25, 0xB7	; 183
    1c34:	21 50       	subi	r18, 0x01	; 1
    1c36:	80 40       	sbci	r24, 0x00	; 0
    1c38:	90 40       	sbci	r25, 0x00	; 0
    1c3a:	e1 f7       	brne	.-8      	; 0x1c34 <smart_lock+0x82>
    1c3c:	00 c0       	rjmp	.+0      	; 0x1c3e <smart_lock+0x8c>
    1c3e:	00 00       	nop
    1c40:	40 e0       	ldi	r20, 0x00	; 0
    1c42:	67 e0       	ldi	r22, 0x07	; 7
    1c44:	83 e0       	ldi	r24, 0x03	; 3
    1c46:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_vidWritePin>
    1c4a:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <__data_end>
    1c4e:	08 95       	ret

00001c50 <open_door>:
    1c50:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1c54:	82 e1       	ldi	r24, 0x12	; 18
    1c56:	95 e0       	ldi	r25, 0x05	; 5
    1c58:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c5c:	65 e0       	ldi	r22, 0x05	; 5
    1c5e:	83 e0       	ldi	r24, 0x03	; 3
    1c60:	0e 94 1d 03 	call	0x63a	; 0x63a <DIO_enuReadPin>
    1c64:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <response>
    1c68:	81 30       	cpi	r24, 0x01	; 1
    1c6a:	29 f4       	brne	.+10     	; 0x1c76 <open_door+0x26>
    1c6c:	80 e2       	ldi	r24, 0x20	; 32
    1c6e:	95 e0       	ldi	r25, 0x05	; 5
    1c70:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c74:	04 c0       	rjmp	.+8      	; 0x1c7e <open_door+0x2e>
    1c76:	83 e2       	ldi	r24, 0x23	; 35
    1c78:	95 e0       	ldi	r25, 0x05	; 5
    1c7a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c7e:	61 e0       	ldi	r22, 0x01	; 1
    1c80:	82 e0       	ldi	r24, 0x02	; 2
    1c82:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1c86:	87 e2       	ldi	r24, 0x27	; 39
    1c88:	95 e0       	ldi	r25, 0x05	; 5
    1c8a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c8e:	61 e0       	ldi	r22, 0x01	; 1
    1c90:	83 e0       	ldi	r24, 0x03	; 3
    1c92:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1c96:	80 e3       	ldi	r24, 0x30	; 48
    1c98:	95 e0       	ldi	r25, 0x05	; 5
    1c9a:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1c9e:	61 e0       	ldi	r22, 0x01	; 1
    1ca0:	84 e0       	ldi	r24, 0x04	; 4
    1ca2:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vidMoveCursor>
    1ca6:	8a e3       	ldi	r24, 0x3A	; 58
    1ca8:	95 e0       	ldi	r25, 0x05	; 5
    1caa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1cae:	0e 94 11 02 	call	0x422	; 0x422 <u8GetKeyPressed>
    1cb2:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <u8ReturnedValue>
    1cb6:	2f ef       	ldi	r18, 0xFF	; 255
    1cb8:	80 e7       	ldi	r24, 0x70	; 112
    1cba:	92 e0       	ldi	r25, 0x02	; 2
    1cbc:	21 50       	subi	r18, 0x01	; 1
    1cbe:	80 40       	sbci	r24, 0x00	; 0
    1cc0:	90 40       	sbci	r25, 0x00	; 0
    1cc2:	e1 f7       	brne	.-8      	; 0x1cbc <open_door+0x6c>
    1cc4:	00 c0       	rjmp	.+0      	; 0x1cc6 <open_door+0x76>
    1cc6:	00 00       	nop
    1cc8:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <u8ReturnedValue>
    1ccc:	81 33       	cpi	r24, 0x31	; 49
    1cce:	29 f4       	brne	.+10     	; 0x1cda <open_door+0x8a>
    1cd0:	8a e5       	ldi	r24, 0x5A	; 90
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	0e 94 c6 08 	call	0x118c	; 0x118c <Servo_Clockwise>
    1cd8:	14 c0       	rjmp	.+40     	; 0x1d02 <open_door+0xb2>
    1cda:	82 33       	cpi	r24, 0x32	; 50
    1cdc:	29 f4       	brne	.+10     	; 0x1ce8 <open_door+0x98>
    1cde:	8a e5       	ldi	r24, 0x5A	; 90
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	0e 94 df 08 	call	0x11be	; 0x11be <Servo_Counterclockwise>
    1ce6:	0d c0       	rjmp	.+26     	; 0x1d02 <open_door+0xb2>
    1ce8:	80 33       	cpi	r24, 0x30	; 48
    1cea:	19 f4       	brne	.+6      	; 0x1cf2 <open_door+0xa2>
    1cec:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
    1cf0:	08 c0       	rjmp	.+16     	; 0x1d02 <open_door+0xb2>
    1cf2:	0e 94 67 05 	call	0xace	; 0xace <LCD_vidClearScreen>
    1cf6:	84 e4       	ldi	r24, 0x44	; 68
    1cf8:	95 e0       	ldi	r25, 0x05	; 5
    1cfa:	0e 94 2c 05 	call	0xa58	; 0xa58 <LCD_vidDisplayString>
    1cfe:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <open_door>
    1d02:	0e 94 13 01 	call	0x226	; 0x226 <Home_control_Menue>
    1d06:	08 95       	ret

00001d08 <USART_vidInit>:
    1d08:	20 b5       	in	r18, 0x20	; 32
    1d0a:	2f 77       	andi	r18, 0x7F	; 127
    1d0c:	20 bd       	out	0x20, r18	; 32
    1d0e:	20 b5       	in	r18, 0x20	; 32
    1d10:	2f 7b       	andi	r18, 0xBF	; 191
    1d12:	20 bd       	out	0x20, r18	; 32
    1d14:	dc 01       	movw	r26, r24
    1d16:	cb 01       	movw	r24, r22
    1d18:	88 0f       	add	r24, r24
    1d1a:	99 1f       	adc	r25, r25
    1d1c:	aa 1f       	adc	r26, r26
    1d1e:	bb 1f       	adc	r27, r27
    1d20:	88 0f       	add	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	aa 1f       	adc	r26, r26
    1d26:	bb 1f       	adc	r27, r27
    1d28:	9c 01       	movw	r18, r24
    1d2a:	ad 01       	movw	r20, r26
    1d2c:	22 0f       	add	r18, r18
    1d2e:	33 1f       	adc	r19, r19
    1d30:	44 1f       	adc	r20, r20
    1d32:	55 1f       	adc	r21, r21
    1d34:	22 0f       	add	r18, r18
    1d36:	33 1f       	adc	r19, r19
    1d38:	44 1f       	adc	r20, r20
    1d3a:	55 1f       	adc	r21, r21
    1d3c:	60 e0       	ldi	r22, 0x00	; 0
    1d3e:	72 e1       	ldi	r23, 0x12	; 18
    1d40:	8a e7       	ldi	r24, 0x7A	; 122
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0e 94 78 10 	call	0x20f0	; 0x20f0 <__udivmodsi4>
    1d48:	21 50       	subi	r18, 0x01	; 1
    1d4a:	31 09       	sbc	r19, r1
    1d4c:	80 b5       	in	r24, 0x20	; 32
    1d4e:	82 60       	ori	r24, 0x02	; 2
    1d50:	80 bd       	out	0x20, r24	; 32
    1d52:	80 b5       	in	r24, 0x20	; 32
    1d54:	84 60       	ori	r24, 0x04	; 4
    1d56:	80 bd       	out	0x20, r24	; 32
    1d58:	8a b1       	in	r24, 0x0a	; 10
    1d5a:	8b 7f       	andi	r24, 0xFB	; 251
    1d5c:	8a b9       	out	0x0a, r24	; 10
    1d5e:	80 b5       	in	r24, 0x20	; 32
    1d60:	8f 7e       	andi	r24, 0xEF	; 239
    1d62:	80 bd       	out	0x20, r24	; 32
    1d64:	80 b5       	in	r24, 0x20	; 32
    1d66:	8f 7d       	andi	r24, 0xDF	; 223
    1d68:	80 bd       	out	0x20, r24	; 32
    1d6a:	80 b5       	in	r24, 0x20	; 32
    1d6c:	88 60       	ori	r24, 0x08	; 8
    1d6e:	80 bd       	out	0x20, r24	; 32
    1d70:	8a b1       	in	r24, 0x0a	; 10
    1d72:	88 60       	ori	r24, 0x08	; 8
    1d74:	8a b9       	out	0x0a, r24	; 10
    1d76:	8a b1       	in	r24, 0x0a	; 10
    1d78:	80 61       	ori	r24, 0x10	; 16
    1d7a:	8a b9       	out	0x0a, r24	; 10
    1d7c:	80 b5       	in	r24, 0x20	; 32
    1d7e:	80 68       	ori	r24, 0x80	; 128
    1d80:	80 bd       	out	0x20, r24	; 32
    1d82:	30 bd       	out	0x20, r19	; 32
    1d84:	29 b9       	out	0x09, r18	; 9
    1d86:	08 95       	ret

00001d88 <USART_vidSendByte>:
    1d88:	5d 9b       	sbis	0x0b, 5	; 11
    1d8a:	fe cf       	rjmp	.-4      	; 0x1d88 <USART_vidSendByte>
    1d8c:	8c b9       	out	0x0c, r24	; 12
    1d8e:	08 95       	ret

00001d90 <USART_u8RecieveByte>:
    1d90:	5f 9b       	sbis	0x0b, 7	; 11
    1d92:	fe cf       	rjmp	.-4      	; 0x1d90 <USART_u8RecieveByte>
    1d94:	8c b1       	in	r24, 0x0c	; 12
    1d96:	08 95       	ret

00001d98 <USART_vidEnableTXInterrupt>:
    1d98:	8a b1       	in	r24, 0x0a	; 10
    1d9a:	80 64       	ori	r24, 0x40	; 64
    1d9c:	8a b9       	out	0x0a, r24	; 10
    1d9e:	08 95       	ret

00001da0 <USART_vidEnableRXInterrupt>:
    1da0:	8a b1       	in	r24, 0x0a	; 10
    1da2:	80 68       	ori	r24, 0x80	; 128
    1da4:	8a b9       	out	0x0a, r24	; 10
    1da6:	08 95       	ret

00001da8 <USART_vidSendString>:
    1da8:	cf 93       	push	r28
    1daa:	df 93       	push	r29
    1dac:	ec 01       	movw	r28, r24
    1dae:	03 c0       	rjmp	.+6      	; 0x1db6 <USART_vidSendString+0xe>
    1db0:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <USART_vidSendByte>
    1db4:	21 96       	adiw	r28, 0x01	; 1
    1db6:	88 81       	ld	r24, Y
    1db8:	81 11       	cpse	r24, r1
    1dba:	fa cf       	rjmp	.-12     	; 0x1db0 <USART_vidSendString+0x8>
    1dbc:	df 91       	pop	r29
    1dbe:	cf 91       	pop	r28
    1dc0:	08 95       	ret

00001dc2 <__subsf3>:
    1dc2:	50 58       	subi	r21, 0x80	; 128

00001dc4 <__addsf3>:
    1dc4:	bb 27       	eor	r27, r27
    1dc6:	aa 27       	eor	r26, r26
    1dc8:	0e 94 f9 0e 	call	0x1df2	; 0x1df2 <__addsf3x>
    1dcc:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__fp_round>
    1dd0:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__fp_pscA>
    1dd4:	38 f0       	brcs	.+14     	; 0x1de4 <__addsf3+0x20>
    1dd6:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__fp_pscB>
    1dda:	20 f0       	brcs	.+8      	; 0x1de4 <__addsf3+0x20>
    1ddc:	39 f4       	brne	.+14     	; 0x1dec <__addsf3+0x28>
    1dde:	9f 3f       	cpi	r25, 0xFF	; 255
    1de0:	19 f4       	brne	.+6      	; 0x1de8 <__addsf3+0x24>
    1de2:	26 f4       	brtc	.+8      	; 0x1dec <__addsf3+0x28>
    1de4:	0c 94 c0 0f 	jmp	0x1f80	; 0x1f80 <__fp_nan>
    1de8:	0e f4       	brtc	.+2      	; 0x1dec <__addsf3+0x28>
    1dea:	e0 95       	com	r30
    1dec:	e7 fb       	bst	r30, 7
    1dee:	0c 94 ba 0f 	jmp	0x1f74	; 0x1f74 <__fp_inf>

00001df2 <__addsf3x>:
    1df2:	e9 2f       	mov	r30, r25
    1df4:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <__fp_split3>
    1df8:	58 f3       	brcs	.-42     	; 0x1dd0 <__addsf3+0xc>
    1dfa:	ba 17       	cp	r27, r26
    1dfc:	62 07       	cpc	r22, r18
    1dfe:	73 07       	cpc	r23, r19
    1e00:	84 07       	cpc	r24, r20
    1e02:	95 07       	cpc	r25, r21
    1e04:	20 f0       	brcs	.+8      	; 0x1e0e <__addsf3x+0x1c>
    1e06:	79 f4       	brne	.+30     	; 0x1e26 <__addsf3x+0x34>
    1e08:	a6 f5       	brtc	.+104    	; 0x1e72 <__addsf3x+0x80>
    1e0a:	0c 94 04 10 	jmp	0x2008	; 0x2008 <__fp_zero>
    1e0e:	0e f4       	brtc	.+2      	; 0x1e12 <__addsf3x+0x20>
    1e10:	e0 95       	com	r30
    1e12:	0b 2e       	mov	r0, r27
    1e14:	ba 2f       	mov	r27, r26
    1e16:	a0 2d       	mov	r26, r0
    1e18:	0b 01       	movw	r0, r22
    1e1a:	b9 01       	movw	r22, r18
    1e1c:	90 01       	movw	r18, r0
    1e1e:	0c 01       	movw	r0, r24
    1e20:	ca 01       	movw	r24, r20
    1e22:	a0 01       	movw	r20, r0
    1e24:	11 24       	eor	r1, r1
    1e26:	ff 27       	eor	r31, r31
    1e28:	59 1b       	sub	r21, r25
    1e2a:	99 f0       	breq	.+38     	; 0x1e52 <__addsf3x+0x60>
    1e2c:	59 3f       	cpi	r21, 0xF9	; 249
    1e2e:	50 f4       	brcc	.+20     	; 0x1e44 <__addsf3x+0x52>
    1e30:	50 3e       	cpi	r21, 0xE0	; 224
    1e32:	68 f1       	brcs	.+90     	; 0x1e8e <__addsf3x+0x9c>
    1e34:	1a 16       	cp	r1, r26
    1e36:	f0 40       	sbci	r31, 0x00	; 0
    1e38:	a2 2f       	mov	r26, r18
    1e3a:	23 2f       	mov	r18, r19
    1e3c:	34 2f       	mov	r19, r20
    1e3e:	44 27       	eor	r20, r20
    1e40:	58 5f       	subi	r21, 0xF8	; 248
    1e42:	f3 cf       	rjmp	.-26     	; 0x1e2a <__addsf3x+0x38>
    1e44:	46 95       	lsr	r20
    1e46:	37 95       	ror	r19
    1e48:	27 95       	ror	r18
    1e4a:	a7 95       	ror	r26
    1e4c:	f0 40       	sbci	r31, 0x00	; 0
    1e4e:	53 95       	inc	r21
    1e50:	c9 f7       	brne	.-14     	; 0x1e44 <__addsf3x+0x52>
    1e52:	7e f4       	brtc	.+30     	; 0x1e72 <__addsf3x+0x80>
    1e54:	1f 16       	cp	r1, r31
    1e56:	ba 0b       	sbc	r27, r26
    1e58:	62 0b       	sbc	r22, r18
    1e5a:	73 0b       	sbc	r23, r19
    1e5c:	84 0b       	sbc	r24, r20
    1e5e:	ba f0       	brmi	.+46     	; 0x1e8e <__addsf3x+0x9c>
    1e60:	91 50       	subi	r25, 0x01	; 1
    1e62:	a1 f0       	breq	.+40     	; 0x1e8c <__addsf3x+0x9a>
    1e64:	ff 0f       	add	r31, r31
    1e66:	bb 1f       	adc	r27, r27
    1e68:	66 1f       	adc	r22, r22
    1e6a:	77 1f       	adc	r23, r23
    1e6c:	88 1f       	adc	r24, r24
    1e6e:	c2 f7       	brpl	.-16     	; 0x1e60 <__addsf3x+0x6e>
    1e70:	0e c0       	rjmp	.+28     	; 0x1e8e <__addsf3x+0x9c>
    1e72:	ba 0f       	add	r27, r26
    1e74:	62 1f       	adc	r22, r18
    1e76:	73 1f       	adc	r23, r19
    1e78:	84 1f       	adc	r24, r20
    1e7a:	48 f4       	brcc	.+18     	; 0x1e8e <__addsf3x+0x9c>
    1e7c:	87 95       	ror	r24
    1e7e:	77 95       	ror	r23
    1e80:	67 95       	ror	r22
    1e82:	b7 95       	ror	r27
    1e84:	f7 95       	ror	r31
    1e86:	9e 3f       	cpi	r25, 0xFE	; 254
    1e88:	08 f0       	brcs	.+2      	; 0x1e8c <__addsf3x+0x9a>
    1e8a:	b0 cf       	rjmp	.-160    	; 0x1dec <__addsf3+0x28>
    1e8c:	93 95       	inc	r25
    1e8e:	88 0f       	add	r24, r24
    1e90:	08 f0       	brcs	.+2      	; 0x1e94 <__addsf3x+0xa2>
    1e92:	99 27       	eor	r25, r25
    1e94:	ee 0f       	add	r30, r30
    1e96:	97 95       	ror	r25
    1e98:	87 95       	ror	r24
    1e9a:	08 95       	ret

00001e9c <__fixunssfsi>:
    1e9c:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <__fp_splitA>
    1ea0:	88 f0       	brcs	.+34     	; 0x1ec4 <__fixunssfsi+0x28>
    1ea2:	9f 57       	subi	r25, 0x7F	; 127
    1ea4:	98 f0       	brcs	.+38     	; 0x1ecc <__fixunssfsi+0x30>
    1ea6:	b9 2f       	mov	r27, r25
    1ea8:	99 27       	eor	r25, r25
    1eaa:	b7 51       	subi	r27, 0x17	; 23
    1eac:	b0 f0       	brcs	.+44     	; 0x1eda <__fixunssfsi+0x3e>
    1eae:	e1 f0       	breq	.+56     	; 0x1ee8 <__fixunssfsi+0x4c>
    1eb0:	66 0f       	add	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	88 1f       	adc	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	1a f0       	brmi	.+6      	; 0x1ec0 <__fixunssfsi+0x24>
    1eba:	ba 95       	dec	r27
    1ebc:	c9 f7       	brne	.-14     	; 0x1eb0 <__fixunssfsi+0x14>
    1ebe:	14 c0       	rjmp	.+40     	; 0x1ee8 <__fixunssfsi+0x4c>
    1ec0:	b1 30       	cpi	r27, 0x01	; 1
    1ec2:	91 f0       	breq	.+36     	; 0x1ee8 <__fixunssfsi+0x4c>
    1ec4:	0e 94 04 10 	call	0x2008	; 0x2008 <__fp_zero>
    1ec8:	b1 e0       	ldi	r27, 0x01	; 1
    1eca:	08 95       	ret
    1ecc:	0c 94 04 10 	jmp	0x2008	; 0x2008 <__fp_zero>
    1ed0:	67 2f       	mov	r22, r23
    1ed2:	78 2f       	mov	r23, r24
    1ed4:	88 27       	eor	r24, r24
    1ed6:	b8 5f       	subi	r27, 0xF8	; 248
    1ed8:	39 f0       	breq	.+14     	; 0x1ee8 <__fixunssfsi+0x4c>
    1eda:	b9 3f       	cpi	r27, 0xF9	; 249
    1edc:	cc f3       	brlt	.-14     	; 0x1ed0 <__fixunssfsi+0x34>
    1ede:	86 95       	lsr	r24
    1ee0:	77 95       	ror	r23
    1ee2:	67 95       	ror	r22
    1ee4:	b3 95       	inc	r27
    1ee6:	d9 f7       	brne	.-10     	; 0x1ede <__fixunssfsi+0x42>
    1ee8:	3e f4       	brtc	.+14     	; 0x1ef8 <__fixunssfsi+0x5c>
    1eea:	90 95       	com	r25
    1eec:	80 95       	com	r24
    1eee:	70 95       	com	r23
    1ef0:	61 95       	neg	r22
    1ef2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ef6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ef8:	08 95       	ret

00001efa <__floatunsisf>:
    1efa:	e8 94       	clt
    1efc:	09 c0       	rjmp	.+18     	; 0x1f10 <__floatsisf+0x12>

00001efe <__floatsisf>:
    1efe:	97 fb       	bst	r25, 7
    1f00:	3e f4       	brtc	.+14     	; 0x1f10 <__floatsisf+0x12>
    1f02:	90 95       	com	r25
    1f04:	80 95       	com	r24
    1f06:	70 95       	com	r23
    1f08:	61 95       	neg	r22
    1f0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f10:	99 23       	and	r25, r25
    1f12:	a9 f0       	breq	.+42     	; 0x1f3e <__floatsisf+0x40>
    1f14:	f9 2f       	mov	r31, r25
    1f16:	96 e9       	ldi	r25, 0x96	; 150
    1f18:	bb 27       	eor	r27, r27
    1f1a:	93 95       	inc	r25
    1f1c:	f6 95       	lsr	r31
    1f1e:	87 95       	ror	r24
    1f20:	77 95       	ror	r23
    1f22:	67 95       	ror	r22
    1f24:	b7 95       	ror	r27
    1f26:	f1 11       	cpse	r31, r1
    1f28:	f8 cf       	rjmp	.-16     	; 0x1f1a <__floatsisf+0x1c>
    1f2a:	fa f4       	brpl	.+62     	; 0x1f6a <__floatsisf+0x6c>
    1f2c:	bb 0f       	add	r27, r27
    1f2e:	11 f4       	brne	.+4      	; 0x1f34 <__floatsisf+0x36>
    1f30:	60 ff       	sbrs	r22, 0
    1f32:	1b c0       	rjmp	.+54     	; 0x1f6a <__floatsisf+0x6c>
    1f34:	6f 5f       	subi	r22, 0xFF	; 255
    1f36:	7f 4f       	sbci	r23, 0xFF	; 255
    1f38:	8f 4f       	sbci	r24, 0xFF	; 255
    1f3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f3c:	16 c0       	rjmp	.+44     	; 0x1f6a <__floatsisf+0x6c>
    1f3e:	88 23       	and	r24, r24
    1f40:	11 f0       	breq	.+4      	; 0x1f46 <__floatsisf+0x48>
    1f42:	96 e9       	ldi	r25, 0x96	; 150
    1f44:	11 c0       	rjmp	.+34     	; 0x1f68 <__floatsisf+0x6a>
    1f46:	77 23       	and	r23, r23
    1f48:	21 f0       	breq	.+8      	; 0x1f52 <__floatsisf+0x54>
    1f4a:	9e e8       	ldi	r25, 0x8E	; 142
    1f4c:	87 2f       	mov	r24, r23
    1f4e:	76 2f       	mov	r23, r22
    1f50:	05 c0       	rjmp	.+10     	; 0x1f5c <__floatsisf+0x5e>
    1f52:	66 23       	and	r22, r22
    1f54:	71 f0       	breq	.+28     	; 0x1f72 <__floatsisf+0x74>
    1f56:	96 e8       	ldi	r25, 0x86	; 134
    1f58:	86 2f       	mov	r24, r22
    1f5a:	70 e0       	ldi	r23, 0x00	; 0
    1f5c:	60 e0       	ldi	r22, 0x00	; 0
    1f5e:	2a f0       	brmi	.+10     	; 0x1f6a <__floatsisf+0x6c>
    1f60:	9a 95       	dec	r25
    1f62:	66 0f       	add	r22, r22
    1f64:	77 1f       	adc	r23, r23
    1f66:	88 1f       	adc	r24, r24
    1f68:	da f7       	brpl	.-10     	; 0x1f60 <__floatsisf+0x62>
    1f6a:	88 0f       	add	r24, r24
    1f6c:	96 95       	lsr	r25
    1f6e:	87 95       	ror	r24
    1f70:	97 f9       	bld	r25, 7
    1f72:	08 95       	ret

00001f74 <__fp_inf>:
    1f74:	97 f9       	bld	r25, 7
    1f76:	9f 67       	ori	r25, 0x7F	; 127
    1f78:	80 e8       	ldi	r24, 0x80	; 128
    1f7a:	70 e0       	ldi	r23, 0x00	; 0
    1f7c:	60 e0       	ldi	r22, 0x00	; 0
    1f7e:	08 95       	ret

00001f80 <__fp_nan>:
    1f80:	9f ef       	ldi	r25, 0xFF	; 255
    1f82:	80 ec       	ldi	r24, 0xC0	; 192
    1f84:	08 95       	ret

00001f86 <__fp_pscA>:
    1f86:	00 24       	eor	r0, r0
    1f88:	0a 94       	dec	r0
    1f8a:	16 16       	cp	r1, r22
    1f8c:	17 06       	cpc	r1, r23
    1f8e:	18 06       	cpc	r1, r24
    1f90:	09 06       	cpc	r0, r25
    1f92:	08 95       	ret

00001f94 <__fp_pscB>:
    1f94:	00 24       	eor	r0, r0
    1f96:	0a 94       	dec	r0
    1f98:	12 16       	cp	r1, r18
    1f9a:	13 06       	cpc	r1, r19
    1f9c:	14 06       	cpc	r1, r20
    1f9e:	05 06       	cpc	r0, r21
    1fa0:	08 95       	ret

00001fa2 <__fp_round>:
    1fa2:	09 2e       	mov	r0, r25
    1fa4:	03 94       	inc	r0
    1fa6:	00 0c       	add	r0, r0
    1fa8:	11 f4       	brne	.+4      	; 0x1fae <__fp_round+0xc>
    1faa:	88 23       	and	r24, r24
    1fac:	52 f0       	brmi	.+20     	; 0x1fc2 <__fp_round+0x20>
    1fae:	bb 0f       	add	r27, r27
    1fb0:	40 f4       	brcc	.+16     	; 0x1fc2 <__fp_round+0x20>
    1fb2:	bf 2b       	or	r27, r31
    1fb4:	11 f4       	brne	.+4      	; 0x1fba <__fp_round+0x18>
    1fb6:	60 ff       	sbrs	r22, 0
    1fb8:	04 c0       	rjmp	.+8      	; 0x1fc2 <__fp_round+0x20>
    1fba:	6f 5f       	subi	r22, 0xFF	; 255
    1fbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1fbe:	8f 4f       	sbci	r24, 0xFF	; 255
    1fc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc2:	08 95       	ret

00001fc4 <__fp_split3>:
    1fc4:	57 fd       	sbrc	r21, 7
    1fc6:	90 58       	subi	r25, 0x80	; 128
    1fc8:	44 0f       	add	r20, r20
    1fca:	55 1f       	adc	r21, r21
    1fcc:	59 f0       	breq	.+22     	; 0x1fe4 <__fp_splitA+0x10>
    1fce:	5f 3f       	cpi	r21, 0xFF	; 255
    1fd0:	71 f0       	breq	.+28     	; 0x1fee <__fp_splitA+0x1a>
    1fd2:	47 95       	ror	r20

00001fd4 <__fp_splitA>:
    1fd4:	88 0f       	add	r24, r24
    1fd6:	97 fb       	bst	r25, 7
    1fd8:	99 1f       	adc	r25, r25
    1fda:	61 f0       	breq	.+24     	; 0x1ff4 <__fp_splitA+0x20>
    1fdc:	9f 3f       	cpi	r25, 0xFF	; 255
    1fde:	79 f0       	breq	.+30     	; 0x1ffe <__fp_splitA+0x2a>
    1fe0:	87 95       	ror	r24
    1fe2:	08 95       	ret
    1fe4:	12 16       	cp	r1, r18
    1fe6:	13 06       	cpc	r1, r19
    1fe8:	14 06       	cpc	r1, r20
    1fea:	55 1f       	adc	r21, r21
    1fec:	f2 cf       	rjmp	.-28     	; 0x1fd2 <__fp_split3+0xe>
    1fee:	46 95       	lsr	r20
    1ff0:	f1 df       	rcall	.-30     	; 0x1fd4 <__fp_splitA>
    1ff2:	08 c0       	rjmp	.+16     	; 0x2004 <__fp_splitA+0x30>
    1ff4:	16 16       	cp	r1, r22
    1ff6:	17 06       	cpc	r1, r23
    1ff8:	18 06       	cpc	r1, r24
    1ffa:	99 1f       	adc	r25, r25
    1ffc:	f1 cf       	rjmp	.-30     	; 0x1fe0 <__fp_splitA+0xc>
    1ffe:	86 95       	lsr	r24
    2000:	71 05       	cpc	r23, r1
    2002:	61 05       	cpc	r22, r1
    2004:	08 94       	sec
    2006:	08 95       	ret

00002008 <__fp_zero>:
    2008:	e8 94       	clt

0000200a <__fp_szero>:
    200a:	bb 27       	eor	r27, r27
    200c:	66 27       	eor	r22, r22
    200e:	77 27       	eor	r23, r23
    2010:	cb 01       	movw	r24, r22
    2012:	97 f9       	bld	r25, 7
    2014:	08 95       	ret

00002016 <__mulsf3>:
    2016:	0e 94 1e 10 	call	0x203c	; 0x203c <__mulsf3x>
    201a:	0c 94 d1 0f 	jmp	0x1fa2	; 0x1fa2 <__fp_round>
    201e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__fp_pscA>
    2022:	38 f0       	brcs	.+14     	; 0x2032 <__mulsf3+0x1c>
    2024:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__fp_pscB>
    2028:	20 f0       	brcs	.+8      	; 0x2032 <__mulsf3+0x1c>
    202a:	95 23       	and	r25, r21
    202c:	11 f0       	breq	.+4      	; 0x2032 <__mulsf3+0x1c>
    202e:	0c 94 ba 0f 	jmp	0x1f74	; 0x1f74 <__fp_inf>
    2032:	0c 94 c0 0f 	jmp	0x1f80	; 0x1f80 <__fp_nan>
    2036:	11 24       	eor	r1, r1
    2038:	0c 94 05 10 	jmp	0x200a	; 0x200a <__fp_szero>

0000203c <__mulsf3x>:
    203c:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <__fp_split3>
    2040:	70 f3       	brcs	.-36     	; 0x201e <__mulsf3+0x8>

00002042 <__mulsf3_pse>:
    2042:	95 9f       	mul	r25, r21
    2044:	c1 f3       	breq	.-16     	; 0x2036 <__mulsf3+0x20>
    2046:	95 0f       	add	r25, r21
    2048:	50 e0       	ldi	r21, 0x00	; 0
    204a:	55 1f       	adc	r21, r21
    204c:	62 9f       	mul	r22, r18
    204e:	f0 01       	movw	r30, r0
    2050:	72 9f       	mul	r23, r18
    2052:	bb 27       	eor	r27, r27
    2054:	f0 0d       	add	r31, r0
    2056:	b1 1d       	adc	r27, r1
    2058:	63 9f       	mul	r22, r19
    205a:	aa 27       	eor	r26, r26
    205c:	f0 0d       	add	r31, r0
    205e:	b1 1d       	adc	r27, r1
    2060:	aa 1f       	adc	r26, r26
    2062:	64 9f       	mul	r22, r20
    2064:	66 27       	eor	r22, r22
    2066:	b0 0d       	add	r27, r0
    2068:	a1 1d       	adc	r26, r1
    206a:	66 1f       	adc	r22, r22
    206c:	82 9f       	mul	r24, r18
    206e:	22 27       	eor	r18, r18
    2070:	b0 0d       	add	r27, r0
    2072:	a1 1d       	adc	r26, r1
    2074:	62 1f       	adc	r22, r18
    2076:	73 9f       	mul	r23, r19
    2078:	b0 0d       	add	r27, r0
    207a:	a1 1d       	adc	r26, r1
    207c:	62 1f       	adc	r22, r18
    207e:	83 9f       	mul	r24, r19
    2080:	a0 0d       	add	r26, r0
    2082:	61 1d       	adc	r22, r1
    2084:	22 1f       	adc	r18, r18
    2086:	74 9f       	mul	r23, r20
    2088:	33 27       	eor	r19, r19
    208a:	a0 0d       	add	r26, r0
    208c:	61 1d       	adc	r22, r1
    208e:	23 1f       	adc	r18, r19
    2090:	84 9f       	mul	r24, r20
    2092:	60 0d       	add	r22, r0
    2094:	21 1d       	adc	r18, r1
    2096:	82 2f       	mov	r24, r18
    2098:	76 2f       	mov	r23, r22
    209a:	6a 2f       	mov	r22, r26
    209c:	11 24       	eor	r1, r1
    209e:	9f 57       	subi	r25, 0x7F	; 127
    20a0:	50 40       	sbci	r21, 0x00	; 0
    20a2:	9a f0       	brmi	.+38     	; 0x20ca <__mulsf3_pse+0x88>
    20a4:	f1 f0       	breq	.+60     	; 0x20e2 <__mulsf3_pse+0xa0>
    20a6:	88 23       	and	r24, r24
    20a8:	4a f0       	brmi	.+18     	; 0x20bc <__mulsf3_pse+0x7a>
    20aa:	ee 0f       	add	r30, r30
    20ac:	ff 1f       	adc	r31, r31
    20ae:	bb 1f       	adc	r27, r27
    20b0:	66 1f       	adc	r22, r22
    20b2:	77 1f       	adc	r23, r23
    20b4:	88 1f       	adc	r24, r24
    20b6:	91 50       	subi	r25, 0x01	; 1
    20b8:	50 40       	sbci	r21, 0x00	; 0
    20ba:	a9 f7       	brne	.-22     	; 0x20a6 <__mulsf3_pse+0x64>
    20bc:	9e 3f       	cpi	r25, 0xFE	; 254
    20be:	51 05       	cpc	r21, r1
    20c0:	80 f0       	brcs	.+32     	; 0x20e2 <__mulsf3_pse+0xa0>
    20c2:	0c 94 ba 0f 	jmp	0x1f74	; 0x1f74 <__fp_inf>
    20c6:	0c 94 05 10 	jmp	0x200a	; 0x200a <__fp_szero>
    20ca:	5f 3f       	cpi	r21, 0xFF	; 255
    20cc:	e4 f3       	brlt	.-8      	; 0x20c6 <__mulsf3_pse+0x84>
    20ce:	98 3e       	cpi	r25, 0xE8	; 232
    20d0:	d4 f3       	brlt	.-12     	; 0x20c6 <__mulsf3_pse+0x84>
    20d2:	86 95       	lsr	r24
    20d4:	77 95       	ror	r23
    20d6:	67 95       	ror	r22
    20d8:	b7 95       	ror	r27
    20da:	f7 95       	ror	r31
    20dc:	e7 95       	ror	r30
    20de:	9f 5f       	subi	r25, 0xFF	; 255
    20e0:	c1 f7       	brne	.-16     	; 0x20d2 <__mulsf3_pse+0x90>
    20e2:	fe 2b       	or	r31, r30
    20e4:	88 0f       	add	r24, r24
    20e6:	91 1d       	adc	r25, r1
    20e8:	96 95       	lsr	r25
    20ea:	87 95       	ror	r24
    20ec:	97 f9       	bld	r25, 7
    20ee:	08 95       	ret

000020f0 <__udivmodsi4>:
    20f0:	a1 e2       	ldi	r26, 0x21	; 33
    20f2:	1a 2e       	mov	r1, r26
    20f4:	aa 1b       	sub	r26, r26
    20f6:	bb 1b       	sub	r27, r27
    20f8:	fd 01       	movw	r30, r26
    20fa:	0d c0       	rjmp	.+26     	; 0x2116 <__udivmodsi4_ep>

000020fc <__udivmodsi4_loop>:
    20fc:	aa 1f       	adc	r26, r26
    20fe:	bb 1f       	adc	r27, r27
    2100:	ee 1f       	adc	r30, r30
    2102:	ff 1f       	adc	r31, r31
    2104:	a2 17       	cp	r26, r18
    2106:	b3 07       	cpc	r27, r19
    2108:	e4 07       	cpc	r30, r20
    210a:	f5 07       	cpc	r31, r21
    210c:	20 f0       	brcs	.+8      	; 0x2116 <__udivmodsi4_ep>
    210e:	a2 1b       	sub	r26, r18
    2110:	b3 0b       	sbc	r27, r19
    2112:	e4 0b       	sbc	r30, r20
    2114:	f5 0b       	sbc	r31, r21

00002116 <__udivmodsi4_ep>:
    2116:	66 1f       	adc	r22, r22
    2118:	77 1f       	adc	r23, r23
    211a:	88 1f       	adc	r24, r24
    211c:	99 1f       	adc	r25, r25
    211e:	1a 94       	dec	r1
    2120:	69 f7       	brne	.-38     	; 0x20fc <__udivmodsi4_loop>
    2122:	60 95       	com	r22
    2124:	70 95       	com	r23
    2126:	80 95       	com	r24
    2128:	90 95       	com	r25
    212a:	9b 01       	movw	r18, r22
    212c:	ac 01       	movw	r20, r24
    212e:	bd 01       	movw	r22, r26
    2130:	cf 01       	movw	r24, r30
    2132:	08 95       	ret

00002134 <__tablejump2__>:
    2134:	ee 0f       	add	r30, r30
    2136:	ff 1f       	adc	r31, r31
    2138:	05 90       	lpm	r0, Z+
    213a:	f4 91       	lpm	r31, Z
    213c:	e0 2d       	mov	r30, r0
    213e:	09 94       	ijmp

00002140 <sprintf>:
    2140:	ae e0       	ldi	r26, 0x0E	; 14
    2142:	b0 e0       	ldi	r27, 0x00	; 0
    2144:	e6 ea       	ldi	r30, 0xA6	; 166
    2146:	f0 e1       	ldi	r31, 0x10	; 16
    2148:	0c 94 61 13 	jmp	0x26c2	; 0x26c2 <__prologue_saves__+0x1c>
    214c:	0d 89       	ldd	r16, Y+21	; 0x15
    214e:	1e 89       	ldd	r17, Y+22	; 0x16
    2150:	86 e0       	ldi	r24, 0x06	; 6
    2152:	8c 83       	std	Y+4, r24	; 0x04
    2154:	1a 83       	std	Y+2, r17	; 0x02
    2156:	09 83       	std	Y+1, r16	; 0x01
    2158:	8f ef       	ldi	r24, 0xFF	; 255
    215a:	9f e7       	ldi	r25, 0x7F	; 127
    215c:	9e 83       	std	Y+6, r25	; 0x06
    215e:	8d 83       	std	Y+5, r24	; 0x05
    2160:	ae 01       	movw	r20, r28
    2162:	47 5e       	subi	r20, 0xE7	; 231
    2164:	5f 4f       	sbci	r21, 0xFF	; 255
    2166:	6f 89       	ldd	r22, Y+23	; 0x17
    2168:	78 8d       	ldd	r23, Y+24	; 0x18
    216a:	ce 01       	movw	r24, r28
    216c:	01 96       	adiw	r24, 0x01	; 1
    216e:	0e 94 c2 10 	call	0x2184	; 0x2184 <vfprintf>
    2172:	ef 81       	ldd	r30, Y+7	; 0x07
    2174:	f8 85       	ldd	r31, Y+8	; 0x08
    2176:	e0 0f       	add	r30, r16
    2178:	f1 1f       	adc	r31, r17
    217a:	10 82       	st	Z, r1
    217c:	2e 96       	adiw	r28, 0x0e	; 14
    217e:	e4 e0       	ldi	r30, 0x04	; 4
    2180:	0c 94 7d 13 	jmp	0x26fa	; 0x26fa <__epilogue_restores__+0x1c>

00002184 <vfprintf>:
    2184:	ab e0       	ldi	r26, 0x0B	; 11
    2186:	b0 e0       	ldi	r27, 0x00	; 0
    2188:	e8 ec       	ldi	r30, 0xC8	; 200
    218a:	f0 e1       	ldi	r31, 0x10	; 16
    218c:	0c 94 53 13 	jmp	0x26a6	; 0x26a6 <__prologue_saves__>
    2190:	6c 01       	movw	r12, r24
    2192:	7b 01       	movw	r14, r22
    2194:	8a 01       	movw	r16, r20
    2196:	fc 01       	movw	r30, r24
    2198:	17 82       	std	Z+7, r1	; 0x07
    219a:	16 82       	std	Z+6, r1	; 0x06
    219c:	83 81       	ldd	r24, Z+3	; 0x03
    219e:	81 ff       	sbrs	r24, 1
    21a0:	cc c1       	rjmp	.+920    	; 0x253a <vfprintf+0x3b6>
    21a2:	ce 01       	movw	r24, r28
    21a4:	01 96       	adiw	r24, 0x01	; 1
    21a6:	3c 01       	movw	r6, r24
    21a8:	f6 01       	movw	r30, r12
    21aa:	93 81       	ldd	r25, Z+3	; 0x03
    21ac:	f7 01       	movw	r30, r14
    21ae:	93 fd       	sbrc	r25, 3
    21b0:	85 91       	lpm	r24, Z+
    21b2:	93 ff       	sbrs	r25, 3
    21b4:	81 91       	ld	r24, Z+
    21b6:	7f 01       	movw	r14, r30
    21b8:	88 23       	and	r24, r24
    21ba:	09 f4       	brne	.+2      	; 0x21be <vfprintf+0x3a>
    21bc:	ba c1       	rjmp	.+884    	; 0x2532 <vfprintf+0x3ae>
    21be:	85 32       	cpi	r24, 0x25	; 37
    21c0:	39 f4       	brne	.+14     	; 0x21d0 <vfprintf+0x4c>
    21c2:	93 fd       	sbrc	r25, 3
    21c4:	85 91       	lpm	r24, Z+
    21c6:	93 ff       	sbrs	r25, 3
    21c8:	81 91       	ld	r24, Z+
    21ca:	7f 01       	movw	r14, r30
    21cc:	85 32       	cpi	r24, 0x25	; 37
    21ce:	29 f4       	brne	.+10     	; 0x21da <vfprintf+0x56>
    21d0:	b6 01       	movw	r22, r12
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    21d8:	e7 cf       	rjmp	.-50     	; 0x21a8 <vfprintf+0x24>
    21da:	91 2c       	mov	r9, r1
    21dc:	21 2c       	mov	r2, r1
    21de:	31 2c       	mov	r3, r1
    21e0:	ff e1       	ldi	r31, 0x1F	; 31
    21e2:	f3 15       	cp	r31, r3
    21e4:	d8 f0       	brcs	.+54     	; 0x221c <vfprintf+0x98>
    21e6:	8b 32       	cpi	r24, 0x2B	; 43
    21e8:	79 f0       	breq	.+30     	; 0x2208 <vfprintf+0x84>
    21ea:	38 f4       	brcc	.+14     	; 0x21fa <vfprintf+0x76>
    21ec:	80 32       	cpi	r24, 0x20	; 32
    21ee:	79 f0       	breq	.+30     	; 0x220e <vfprintf+0x8a>
    21f0:	83 32       	cpi	r24, 0x23	; 35
    21f2:	a1 f4       	brne	.+40     	; 0x221c <vfprintf+0x98>
    21f4:	23 2d       	mov	r18, r3
    21f6:	20 61       	ori	r18, 0x10	; 16
    21f8:	1d c0       	rjmp	.+58     	; 0x2234 <vfprintf+0xb0>
    21fa:	8d 32       	cpi	r24, 0x2D	; 45
    21fc:	61 f0       	breq	.+24     	; 0x2216 <vfprintf+0x92>
    21fe:	80 33       	cpi	r24, 0x30	; 48
    2200:	69 f4       	brne	.+26     	; 0x221c <vfprintf+0x98>
    2202:	23 2d       	mov	r18, r3
    2204:	21 60       	ori	r18, 0x01	; 1
    2206:	16 c0       	rjmp	.+44     	; 0x2234 <vfprintf+0xb0>
    2208:	83 2d       	mov	r24, r3
    220a:	82 60       	ori	r24, 0x02	; 2
    220c:	38 2e       	mov	r3, r24
    220e:	e3 2d       	mov	r30, r3
    2210:	e4 60       	ori	r30, 0x04	; 4
    2212:	3e 2e       	mov	r3, r30
    2214:	2a c0       	rjmp	.+84     	; 0x226a <vfprintf+0xe6>
    2216:	f3 2d       	mov	r31, r3
    2218:	f8 60       	ori	r31, 0x08	; 8
    221a:	1d c0       	rjmp	.+58     	; 0x2256 <vfprintf+0xd2>
    221c:	37 fc       	sbrc	r3, 7
    221e:	2d c0       	rjmp	.+90     	; 0x227a <vfprintf+0xf6>
    2220:	20 ed       	ldi	r18, 0xD0	; 208
    2222:	28 0f       	add	r18, r24
    2224:	2a 30       	cpi	r18, 0x0A	; 10
    2226:	40 f0       	brcs	.+16     	; 0x2238 <vfprintf+0xb4>
    2228:	8e 32       	cpi	r24, 0x2E	; 46
    222a:	b9 f4       	brne	.+46     	; 0x225a <vfprintf+0xd6>
    222c:	36 fc       	sbrc	r3, 6
    222e:	81 c1       	rjmp	.+770    	; 0x2532 <vfprintf+0x3ae>
    2230:	23 2d       	mov	r18, r3
    2232:	20 64       	ori	r18, 0x40	; 64
    2234:	32 2e       	mov	r3, r18
    2236:	19 c0       	rjmp	.+50     	; 0x226a <vfprintf+0xe6>
    2238:	36 fe       	sbrs	r3, 6
    223a:	06 c0       	rjmp	.+12     	; 0x2248 <vfprintf+0xc4>
    223c:	8a e0       	ldi	r24, 0x0A	; 10
    223e:	98 9e       	mul	r9, r24
    2240:	20 0d       	add	r18, r0
    2242:	11 24       	eor	r1, r1
    2244:	92 2e       	mov	r9, r18
    2246:	11 c0       	rjmp	.+34     	; 0x226a <vfprintf+0xe6>
    2248:	ea e0       	ldi	r30, 0x0A	; 10
    224a:	2e 9e       	mul	r2, r30
    224c:	20 0d       	add	r18, r0
    224e:	11 24       	eor	r1, r1
    2250:	22 2e       	mov	r2, r18
    2252:	f3 2d       	mov	r31, r3
    2254:	f0 62       	ori	r31, 0x20	; 32
    2256:	3f 2e       	mov	r3, r31
    2258:	08 c0       	rjmp	.+16     	; 0x226a <vfprintf+0xe6>
    225a:	8c 36       	cpi	r24, 0x6C	; 108
    225c:	21 f4       	brne	.+8      	; 0x2266 <vfprintf+0xe2>
    225e:	83 2d       	mov	r24, r3
    2260:	80 68       	ori	r24, 0x80	; 128
    2262:	38 2e       	mov	r3, r24
    2264:	02 c0       	rjmp	.+4      	; 0x226a <vfprintf+0xe6>
    2266:	88 36       	cpi	r24, 0x68	; 104
    2268:	41 f4       	brne	.+16     	; 0x227a <vfprintf+0xf6>
    226a:	f7 01       	movw	r30, r14
    226c:	93 fd       	sbrc	r25, 3
    226e:	85 91       	lpm	r24, Z+
    2270:	93 ff       	sbrs	r25, 3
    2272:	81 91       	ld	r24, Z+
    2274:	7f 01       	movw	r14, r30
    2276:	81 11       	cpse	r24, r1
    2278:	b3 cf       	rjmp	.-154    	; 0x21e0 <vfprintf+0x5c>
    227a:	98 2f       	mov	r25, r24
    227c:	9f 7d       	andi	r25, 0xDF	; 223
    227e:	95 54       	subi	r25, 0x45	; 69
    2280:	93 30       	cpi	r25, 0x03	; 3
    2282:	28 f4       	brcc	.+10     	; 0x228e <vfprintf+0x10a>
    2284:	0c 5f       	subi	r16, 0xFC	; 252
    2286:	1f 4f       	sbci	r17, 0xFF	; 255
    2288:	9f e3       	ldi	r25, 0x3F	; 63
    228a:	99 83       	std	Y+1, r25	; 0x01
    228c:	0d c0       	rjmp	.+26     	; 0x22a8 <vfprintf+0x124>
    228e:	83 36       	cpi	r24, 0x63	; 99
    2290:	31 f0       	breq	.+12     	; 0x229e <vfprintf+0x11a>
    2292:	83 37       	cpi	r24, 0x73	; 115
    2294:	71 f0       	breq	.+28     	; 0x22b2 <vfprintf+0x12e>
    2296:	83 35       	cpi	r24, 0x53	; 83
    2298:	09 f0       	breq	.+2      	; 0x229c <vfprintf+0x118>
    229a:	59 c0       	rjmp	.+178    	; 0x234e <vfprintf+0x1ca>
    229c:	21 c0       	rjmp	.+66     	; 0x22e0 <vfprintf+0x15c>
    229e:	f8 01       	movw	r30, r16
    22a0:	80 81       	ld	r24, Z
    22a2:	89 83       	std	Y+1, r24	; 0x01
    22a4:	0e 5f       	subi	r16, 0xFE	; 254
    22a6:	1f 4f       	sbci	r17, 0xFF	; 255
    22a8:	88 24       	eor	r8, r8
    22aa:	83 94       	inc	r8
    22ac:	91 2c       	mov	r9, r1
    22ae:	53 01       	movw	r10, r6
    22b0:	13 c0       	rjmp	.+38     	; 0x22d8 <vfprintf+0x154>
    22b2:	28 01       	movw	r4, r16
    22b4:	f2 e0       	ldi	r31, 0x02	; 2
    22b6:	4f 0e       	add	r4, r31
    22b8:	51 1c       	adc	r5, r1
    22ba:	f8 01       	movw	r30, r16
    22bc:	a0 80       	ld	r10, Z
    22be:	b1 80       	ldd	r11, Z+1	; 0x01
    22c0:	36 fe       	sbrs	r3, 6
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <vfprintf+0x146>
    22c4:	69 2d       	mov	r22, r9
    22c6:	70 e0       	ldi	r23, 0x00	; 0
    22c8:	02 c0       	rjmp	.+4      	; 0x22ce <vfprintf+0x14a>
    22ca:	6f ef       	ldi	r22, 0xFF	; 255
    22cc:	7f ef       	ldi	r23, 0xFF	; 255
    22ce:	c5 01       	movw	r24, r10
    22d0:	0e 94 ae 12 	call	0x255c	; 0x255c <strnlen>
    22d4:	4c 01       	movw	r8, r24
    22d6:	82 01       	movw	r16, r4
    22d8:	f3 2d       	mov	r31, r3
    22da:	ff 77       	andi	r31, 0x7F	; 127
    22dc:	3f 2e       	mov	r3, r31
    22de:	16 c0       	rjmp	.+44     	; 0x230c <vfprintf+0x188>
    22e0:	28 01       	movw	r4, r16
    22e2:	22 e0       	ldi	r18, 0x02	; 2
    22e4:	42 0e       	add	r4, r18
    22e6:	51 1c       	adc	r5, r1
    22e8:	f8 01       	movw	r30, r16
    22ea:	a0 80       	ld	r10, Z
    22ec:	b1 80       	ldd	r11, Z+1	; 0x01
    22ee:	36 fe       	sbrs	r3, 6
    22f0:	03 c0       	rjmp	.+6      	; 0x22f8 <vfprintf+0x174>
    22f2:	69 2d       	mov	r22, r9
    22f4:	70 e0       	ldi	r23, 0x00	; 0
    22f6:	02 c0       	rjmp	.+4      	; 0x22fc <vfprintf+0x178>
    22f8:	6f ef       	ldi	r22, 0xFF	; 255
    22fa:	7f ef       	ldi	r23, 0xFF	; 255
    22fc:	c5 01       	movw	r24, r10
    22fe:	0e 94 a3 12 	call	0x2546	; 0x2546 <strnlen_P>
    2302:	4c 01       	movw	r8, r24
    2304:	f3 2d       	mov	r31, r3
    2306:	f0 68       	ori	r31, 0x80	; 128
    2308:	3f 2e       	mov	r3, r31
    230a:	82 01       	movw	r16, r4
    230c:	33 fc       	sbrc	r3, 3
    230e:	1b c0       	rjmp	.+54     	; 0x2346 <vfprintf+0x1c2>
    2310:	82 2d       	mov	r24, r2
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	88 16       	cp	r8, r24
    2316:	99 06       	cpc	r9, r25
    2318:	b0 f4       	brcc	.+44     	; 0x2346 <vfprintf+0x1c2>
    231a:	b6 01       	movw	r22, r12
    231c:	80 e2       	ldi	r24, 0x20	; 32
    231e:	90 e0       	ldi	r25, 0x00	; 0
    2320:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    2324:	2a 94       	dec	r2
    2326:	f4 cf       	rjmp	.-24     	; 0x2310 <vfprintf+0x18c>
    2328:	f5 01       	movw	r30, r10
    232a:	37 fc       	sbrc	r3, 7
    232c:	85 91       	lpm	r24, Z+
    232e:	37 fe       	sbrs	r3, 7
    2330:	81 91       	ld	r24, Z+
    2332:	5f 01       	movw	r10, r30
    2334:	b6 01       	movw	r22, r12
    2336:	90 e0       	ldi	r25, 0x00	; 0
    2338:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    233c:	21 10       	cpse	r2, r1
    233e:	2a 94       	dec	r2
    2340:	21 e0       	ldi	r18, 0x01	; 1
    2342:	82 1a       	sub	r8, r18
    2344:	91 08       	sbc	r9, r1
    2346:	81 14       	cp	r8, r1
    2348:	91 04       	cpc	r9, r1
    234a:	71 f7       	brne	.-36     	; 0x2328 <vfprintf+0x1a4>
    234c:	e8 c0       	rjmp	.+464    	; 0x251e <vfprintf+0x39a>
    234e:	84 36       	cpi	r24, 0x64	; 100
    2350:	11 f0       	breq	.+4      	; 0x2356 <vfprintf+0x1d2>
    2352:	89 36       	cpi	r24, 0x69	; 105
    2354:	41 f5       	brne	.+80     	; 0x23a6 <vfprintf+0x222>
    2356:	f8 01       	movw	r30, r16
    2358:	37 fe       	sbrs	r3, 7
    235a:	07 c0       	rjmp	.+14     	; 0x236a <vfprintf+0x1e6>
    235c:	60 81       	ld	r22, Z
    235e:	71 81       	ldd	r23, Z+1	; 0x01
    2360:	82 81       	ldd	r24, Z+2	; 0x02
    2362:	93 81       	ldd	r25, Z+3	; 0x03
    2364:	0c 5f       	subi	r16, 0xFC	; 252
    2366:	1f 4f       	sbci	r17, 0xFF	; 255
    2368:	08 c0       	rjmp	.+16     	; 0x237a <vfprintf+0x1f6>
    236a:	60 81       	ld	r22, Z
    236c:	71 81       	ldd	r23, Z+1	; 0x01
    236e:	07 2e       	mov	r0, r23
    2370:	00 0c       	add	r0, r0
    2372:	88 0b       	sbc	r24, r24
    2374:	99 0b       	sbc	r25, r25
    2376:	0e 5f       	subi	r16, 0xFE	; 254
    2378:	1f 4f       	sbci	r17, 0xFF	; 255
    237a:	f3 2d       	mov	r31, r3
    237c:	ff 76       	andi	r31, 0x6F	; 111
    237e:	3f 2e       	mov	r3, r31
    2380:	97 ff       	sbrs	r25, 7
    2382:	09 c0       	rjmp	.+18     	; 0x2396 <vfprintf+0x212>
    2384:	90 95       	com	r25
    2386:	80 95       	com	r24
    2388:	70 95       	com	r23
    238a:	61 95       	neg	r22
    238c:	7f 4f       	sbci	r23, 0xFF	; 255
    238e:	8f 4f       	sbci	r24, 0xFF	; 255
    2390:	9f 4f       	sbci	r25, 0xFF	; 255
    2392:	f0 68       	ori	r31, 0x80	; 128
    2394:	3f 2e       	mov	r3, r31
    2396:	2a e0       	ldi	r18, 0x0A	; 10
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	a3 01       	movw	r20, r6
    239c:	0e 94 f5 12 	call	0x25ea	; 0x25ea <__ultoa_invert>
    23a0:	88 2e       	mov	r8, r24
    23a2:	86 18       	sub	r8, r6
    23a4:	45 c0       	rjmp	.+138    	; 0x2430 <vfprintf+0x2ac>
    23a6:	85 37       	cpi	r24, 0x75	; 117
    23a8:	31 f4       	brne	.+12     	; 0x23b6 <vfprintf+0x232>
    23aa:	23 2d       	mov	r18, r3
    23ac:	2f 7e       	andi	r18, 0xEF	; 239
    23ae:	b2 2e       	mov	r11, r18
    23b0:	2a e0       	ldi	r18, 0x0A	; 10
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	25 c0       	rjmp	.+74     	; 0x2400 <vfprintf+0x27c>
    23b6:	93 2d       	mov	r25, r3
    23b8:	99 7f       	andi	r25, 0xF9	; 249
    23ba:	b9 2e       	mov	r11, r25
    23bc:	8f 36       	cpi	r24, 0x6F	; 111
    23be:	c1 f0       	breq	.+48     	; 0x23f0 <vfprintf+0x26c>
    23c0:	18 f4       	brcc	.+6      	; 0x23c8 <vfprintf+0x244>
    23c2:	88 35       	cpi	r24, 0x58	; 88
    23c4:	79 f0       	breq	.+30     	; 0x23e4 <vfprintf+0x260>
    23c6:	b5 c0       	rjmp	.+362    	; 0x2532 <vfprintf+0x3ae>
    23c8:	80 37       	cpi	r24, 0x70	; 112
    23ca:	19 f0       	breq	.+6      	; 0x23d2 <vfprintf+0x24e>
    23cc:	88 37       	cpi	r24, 0x78	; 120
    23ce:	21 f0       	breq	.+8      	; 0x23d8 <vfprintf+0x254>
    23d0:	b0 c0       	rjmp	.+352    	; 0x2532 <vfprintf+0x3ae>
    23d2:	e9 2f       	mov	r30, r25
    23d4:	e0 61       	ori	r30, 0x10	; 16
    23d6:	be 2e       	mov	r11, r30
    23d8:	b4 fe       	sbrs	r11, 4
    23da:	0d c0       	rjmp	.+26     	; 0x23f6 <vfprintf+0x272>
    23dc:	fb 2d       	mov	r31, r11
    23de:	f4 60       	ori	r31, 0x04	; 4
    23e0:	bf 2e       	mov	r11, r31
    23e2:	09 c0       	rjmp	.+18     	; 0x23f6 <vfprintf+0x272>
    23e4:	34 fe       	sbrs	r3, 4
    23e6:	0a c0       	rjmp	.+20     	; 0x23fc <vfprintf+0x278>
    23e8:	29 2f       	mov	r18, r25
    23ea:	26 60       	ori	r18, 0x06	; 6
    23ec:	b2 2e       	mov	r11, r18
    23ee:	06 c0       	rjmp	.+12     	; 0x23fc <vfprintf+0x278>
    23f0:	28 e0       	ldi	r18, 0x08	; 8
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	05 c0       	rjmp	.+10     	; 0x2400 <vfprintf+0x27c>
    23f6:	20 e1       	ldi	r18, 0x10	; 16
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	02 c0       	rjmp	.+4      	; 0x2400 <vfprintf+0x27c>
    23fc:	20 e1       	ldi	r18, 0x10	; 16
    23fe:	32 e0       	ldi	r19, 0x02	; 2
    2400:	f8 01       	movw	r30, r16
    2402:	b7 fe       	sbrs	r11, 7
    2404:	07 c0       	rjmp	.+14     	; 0x2414 <vfprintf+0x290>
    2406:	60 81       	ld	r22, Z
    2408:	71 81       	ldd	r23, Z+1	; 0x01
    240a:	82 81       	ldd	r24, Z+2	; 0x02
    240c:	93 81       	ldd	r25, Z+3	; 0x03
    240e:	0c 5f       	subi	r16, 0xFC	; 252
    2410:	1f 4f       	sbci	r17, 0xFF	; 255
    2412:	06 c0       	rjmp	.+12     	; 0x2420 <vfprintf+0x29c>
    2414:	60 81       	ld	r22, Z
    2416:	71 81       	ldd	r23, Z+1	; 0x01
    2418:	80 e0       	ldi	r24, 0x00	; 0
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	0e 5f       	subi	r16, 0xFE	; 254
    241e:	1f 4f       	sbci	r17, 0xFF	; 255
    2420:	a3 01       	movw	r20, r6
    2422:	0e 94 f5 12 	call	0x25ea	; 0x25ea <__ultoa_invert>
    2426:	88 2e       	mov	r8, r24
    2428:	86 18       	sub	r8, r6
    242a:	fb 2d       	mov	r31, r11
    242c:	ff 77       	andi	r31, 0x7F	; 127
    242e:	3f 2e       	mov	r3, r31
    2430:	36 fe       	sbrs	r3, 6
    2432:	0d c0       	rjmp	.+26     	; 0x244e <vfprintf+0x2ca>
    2434:	23 2d       	mov	r18, r3
    2436:	2e 7f       	andi	r18, 0xFE	; 254
    2438:	a2 2e       	mov	r10, r18
    243a:	89 14       	cp	r8, r9
    243c:	58 f4       	brcc	.+22     	; 0x2454 <vfprintf+0x2d0>
    243e:	34 fe       	sbrs	r3, 4
    2440:	0b c0       	rjmp	.+22     	; 0x2458 <vfprintf+0x2d4>
    2442:	32 fc       	sbrc	r3, 2
    2444:	09 c0       	rjmp	.+18     	; 0x2458 <vfprintf+0x2d4>
    2446:	83 2d       	mov	r24, r3
    2448:	8e 7e       	andi	r24, 0xEE	; 238
    244a:	a8 2e       	mov	r10, r24
    244c:	05 c0       	rjmp	.+10     	; 0x2458 <vfprintf+0x2d4>
    244e:	b8 2c       	mov	r11, r8
    2450:	a3 2c       	mov	r10, r3
    2452:	03 c0       	rjmp	.+6      	; 0x245a <vfprintf+0x2d6>
    2454:	b8 2c       	mov	r11, r8
    2456:	01 c0       	rjmp	.+2      	; 0x245a <vfprintf+0x2d6>
    2458:	b9 2c       	mov	r11, r9
    245a:	a4 fe       	sbrs	r10, 4
    245c:	0f c0       	rjmp	.+30     	; 0x247c <vfprintf+0x2f8>
    245e:	fe 01       	movw	r30, r28
    2460:	e8 0d       	add	r30, r8
    2462:	f1 1d       	adc	r31, r1
    2464:	80 81       	ld	r24, Z
    2466:	80 33       	cpi	r24, 0x30	; 48
    2468:	21 f4       	brne	.+8      	; 0x2472 <vfprintf+0x2ee>
    246a:	9a 2d       	mov	r25, r10
    246c:	99 7e       	andi	r25, 0xE9	; 233
    246e:	a9 2e       	mov	r10, r25
    2470:	09 c0       	rjmp	.+18     	; 0x2484 <vfprintf+0x300>
    2472:	a2 fe       	sbrs	r10, 2
    2474:	06 c0       	rjmp	.+12     	; 0x2482 <vfprintf+0x2fe>
    2476:	b3 94       	inc	r11
    2478:	b3 94       	inc	r11
    247a:	04 c0       	rjmp	.+8      	; 0x2484 <vfprintf+0x300>
    247c:	8a 2d       	mov	r24, r10
    247e:	86 78       	andi	r24, 0x86	; 134
    2480:	09 f0       	breq	.+2      	; 0x2484 <vfprintf+0x300>
    2482:	b3 94       	inc	r11
    2484:	a3 fc       	sbrc	r10, 3
    2486:	11 c0       	rjmp	.+34     	; 0x24aa <vfprintf+0x326>
    2488:	a0 fe       	sbrs	r10, 0
    248a:	06 c0       	rjmp	.+12     	; 0x2498 <vfprintf+0x314>
    248c:	b2 14       	cp	r11, r2
    248e:	88 f4       	brcc	.+34     	; 0x24b2 <vfprintf+0x32e>
    2490:	28 0c       	add	r2, r8
    2492:	92 2c       	mov	r9, r2
    2494:	9b 18       	sub	r9, r11
    2496:	0e c0       	rjmp	.+28     	; 0x24b4 <vfprintf+0x330>
    2498:	b2 14       	cp	r11, r2
    249a:	60 f4       	brcc	.+24     	; 0x24b4 <vfprintf+0x330>
    249c:	b6 01       	movw	r22, r12
    249e:	80 e2       	ldi	r24, 0x20	; 32
    24a0:	90 e0       	ldi	r25, 0x00	; 0
    24a2:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    24a6:	b3 94       	inc	r11
    24a8:	f7 cf       	rjmp	.-18     	; 0x2498 <vfprintf+0x314>
    24aa:	b2 14       	cp	r11, r2
    24ac:	18 f4       	brcc	.+6      	; 0x24b4 <vfprintf+0x330>
    24ae:	2b 18       	sub	r2, r11
    24b0:	02 c0       	rjmp	.+4      	; 0x24b6 <vfprintf+0x332>
    24b2:	98 2c       	mov	r9, r8
    24b4:	21 2c       	mov	r2, r1
    24b6:	a4 fe       	sbrs	r10, 4
    24b8:	10 c0       	rjmp	.+32     	; 0x24da <vfprintf+0x356>
    24ba:	b6 01       	movw	r22, r12
    24bc:	80 e3       	ldi	r24, 0x30	; 48
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    24c4:	a2 fe       	sbrs	r10, 2
    24c6:	17 c0       	rjmp	.+46     	; 0x24f6 <vfprintf+0x372>
    24c8:	a1 fc       	sbrc	r10, 1
    24ca:	03 c0       	rjmp	.+6      	; 0x24d2 <vfprintf+0x34e>
    24cc:	88 e7       	ldi	r24, 0x78	; 120
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	02 c0       	rjmp	.+4      	; 0x24d6 <vfprintf+0x352>
    24d2:	88 e5       	ldi	r24, 0x58	; 88
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	b6 01       	movw	r22, r12
    24d8:	0c c0       	rjmp	.+24     	; 0x24f2 <vfprintf+0x36e>
    24da:	8a 2d       	mov	r24, r10
    24dc:	86 78       	andi	r24, 0x86	; 134
    24de:	59 f0       	breq	.+22     	; 0x24f6 <vfprintf+0x372>
    24e0:	a1 fe       	sbrs	r10, 1
    24e2:	02 c0       	rjmp	.+4      	; 0x24e8 <vfprintf+0x364>
    24e4:	8b e2       	ldi	r24, 0x2B	; 43
    24e6:	01 c0       	rjmp	.+2      	; 0x24ea <vfprintf+0x366>
    24e8:	80 e2       	ldi	r24, 0x20	; 32
    24ea:	a7 fc       	sbrc	r10, 7
    24ec:	8d e2       	ldi	r24, 0x2D	; 45
    24ee:	b6 01       	movw	r22, r12
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    24f6:	89 14       	cp	r8, r9
    24f8:	38 f4       	brcc	.+14     	; 0x2508 <vfprintf+0x384>
    24fa:	b6 01       	movw	r22, r12
    24fc:	80 e3       	ldi	r24, 0x30	; 48
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    2504:	9a 94       	dec	r9
    2506:	f7 cf       	rjmp	.-18     	; 0x24f6 <vfprintf+0x372>
    2508:	8a 94       	dec	r8
    250a:	f3 01       	movw	r30, r6
    250c:	e8 0d       	add	r30, r8
    250e:	f1 1d       	adc	r31, r1
    2510:	80 81       	ld	r24, Z
    2512:	b6 01       	movw	r22, r12
    2514:	90 e0       	ldi	r25, 0x00	; 0
    2516:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    251a:	81 10       	cpse	r8, r1
    251c:	f5 cf       	rjmp	.-22     	; 0x2508 <vfprintf+0x384>
    251e:	22 20       	and	r2, r2
    2520:	09 f4       	brne	.+2      	; 0x2524 <vfprintf+0x3a0>
    2522:	42 ce       	rjmp	.-892    	; 0x21a8 <vfprintf+0x24>
    2524:	b6 01       	movw	r22, r12
    2526:	80 e2       	ldi	r24, 0x20	; 32
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	0e 94 b9 12 	call	0x2572	; 0x2572 <fputc>
    252e:	2a 94       	dec	r2
    2530:	f6 cf       	rjmp	.-20     	; 0x251e <vfprintf+0x39a>
    2532:	f6 01       	movw	r30, r12
    2534:	86 81       	ldd	r24, Z+6	; 0x06
    2536:	97 81       	ldd	r25, Z+7	; 0x07
    2538:	02 c0       	rjmp	.+4      	; 0x253e <vfprintf+0x3ba>
    253a:	8f ef       	ldi	r24, 0xFF	; 255
    253c:	9f ef       	ldi	r25, 0xFF	; 255
    253e:	2b 96       	adiw	r28, 0x0b	; 11
    2540:	e2 e1       	ldi	r30, 0x12	; 18
    2542:	0c 94 6f 13 	jmp	0x26de	; 0x26de <__epilogue_restores__>

00002546 <strnlen_P>:
    2546:	fc 01       	movw	r30, r24
    2548:	05 90       	lpm	r0, Z+
    254a:	61 50       	subi	r22, 0x01	; 1
    254c:	70 40       	sbci	r23, 0x00	; 0
    254e:	01 10       	cpse	r0, r1
    2550:	d8 f7       	brcc	.-10     	; 0x2548 <strnlen_P+0x2>
    2552:	80 95       	com	r24
    2554:	90 95       	com	r25
    2556:	8e 0f       	add	r24, r30
    2558:	9f 1f       	adc	r25, r31
    255a:	08 95       	ret

0000255c <strnlen>:
    255c:	fc 01       	movw	r30, r24
    255e:	61 50       	subi	r22, 0x01	; 1
    2560:	70 40       	sbci	r23, 0x00	; 0
    2562:	01 90       	ld	r0, Z+
    2564:	01 10       	cpse	r0, r1
    2566:	d8 f7       	brcc	.-10     	; 0x255e <strnlen+0x2>
    2568:	80 95       	com	r24
    256a:	90 95       	com	r25
    256c:	8e 0f       	add	r24, r30
    256e:	9f 1f       	adc	r25, r31
    2570:	08 95       	ret

00002572 <fputc>:
    2572:	0f 93       	push	r16
    2574:	1f 93       	push	r17
    2576:	cf 93       	push	r28
    2578:	df 93       	push	r29
    257a:	fb 01       	movw	r30, r22
    257c:	23 81       	ldd	r18, Z+3	; 0x03
    257e:	21 fd       	sbrc	r18, 1
    2580:	03 c0       	rjmp	.+6      	; 0x2588 <fputc+0x16>
    2582:	8f ef       	ldi	r24, 0xFF	; 255
    2584:	9f ef       	ldi	r25, 0xFF	; 255
    2586:	2c c0       	rjmp	.+88     	; 0x25e0 <fputc+0x6e>
    2588:	22 ff       	sbrs	r18, 2
    258a:	16 c0       	rjmp	.+44     	; 0x25b8 <fputc+0x46>
    258c:	46 81       	ldd	r20, Z+6	; 0x06
    258e:	57 81       	ldd	r21, Z+7	; 0x07
    2590:	24 81       	ldd	r18, Z+4	; 0x04
    2592:	35 81       	ldd	r19, Z+5	; 0x05
    2594:	42 17       	cp	r20, r18
    2596:	53 07       	cpc	r21, r19
    2598:	44 f4       	brge	.+16     	; 0x25aa <fputc+0x38>
    259a:	a0 81       	ld	r26, Z
    259c:	b1 81       	ldd	r27, Z+1	; 0x01
    259e:	9d 01       	movw	r18, r26
    25a0:	2f 5f       	subi	r18, 0xFF	; 255
    25a2:	3f 4f       	sbci	r19, 0xFF	; 255
    25a4:	31 83       	std	Z+1, r19	; 0x01
    25a6:	20 83       	st	Z, r18
    25a8:	8c 93       	st	X, r24
    25aa:	26 81       	ldd	r18, Z+6	; 0x06
    25ac:	37 81       	ldd	r19, Z+7	; 0x07
    25ae:	2f 5f       	subi	r18, 0xFF	; 255
    25b0:	3f 4f       	sbci	r19, 0xFF	; 255
    25b2:	37 83       	std	Z+7, r19	; 0x07
    25b4:	26 83       	std	Z+6, r18	; 0x06
    25b6:	14 c0       	rjmp	.+40     	; 0x25e0 <fputc+0x6e>
    25b8:	8b 01       	movw	r16, r22
    25ba:	ec 01       	movw	r28, r24
    25bc:	fb 01       	movw	r30, r22
    25be:	00 84       	ldd	r0, Z+8	; 0x08
    25c0:	f1 85       	ldd	r31, Z+9	; 0x09
    25c2:	e0 2d       	mov	r30, r0
    25c4:	09 95       	icall
    25c6:	89 2b       	or	r24, r25
    25c8:	e1 f6       	brne	.-72     	; 0x2582 <fputc+0x10>
    25ca:	d8 01       	movw	r26, r16
    25cc:	16 96       	adiw	r26, 0x06	; 6
    25ce:	8d 91       	ld	r24, X+
    25d0:	9c 91       	ld	r25, X
    25d2:	17 97       	sbiw	r26, 0x07	; 7
    25d4:	01 96       	adiw	r24, 0x01	; 1
    25d6:	17 96       	adiw	r26, 0x07	; 7
    25d8:	9c 93       	st	X, r25
    25da:	8e 93       	st	-X, r24
    25dc:	16 97       	sbiw	r26, 0x06	; 6
    25de:	ce 01       	movw	r24, r28
    25e0:	df 91       	pop	r29
    25e2:	cf 91       	pop	r28
    25e4:	1f 91       	pop	r17
    25e6:	0f 91       	pop	r16
    25e8:	08 95       	ret

000025ea <__ultoa_invert>:
    25ea:	fa 01       	movw	r30, r20
    25ec:	aa 27       	eor	r26, r26
    25ee:	28 30       	cpi	r18, 0x08	; 8
    25f0:	51 f1       	breq	.+84     	; 0x2646 <__ultoa_invert+0x5c>
    25f2:	20 31       	cpi	r18, 0x10	; 16
    25f4:	81 f1       	breq	.+96     	; 0x2656 <__ultoa_invert+0x6c>
    25f6:	e8 94       	clt
    25f8:	6f 93       	push	r22
    25fa:	6e 7f       	andi	r22, 0xFE	; 254
    25fc:	6e 5f       	subi	r22, 0xFE	; 254
    25fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2600:	8f 4f       	sbci	r24, 0xFF	; 255
    2602:	9f 4f       	sbci	r25, 0xFF	; 255
    2604:	af 4f       	sbci	r26, 0xFF	; 255
    2606:	b1 e0       	ldi	r27, 0x01	; 1
    2608:	3e d0       	rcall	.+124    	; 0x2686 <__ultoa_invert+0x9c>
    260a:	b4 e0       	ldi	r27, 0x04	; 4
    260c:	3c d0       	rcall	.+120    	; 0x2686 <__ultoa_invert+0x9c>
    260e:	67 0f       	add	r22, r23
    2610:	78 1f       	adc	r23, r24
    2612:	89 1f       	adc	r24, r25
    2614:	9a 1f       	adc	r25, r26
    2616:	a1 1d       	adc	r26, r1
    2618:	68 0f       	add	r22, r24
    261a:	79 1f       	adc	r23, r25
    261c:	8a 1f       	adc	r24, r26
    261e:	91 1d       	adc	r25, r1
    2620:	a1 1d       	adc	r26, r1
    2622:	6a 0f       	add	r22, r26
    2624:	71 1d       	adc	r23, r1
    2626:	81 1d       	adc	r24, r1
    2628:	91 1d       	adc	r25, r1
    262a:	a1 1d       	adc	r26, r1
    262c:	20 d0       	rcall	.+64     	; 0x266e <__ultoa_invert+0x84>
    262e:	09 f4       	brne	.+2      	; 0x2632 <__ultoa_invert+0x48>
    2630:	68 94       	set
    2632:	3f 91       	pop	r19
    2634:	2a e0       	ldi	r18, 0x0A	; 10
    2636:	26 9f       	mul	r18, r22
    2638:	11 24       	eor	r1, r1
    263a:	30 19       	sub	r19, r0
    263c:	30 5d       	subi	r19, 0xD0	; 208
    263e:	31 93       	st	Z+, r19
    2640:	de f6       	brtc	.-74     	; 0x25f8 <__ultoa_invert+0xe>
    2642:	cf 01       	movw	r24, r30
    2644:	08 95       	ret
    2646:	46 2f       	mov	r20, r22
    2648:	47 70       	andi	r20, 0x07	; 7
    264a:	40 5d       	subi	r20, 0xD0	; 208
    264c:	41 93       	st	Z+, r20
    264e:	b3 e0       	ldi	r27, 0x03	; 3
    2650:	0f d0       	rcall	.+30     	; 0x2670 <__ultoa_invert+0x86>
    2652:	c9 f7       	brne	.-14     	; 0x2646 <__ultoa_invert+0x5c>
    2654:	f6 cf       	rjmp	.-20     	; 0x2642 <__ultoa_invert+0x58>
    2656:	46 2f       	mov	r20, r22
    2658:	4f 70       	andi	r20, 0x0F	; 15
    265a:	40 5d       	subi	r20, 0xD0	; 208
    265c:	4a 33       	cpi	r20, 0x3A	; 58
    265e:	18 f0       	brcs	.+6      	; 0x2666 <__ultoa_invert+0x7c>
    2660:	49 5d       	subi	r20, 0xD9	; 217
    2662:	31 fd       	sbrc	r19, 1
    2664:	40 52       	subi	r20, 0x20	; 32
    2666:	41 93       	st	Z+, r20
    2668:	02 d0       	rcall	.+4      	; 0x266e <__ultoa_invert+0x84>
    266a:	a9 f7       	brne	.-22     	; 0x2656 <__ultoa_invert+0x6c>
    266c:	ea cf       	rjmp	.-44     	; 0x2642 <__ultoa_invert+0x58>
    266e:	b4 e0       	ldi	r27, 0x04	; 4
    2670:	a6 95       	lsr	r26
    2672:	97 95       	ror	r25
    2674:	87 95       	ror	r24
    2676:	77 95       	ror	r23
    2678:	67 95       	ror	r22
    267a:	ba 95       	dec	r27
    267c:	c9 f7       	brne	.-14     	; 0x2670 <__ultoa_invert+0x86>
    267e:	00 97       	sbiw	r24, 0x00	; 0
    2680:	61 05       	cpc	r22, r1
    2682:	71 05       	cpc	r23, r1
    2684:	08 95       	ret
    2686:	9b 01       	movw	r18, r22
    2688:	ac 01       	movw	r20, r24
    268a:	0a 2e       	mov	r0, r26
    268c:	06 94       	lsr	r0
    268e:	57 95       	ror	r21
    2690:	47 95       	ror	r20
    2692:	37 95       	ror	r19
    2694:	27 95       	ror	r18
    2696:	ba 95       	dec	r27
    2698:	c9 f7       	brne	.-14     	; 0x268c <__ultoa_invert+0xa2>
    269a:	62 0f       	add	r22, r18
    269c:	73 1f       	adc	r23, r19
    269e:	84 1f       	adc	r24, r20
    26a0:	95 1f       	adc	r25, r21
    26a2:	a0 1d       	adc	r26, r0
    26a4:	08 95       	ret

000026a6 <__prologue_saves__>:
    26a6:	2f 92       	push	r2
    26a8:	3f 92       	push	r3
    26aa:	4f 92       	push	r4
    26ac:	5f 92       	push	r5
    26ae:	6f 92       	push	r6
    26b0:	7f 92       	push	r7
    26b2:	8f 92       	push	r8
    26b4:	9f 92       	push	r9
    26b6:	af 92       	push	r10
    26b8:	bf 92       	push	r11
    26ba:	cf 92       	push	r12
    26bc:	df 92       	push	r13
    26be:	ef 92       	push	r14
    26c0:	ff 92       	push	r15
    26c2:	0f 93       	push	r16
    26c4:	1f 93       	push	r17
    26c6:	cf 93       	push	r28
    26c8:	df 93       	push	r29
    26ca:	cd b7       	in	r28, 0x3d	; 61
    26cc:	de b7       	in	r29, 0x3e	; 62
    26ce:	ca 1b       	sub	r28, r26
    26d0:	db 0b       	sbc	r29, r27
    26d2:	0f b6       	in	r0, 0x3f	; 63
    26d4:	f8 94       	cli
    26d6:	de bf       	out	0x3e, r29	; 62
    26d8:	0f be       	out	0x3f, r0	; 63
    26da:	cd bf       	out	0x3d, r28	; 61
    26dc:	09 94       	ijmp

000026de <__epilogue_restores__>:
    26de:	2a 88       	ldd	r2, Y+18	; 0x12
    26e0:	39 88       	ldd	r3, Y+17	; 0x11
    26e2:	48 88       	ldd	r4, Y+16	; 0x10
    26e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    26e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    26e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    26ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    26ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    26ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    26f0:	b9 84       	ldd	r11, Y+9	; 0x09
    26f2:	c8 84       	ldd	r12, Y+8	; 0x08
    26f4:	df 80       	ldd	r13, Y+7	; 0x07
    26f6:	ee 80       	ldd	r14, Y+6	; 0x06
    26f8:	fd 80       	ldd	r15, Y+5	; 0x05
    26fa:	0c 81       	ldd	r16, Y+4	; 0x04
    26fc:	1b 81       	ldd	r17, Y+3	; 0x03
    26fe:	aa 81       	ldd	r26, Y+2	; 0x02
    2700:	b9 81       	ldd	r27, Y+1	; 0x01
    2702:	ce 0f       	add	r28, r30
    2704:	d1 1d       	adc	r29, r1
    2706:	0f b6       	in	r0, 0x3f	; 63
    2708:	f8 94       	cli
    270a:	de bf       	out	0x3e, r29	; 62
    270c:	0f be       	out	0x3f, r0	; 63
    270e:	cd bf       	out	0x3d, r28	; 61
    2710:	ed 01       	movw	r28, r26
    2712:	08 95       	ret

00002714 <_exit>:
    2714:	f8 94       	cli

00002716 <__stop_program>:
    2716:	ff cf       	rjmp	.-2      	; 0x2716 <__stop_program>
