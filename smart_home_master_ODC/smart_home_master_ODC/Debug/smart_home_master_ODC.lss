
smart_home_master_ODC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e78  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  00000e78  00000eec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000f4c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fa8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  00000fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000018b4  00000000  00000000  0000111c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a80  00000000  00000000  000029d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ada  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000280  00000000  00000000  00003f2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000786  00000000  00000000  000041ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e65  00000000  00000000  00004932  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00005797  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  54:	58 00       	.word	0x0058	; ????
  56:	60 00       	.word	0x0060	; ????
  58:	67 00       	.word	0x0067	; ????
  5a:	6e 00       	.word	0x006e	; ????
  5c:	77 00       	.word	0x0077	; ????
  5e:	7e 00       	.word	0x007e	; ????
  60:	87 00       	.word	0x0087	; ????
  62:	90 00       	.word	0x0090	; ????

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d8 e0       	ldi	r29, 0x08	; 8
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	a0 e6       	ldi	r26, 0x60	; 96
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	e8 e7       	ldi	r30, 0x78	; 120
  78:	fe e0       	ldi	r31, 0x0E	; 14
  7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
  7c:	05 90       	lpm	r0, Z+
  7e:	0d 92       	st	X+, r0
  80:	a0 3c       	cpi	r26, 0xC0	; 192
  82:	b1 07       	cpc	r27, r17
  84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>
  86:	0e 94 be 02 	call	0x57c	; 0x57c <main>
  8a:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_vidInit>:
#include "ADC_interface.h"
#include "ADC_private.h"
#include "ADC_config.h"

void ADC_vidInit(_enuADCChannels enuADCChannel)
{
  92:	e8 2f       	mov	r30, r24
    ADMUX &= 0xE0;
  94:	87 b1       	in	r24, 0x07	; 7
  96:	80 7e       	andi	r24, 0xE0	; 224
  98:	87 b9       	out	0x07, r24	; 7
    switch (enuADCChannel)
  9a:	8e 2f       	mov	r24, r30
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	88 30       	cpi	r24, 0x08	; 8
  a0:	91 05       	cpc	r25, r1
  a2:	08 f0       	brcs	.+2      	; 0xa6 <ADC_vidInit+0x14>
  a4:	45 c0       	rjmp	.+138    	; 0x130 <ADC_vidInit+0x9e>
  a6:	fc 01       	movw	r30, r24
  a8:	e6 5d       	subi	r30, 0xD6	; 214
  aa:	ff 4f       	sbci	r31, 0xFF	; 255
  ac:	0c 94 4a 04 	jmp	0x894	; 0x894 <__tablejump2__>
    {
    case ADC_CH0:
        DIO_vidSetPinMode(GPIOA, PIN0, INPUT);
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH0;
  ba:	87 b1       	in	r24, 0x07	; 7
  bc:	87 b9       	out	0x07, r24	; 7
        break;
  be:	38 c0       	rjmp	.+112    	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH1:
        DIO_vidSetPinMode(GPIOA, PIN1, INPUT);
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	61 e0       	ldi	r22, 0x01	; 1
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH1;
  ca:	38 9a       	sbi	0x07, 0	; 7
        break;
  cc:	31 c0       	rjmp	.+98     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH2:
        DIO_vidSetPinMode(GPIOA, PIN2, INPUT);
  ce:	40 e0       	ldi	r20, 0x00	; 0
  d0:	62 e0       	ldi	r22, 0x02	; 2
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH2;
  d8:	39 9a       	sbi	0x07, 1	; 7
        break;
  da:	2a c0       	rjmp	.+84     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH3:
        DIO_vidSetPinMode(GPIOA, PIN3, INPUT);
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	63 e0       	ldi	r22, 0x03	; 3
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH3;
  e6:	87 b1       	in	r24, 0x07	; 7
  e8:	83 60       	ori	r24, 0x03	; 3
  ea:	87 b9       	out	0x07, r24	; 7
        break;
  ec:	21 c0       	rjmp	.+66     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH4:
        DIO_vidSetPinMode(GPIOA, PIN4, INPUT);
  ee:	40 e0       	ldi	r20, 0x00	; 0
  f0:	64 e0       	ldi	r22, 0x04	; 4
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH4;
  f8:	3a 9a       	sbi	0x07, 2	; 7
        break;
  fa:	1a c0       	rjmp	.+52     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH5:
        DIO_vidSetPinMode(GPIOA, PIN5, INPUT);
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	65 e0       	ldi	r22, 0x05	; 5
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH5;
 106:	87 b1       	in	r24, 0x07	; 7
 108:	85 60       	ori	r24, 0x05	; 5
 10a:	87 b9       	out	0x07, r24	; 7
        break;
 10c:	11 c0       	rjmp	.+34     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH6:
        DIO_vidSetPinMode(GPIOA, PIN6, INPUT);
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	66 e0       	ldi	r22, 0x06	; 6
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH6;
 118:	87 b1       	in	r24, 0x07	; 7
 11a:	86 60       	ori	r24, 0x06	; 6
 11c:	87 b9       	out	0x07, r24	; 7
        break;
 11e:	08 c0       	rjmp	.+16     	; 0x130 <ADC_vidInit+0x9e>
    case ADC_CH7:
        DIO_vidSetPinMode(GPIOA, PIN7, INPUT);
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	67 e0       	ldi	r22, 0x07	; 7
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        ADMUX |= ADC_CH7;
 12a:	87 b1       	in	r24, 0x07	; 7
 12c:	87 60       	ori	r24, 0x07	; 7
 12e:	87 b9       	out	0x07, r24	; 7
        break;
    default:
        break;
    }
    ADCSRA &= 0xF8;
 130:	86 b1       	in	r24, 0x06	; 6
 132:	88 7f       	andi	r24, 0xF8	; 248
 134:	86 b9       	out	0x06, r24	; 6
    ADCSRA |= ADC_PSC;
 136:	86 b1       	in	r24, 0x06	; 6
 138:	83 60       	ori	r24, 0x03	; 3
 13a:	86 b9       	out	0x06, r24	; 6
    #elif   ADC_PSC == 3
    #elif   ADC_PSC == 4
    #elif   ADC_PSC == 5
    #else
    #endif*/
    ADMUX  &= 0xF8;
 13c:	87 b1       	in	r24, 0x07	; 7
 13e:	88 7f       	andi	r24, 0xF8	; 248
 140:	87 b9       	out	0x07, r24	; 7
    ADMUX  |= (ADC_VREF << 6);
 142:	87 b1       	in	r24, 0x07	; 7
 144:	80 6c       	ori	r24, 0xC0	; 192
 146:	87 b9       	out	0x07, r24	; 7

    #if ADC_STORE == 0
        CLR_BIT(ADMUX, ADLAR);
 148:	3d 98       	cbi	0x07, 5	; 7
    #else
        SET_BIT(ADMUX, ADLAR);
    #endif

    SET_BIT(ADCSRA, ADATE);
 14a:	35 9a       	sbi	0x06, 5	; 6
    SET_BIT(ADCSRA, ADEN);
 14c:	37 9a       	sbi	0x06, 7	; 6
 14e:	08 95       	ret

00000150 <ADC_u16Read>:
}

u16 ADC_u16Read(void)
{
    u16 u16ReturnedValue;
    SET_BIT(ADCSRA, ADSC);
 150:	36 9a       	sbi	0x06, 6	; 6
    while(GET_BIT(ADCSRA, ADIF) == 0);
 152:	34 9b       	sbis	0x06, 4	; 6
 154:	fe cf       	rjmp	.-4      	; 0x152 <ADC_u16Read+0x2>
    SET_BIT(ADCSRA, ADIF);
 156:	34 9a       	sbi	0x06, 4	; 6
    u16ReturnedValue  = (u16)ADCL;
 158:	84 b1       	in	r24, 0x04	; 4
    u16ReturnedValue |= (u16)(ADCH<<8);
 15a:	25 b1       	in	r18, 0x05	; 5
    return u16ReturnedValue;
 15c:	90 e0       	ldi	r25, 0x00	; 0
}
 15e:	92 2b       	or	r25, r18
 160:	08 95       	ret

00000162 <DIO_vidSetPinMode>:
        PORTC &= 0xF0;
        PORTC |= u8Value;
        break;
    case GPIOD:
        PORTD &= 0xF0;
        PORTD |= u8Value;
 162:	81 30       	cpi	r24, 0x01	; 1
 164:	01 f1       	breq	.+64     	; 0x1a6 <DIO_vidSetPinMode+0x44>
 166:	30 f0       	brcs	.+12     	; 0x174 <DIO_vidSetPinMode+0x12>
 168:	82 30       	cpi	r24, 0x02	; 2
 16a:	b1 f1       	breq	.+108    	; 0x1d8 <DIO_vidSetPinMode+0x76>
 16c:	83 30       	cpi	r24, 0x03	; 3
 16e:	09 f4       	brne	.+2      	; 0x172 <DIO_vidSetPinMode+0x10>
 170:	4c c0       	rjmp	.+152    	; 0x20a <DIO_vidSetPinMode+0xa8>
 172:	08 95       	ret
 174:	41 30       	cpi	r20, 0x01	; 1
 176:	59 f4       	brne	.+22     	; 0x18e <DIO_vidSetPinMode+0x2c>
 178:	2a b3       	in	r18, 0x1a	; 26
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_vidSetPinMode+0x22>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_vidSetPinMode+0x1e>
 188:	82 2b       	or	r24, r18
 18a:	8a bb       	out	0x1a, r24	; 26
 18c:	08 95       	ret
 18e:	2a b3       	in	r18, 0x1a	; 26
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_vidSetPinMode+0x38>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_vidSetPinMode+0x34>
 19e:	80 95       	com	r24
 1a0:	82 23       	and	r24, r18
 1a2:	8a bb       	out	0x1a, r24	; 26
 1a4:	08 95       	ret
 1a6:	41 30       	cpi	r20, 0x01	; 1
 1a8:	59 f4       	brne	.+22     	; 0x1c0 <DIO_vidSetPinMode+0x5e>
 1aa:	27 b3       	in	r18, 0x17	; 23
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_vidSetPinMode+0x54>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_vidSetPinMode+0x50>
 1ba:	82 2b       	or	r24, r18
 1bc:	87 bb       	out	0x17, r24	; 23
 1be:	08 95       	ret
 1c0:	27 b3       	in	r18, 0x17	; 23
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_vidSetPinMode+0x6a>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_vidSetPinMode+0x66>
 1d0:	80 95       	com	r24
 1d2:	82 23       	and	r24, r18
 1d4:	87 bb       	out	0x17, r24	; 23
 1d6:	08 95       	ret
 1d8:	41 30       	cpi	r20, 0x01	; 1
 1da:	59 f4       	brne	.+22     	; 0x1f2 <DIO_vidSetPinMode+0x90>
 1dc:	24 b3       	in	r18, 0x14	; 20
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <DIO_vidSetPinMode+0x86>
 1e4:	88 0f       	add	r24, r24
 1e6:	99 1f       	adc	r25, r25
 1e8:	6a 95       	dec	r22
 1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <DIO_vidSetPinMode+0x82>
 1ec:	82 2b       	or	r24, r18
 1ee:	84 bb       	out	0x14, r24	; 20
 1f0:	08 95       	ret
 1f2:	24 b3       	in	r18, 0x14	; 20
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_vidSetPinMode+0x9c>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_vidSetPinMode+0x98>
 202:	80 95       	com	r24
 204:	82 23       	and	r24, r18
 206:	84 bb       	out	0x14, r24	; 20
 208:	08 95       	ret
 20a:	41 30       	cpi	r20, 0x01	; 1
 20c:	59 f4       	brne	.+22     	; 0x224 <DIO_vidSetPinMode+0xc2>
 20e:	21 b3       	in	r18, 0x11	; 17
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_vidSetPinMode+0xb8>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_vidSetPinMode+0xb4>
 21e:	82 2b       	or	r24, r18
 220:	81 bb       	out	0x11, r24	; 17
 222:	08 95       	ret
 224:	21 b3       	in	r18, 0x11	; 17
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_vidSetPinMode+0xce>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_vidSetPinMode+0xca>
 234:	80 95       	com	r24
 236:	82 23       	and	r24, r18
 238:	81 bb       	out	0x11, r24	; 17
 23a:	08 95       	ret

0000023c <DIO_vidWritePin>:
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	01 f1       	breq	.+64     	; 0x280 <DIO_vidWritePin+0x44>
 240:	30 f0       	brcs	.+12     	; 0x24e <DIO_vidWritePin+0x12>
 242:	82 30       	cpi	r24, 0x02	; 2
 244:	b1 f1       	breq	.+108    	; 0x2b2 <DIO_vidWritePin+0x76>
 246:	83 30       	cpi	r24, 0x03	; 3
 248:	09 f4       	brne	.+2      	; 0x24c <DIO_vidWritePin+0x10>
 24a:	4c c0       	rjmp	.+152    	; 0x2e4 <DIO_vidWritePin+0xa8>
 24c:	08 95       	ret
 24e:	41 30       	cpi	r20, 0x01	; 1
 250:	59 f4       	brne	.+22     	; 0x268 <DIO_vidWritePin+0x2c>
 252:	2b b3       	in	r18, 0x1b	; 27
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_vidWritePin+0x22>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_vidWritePin+0x1e>
 262:	82 2b       	or	r24, r18
 264:	8b bb       	out	0x1b, r24	; 27
 266:	08 95       	ret
 268:	2b b3       	in	r18, 0x1b	; 27
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_vidWritePin+0x38>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_vidWritePin+0x34>
 278:	80 95       	com	r24
 27a:	82 23       	and	r24, r18
 27c:	8b bb       	out	0x1b, r24	; 27
 27e:	08 95       	ret
 280:	41 30       	cpi	r20, 0x01	; 1
 282:	59 f4       	brne	.+22     	; 0x29a <DIO_vidWritePin+0x5e>
 284:	28 b3       	in	r18, 0x18	; 24
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_vidWritePin+0x54>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_vidWritePin+0x50>
 294:	82 2b       	or	r24, r18
 296:	88 bb       	out	0x18, r24	; 24
 298:	08 95       	ret
 29a:	28 b3       	in	r18, 0x18	; 24
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <DIO_vidWritePin+0x6a>
 2a2:	88 0f       	add	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	6a 95       	dec	r22
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <DIO_vidWritePin+0x66>
 2aa:	80 95       	com	r24
 2ac:	82 23       	and	r24, r18
 2ae:	88 bb       	out	0x18, r24	; 24
 2b0:	08 95       	ret
 2b2:	41 30       	cpi	r20, 0x01	; 1
 2b4:	59 f4       	brne	.+22     	; 0x2cc <DIO_vidWritePin+0x90>
 2b6:	25 b3       	in	r18, 0x15	; 21
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <DIO_vidWritePin+0x86>
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	6a 95       	dec	r22
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <DIO_vidWritePin+0x82>
 2c6:	82 2b       	or	r24, r18
 2c8:	85 bb       	out	0x15, r24	; 21
 2ca:	08 95       	ret
 2cc:	25 b3       	in	r18, 0x15	; 21
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <DIO_vidWritePin+0x9c>
 2d4:	88 0f       	add	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	6a 95       	dec	r22
 2da:	e2 f7       	brpl	.-8      	; 0x2d4 <DIO_vidWritePin+0x98>
 2dc:	80 95       	com	r24
 2de:	82 23       	and	r24, r18
 2e0:	85 bb       	out	0x15, r24	; 21
 2e2:	08 95       	ret
 2e4:	41 30       	cpi	r20, 0x01	; 1
 2e6:	59 f4       	brne	.+22     	; 0x2fe <DIO_vidWritePin+0xc2>
 2e8:	22 b3       	in	r18, 0x12	; 18
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_vidWritePin+0xb8>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	6a 95       	dec	r22
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_vidWritePin+0xb4>
 2f8:	82 2b       	or	r24, r18
 2fa:	82 bb       	out	0x12, r24	; 18
 2fc:	08 95       	ret
 2fe:	22 b3       	in	r18, 0x12	; 18
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_vidWritePin+0xce>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	6a 95       	dec	r22
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_vidWritePin+0xca>
 30e:	80 95       	com	r24
 310:	82 23       	and	r24, r18
 312:	82 bb       	out	0x12, r24	; 18
 314:	08 95       	ret

00000316 <DIO_vidSetHighNibbleMode>:
        break;
    }
}

void DIO_vidSetHighNibbleMode(_enuGPIOx enuPortNum, _enuIOx enuPinDirection)
{
 316:	1f 93       	push	r17
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	18 2f       	mov	r17, r24
 31e:	d6 2f       	mov	r29, r22
    u8 u8Counter = 4;
    for (u8Counter = 4; u8Counter <= 7; u8Counter++)
 320:	c4 e0       	ldi	r28, 0x04	; 4
    {
        DIO_vidSetPinMode(enuPortNum, u8Counter, enuPinDirection);
 322:	4d 2f       	mov	r20, r29
 324:	6c 2f       	mov	r22, r28
 326:	81 2f       	mov	r24, r17
 328:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
}

void DIO_vidSetHighNibbleMode(_enuGPIOx enuPortNum, _enuIOx enuPinDirection)
{
    u8 u8Counter = 4;
    for (u8Counter = 4; u8Counter <= 7; u8Counter++)
 32c:	cf 5f       	subi	r28, 0xFF	; 255
 32e:	c8 30       	cpi	r28, 0x08	; 8
 330:	c1 f7       	brne	.-16     	; 0x322 <DIO_vidSetHighNibbleMode+0xc>
    {
        DIO_vidSetPinMode(enuPortNum, u8Counter, enuPinDirection);
    }    
}
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	1f 91       	pop	r17
 338:	08 95       	ret

0000033a <DIO_vidWriteHighNibble>:

void DIO_vidWriteHighNibble(_enuGPIOx enuPortNum, u8 u8Value)
{
    u8Value &= 0xF0;
 33a:	60 7f       	andi	r22, 0xF0	; 240
    switch (enuPortNum)
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	69 f0       	breq	.+26     	; 0x35a <DIO_vidWriteHighNibble+0x20>
 340:	28 f0       	brcs	.+10     	; 0x34c <DIO_vidWriteHighNibble+0x12>
 342:	82 30       	cpi	r24, 0x02	; 2
 344:	89 f0       	breq	.+34     	; 0x368 <DIO_vidWriteHighNibble+0x2e>
 346:	83 30       	cpi	r24, 0x03	; 3
 348:	b1 f0       	breq	.+44     	; 0x376 <DIO_vidWriteHighNibble+0x3c>
 34a:	08 95       	ret
    {
    case GPIOA:
        PORTA &= 0x0F;
 34c:	8b b3       	in	r24, 0x1b	; 27
 34e:	8f 70       	andi	r24, 0x0F	; 15
 350:	8b bb       	out	0x1b, r24	; 27
        PORTA |= u8Value;
 352:	8b b3       	in	r24, 0x1b	; 27
 354:	68 2b       	or	r22, r24
 356:	6b bb       	out	0x1b, r22	; 27
        break;
 358:	08 95       	ret
    case GPIOB:
        PORTB &= 0x0F;
 35a:	88 b3       	in	r24, 0x18	; 24
 35c:	8f 70       	andi	r24, 0x0F	; 15
 35e:	88 bb       	out	0x18, r24	; 24
        PORTB |= u8Value;
 360:	88 b3       	in	r24, 0x18	; 24
 362:	68 2b       	or	r22, r24
 364:	68 bb       	out	0x18, r22	; 24
        break;
 366:	08 95       	ret
    case GPIOC:
        PORTC &= 0x0F;
 368:	85 b3       	in	r24, 0x15	; 21
 36a:	8f 70       	andi	r24, 0x0F	; 15
 36c:	85 bb       	out	0x15, r24	; 21
        PORTC |= u8Value;
 36e:	85 b3       	in	r24, 0x15	; 21
 370:	68 2b       	or	r22, r24
 372:	65 bb       	out	0x15, r22	; 21
        break;
 374:	08 95       	ret
    case GPIOD:
        PORTD &= 0x0F;
 376:	82 b3       	in	r24, 0x12	; 18
 378:	8f 70       	andi	r24, 0x0F	; 15
 37a:	82 bb       	out	0x12, r24	; 18
        PORTD |= u8Value;
 37c:	82 b3       	in	r24, 0x12	; 18
 37e:	68 2b       	or	r22, r24
 380:	62 bb       	out	0x12, r22	; 18
 382:	08 95       	ret

00000384 <LCD_vidSendEnablePulse>:
    #endif
}

static void LCD_vidSendEnablePulse(void)
{
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, HIGH);
 384:	41 e0       	ldi	r20, 0x01	; 1
 386:	62 e0       	ldi	r22, 0x02	; 2
 388:	83 e0       	ldi	r24, 0x03	; 3
 38a:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 38e:	8f e9       	ldi	r24, 0x9F	; 159
 390:	9f e0       	ldi	r25, 0x0F	; 15
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	f1 f7       	brne	.-4      	; 0x392 <LCD_vidSendEnablePulse+0xe>
 396:	00 c0       	rjmp	.+0      	; 0x398 <LCD_vidSendEnablePulse+0x14>
 398:	00 00       	nop
    _delay_ms(2);
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, LOW);
 39a:	40 e0       	ldi	r20, 0x00	; 0
 39c:	62 e0       	ldi	r22, 0x02	; 2
 39e:	83 e0       	ldi	r24, 0x03	; 3
 3a0:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
 3a4:	08 95       	ret

000003a6 <LCD_vidSendCmd>:
    _delay_ms(10);
    LCD_vidSendCmd(LCD_ENTRY_MODE);
}

static void LCD_vidSendCmd(u8 u8Cmd)
{
 3a6:	cf 93       	push	r28
 3a8:	c8 2f       	mov	r28, r24
    DIO_vidWritePin(LCD_RW_PORT, LCD_RW_PIN, LOW);
 3aa:	40 e0       	ldi	r20, 0x00	; 0
 3ac:	61 e0       	ldi	r22, 0x01	; 1
 3ae:	83 e0       	ldi	r24, 0x03	; 3
 3b0:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
    DIO_vidWritePin(LCD_RS_PORT, LCD_RS_PIN, LOW);
 3b4:	40 e0       	ldi	r20, 0x00	; 0
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	83 e0       	ldi	r24, 0x03	; 3
 3ba:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Cmd>>4));
            LCD_vidSendEnablePulse();
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Cmd));
            LCD_vidSendEnablePulse();
        #else
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Cmd));
 3be:	6c 2f       	mov	r22, r28
 3c0:	83 e0       	ldi	r24, 0x03	; 3
 3c2:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
 3c6:	0e 94 c2 01 	call	0x384	; 0x384 <LCD_vidSendEnablePulse>
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Cmd<<4));
 3ca:	6c 2f       	mov	r22, r28
 3cc:	62 95       	swap	r22
 3ce:	60 7f       	andi	r22, 0xF0	; 240
 3d0:	83 e0       	ldi	r24, 0x03	; 3
 3d2:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
 3d6:	0e 94 c2 01 	call	0x384	; 0x384 <LCD_vidSendEnablePulse>
        #endif
    #endif
}
 3da:	cf 91       	pop	r28
 3dc:	08 95       	ret

000003de <LCD_vidInit>:
 3de:	2f ef       	ldi	r18, 0xFF	; 255
 3e0:	81 ee       	ldi	r24, 0xE1	; 225
 3e2:	94 e0       	ldi	r25, 0x04	; 4
 3e4:	21 50       	subi	r18, 0x01	; 1
 3e6:	80 40       	sbci	r24, 0x00	; 0
 3e8:	90 40       	sbci	r25, 0x00	; 0
 3ea:	e1 f7       	brne	.-8      	; 0x3e4 <LCD_vidInit+0x6>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <LCD_vidInit+0x10>
 3ee:	00 00       	nop
#include "util/delay.h"

void LCD_vidInit(void)
{
    _delay_ms(200);
    DIO_vidSetPinMode(LCD_RS_PORT, LCD_RS_PIN, OUTPUT);
 3f0:	41 e0       	ldi	r20, 0x01	; 1
 3f2:	60 e0       	ldi	r22, 0x00	; 0
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
    DIO_vidSetPinMode(LCD_RW_PORT, LCD_RW_PIN, OUTPUT);
 3fa:	41 e0       	ldi	r20, 0x01	; 1
 3fc:	61 e0       	ldi	r22, 0x01	; 1
 3fe:	83 e0       	ldi	r24, 0x03	; 3
 400:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
    DIO_vidSetPinMode(LCD_EN_PORT, LCD_EN_PIN, OUTPUT);
 404:	41 e0       	ldi	r20, 0x01	; 1
 406:	62 e0       	ldi	r22, 0x02	; 2
 408:	83 e0       	ldi	r24, 0x03	; 3
 40a:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
        _delay_ms(1);
    #else
        #if NIBBLE_MODE == LOW_NIBBLE
            DIO_vidSetLowNibbleMode(LCD_DATA_PORT, OUTPUT);
        #else
            DIO_vidSetHighNibbleMode(LCD_DATA_PORT, OUTPUT);
 40e:	61 e0       	ldi	r22, 0x01	; 1
 410:	83 e0       	ldi	r24, 0x03	; 3
 412:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_vidSetHighNibbleMode>
        #endif
        LCD_vidSendCmd(LCD_RETURN_HOME);
 416:	82 e0       	ldi	r24, 0x02	; 2
 418:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 41c:	8f e2       	ldi	r24, 0x2F	; 47
 41e:	95 e7       	ldi	r25, 0x75	; 117
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 426:	00 00       	nop
        _delay_ms(15);
        LCD_vidSendCmd(LCD_FUNCTION_4BIT_2LINES);
 428:	88 e2       	ldi	r24, 0x28	; 40
 42a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 42e:	8f ec       	ldi	r24, 0xCF	; 207
 430:	97 e0       	ldi	r25, 0x07	; 7
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 438:	00 00       	nop
        _delay_ms(1);
    #endif
    LCD_vidSendCmd(LCD_DISP_ON_CURSOR_ON);
 43a:	8e e0       	ldi	r24, 0x0E	; 14
 43c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 440:	8f ec       	ldi	r24, 0xCF	; 207
 442:	97 e0       	ldi	r25, 0x07	; 7
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 448:	00 c0       	rjmp	.+0      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 44a:	00 00       	nop
    _delay_ms(1);
    LCD_vidSendCmd(LCD_CLEAR_SCREEN);
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 452:	8f e1       	ldi	r24, 0x1F	; 31
 454:	9e e4       	ldi	r25, 0x4E	; 78
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45c:	00 00       	nop
    _delay_ms(10);
    LCD_vidSendCmd(LCD_ENTRY_MODE);
 45e:	86 e0       	ldi	r24, 0x06	; 6
 460:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 464:	08 95       	ret

00000466 <LCD_vidDisplayCharacter>:
    _delay_ms(2);
    DIO_vidWritePin(LCD_EN_PORT, LCD_EN_PIN, LOW);
}

void LCD_vidDisplayCharacter(u8 u8Char)
{
 466:	cf 93       	push	r28
 468:	c8 2f       	mov	r28, r24
    DIO_vidWritePin(LCD_RW_PORT, LCD_RW_PIN, LOW);
 46a:	40 e0       	ldi	r20, 0x00	; 0
 46c:	61 e0       	ldi	r22, 0x01	; 1
 46e:	83 e0       	ldi	r24, 0x03	; 3
 470:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
    DIO_vidWritePin(LCD_RS_PORT, LCD_RS_PIN, HIGH);
 474:	41 e0       	ldi	r20, 0x01	; 1
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	83 e0       	ldi	r24, 0x03	; 3
 47a:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Char>>4));
            LCD_vidSendEnablePulse();
            DIO_vidWriteLowNibble(LCD_DATA_PORT, (u8Char));
            LCD_vidSendEnablePulse();
        #else
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Char));
 47e:	6c 2f       	mov	r22, r28
 480:	83 e0       	ldi	r24, 0x03	; 3
 482:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
 486:	0e 94 c2 01 	call	0x384	; 0x384 <LCD_vidSendEnablePulse>
            DIO_vidWriteHighNibble(LCD_DATA_PORT, (u8Char<<4));
 48a:	6c 2f       	mov	r22, r28
 48c:	62 95       	swap	r22
 48e:	60 7f       	andi	r22, 0xF0	; 240
 490:	83 e0       	ldi	r24, 0x03	; 3
 492:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_vidWriteHighNibble>
            LCD_vidSendEnablePulse();
 496:	0e 94 c2 01 	call	0x384	; 0x384 <LCD_vidSendEnablePulse>
        #endif
    #endif
}   
 49a:	cf 91       	pop	r28
 49c:	08 95       	ret

0000049e <LCD_vidDisplayString>:

void LCD_vidDisplayString(u8 *u8PtrString)
{
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	ec 01       	movw	r28, r24
    while (*u8PtrString != '\0')
 4a4:	88 81       	ld	r24, Y
 4a6:	88 23       	and	r24, r24
 4a8:	31 f0       	breq	.+12     	; 0x4b6 <LCD_vidDisplayString+0x18>
 4aa:	21 96       	adiw	r28, 0x01	; 1
    {
        LCD_vidDisplayCharacter(*u8PtrString);
 4ac:	0e 94 33 02 	call	0x466	; 0x466 <LCD_vidDisplayCharacter>
    #endif
}   

void LCD_vidDisplayString(u8 *u8PtrString)
{
    while (*u8PtrString != '\0')
 4b0:	89 91       	ld	r24, Y+
 4b2:	81 11       	cpse	r24, r1
 4b4:	fb cf       	rjmp	.-10     	; 0x4ac <LCD_vidDisplayString+0xe>
    {
        LCD_vidDisplayCharacter(*u8PtrString);
        u8PtrString++;
    }    
}
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	08 95       	ret

000004bc <LCD_vidDisplayNumber>:

void LCD_vidDisplayNumber(u32 u32Number)
{
 4bc:	0f 93       	push	r16
 4be:	1f 93       	push	r17
 4c0:	cf 93       	push	r28
 4c2:	df 93       	push	r29
 4c4:	cd b7       	in	r28, 0x3d	; 61
 4c6:	de b7       	in	r29, 0x3e	; 62
 4c8:	27 97       	sbiw	r28, 0x07	; 7
 4ca:	0f b6       	in	r0, 0x3f	; 63
 4cc:	f8 94       	cli
 4ce:	de bf       	out	0x3e, r29	; 62
 4d0:	0f be       	out	0x3f, r0	; 63
 4d2:	cd bf       	out	0x3d, r28	; 61
    u8 u8arr[7];
    sprintf(u8arr, "%d", u32Number);
 4d4:	9f 93       	push	r25
 4d6:	8f 93       	push	r24
 4d8:	7f 93       	push	r23
 4da:	6f 93       	push	r22
 4dc:	80 e6       	ldi	r24, 0x60	; 96
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	9f 93       	push	r25
 4e2:	8f 93       	push	r24
 4e4:	8e 01       	movw	r16, r28
 4e6:	0f 5f       	subi	r16, 0xFF	; 255
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	1f 93       	push	r17
 4ec:	0f 93       	push	r16
 4ee:	0e 94 50 04 	call	0x8a0	; 0x8a0 <sprintf>
    LCD_vidDisplayString(u8arr);
 4f2:	c8 01       	movw	r24, r16
 4f4:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
}
 4f8:	0f b6       	in	r0, 0x3f	; 63
 4fa:	f8 94       	cli
 4fc:	de bf       	out	0x3e, r29	; 62
 4fe:	0f be       	out	0x3f, r0	; 63
 500:	cd bf       	out	0x3d, r28	; 61
 502:	27 96       	adiw	r28, 0x07	; 7
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	df 91       	pop	r29
 510:	cf 91       	pop	r28
 512:	1f 91       	pop	r17
 514:	0f 91       	pop	r16
 516:	08 95       	ret

00000518 <LCD_vidClearScreen>:

void LCD_vidClearScreen(void)
{
    LCD_vidSendCmd(LCD_CLEAR_SCREEN);
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 51e:	8f e1       	ldi	r24, 0x1F	; 31
 520:	9e e4       	ldi	r25, 0x4E	; 78
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <LCD_vidClearScreen+0xa>
 526:	00 c0       	rjmp	.+0      	; 0x528 <LCD_vidClearScreen+0x10>
 528:	00 00       	nop
 52a:	08 95       	ret

0000052c <LCD_vidMoveCursor>:
}

void LCD_vidMoveCursor(u8 u8Line, u8 u8Position)
{
    u8 u8PositionCmd;
    if (u8Line == 1)
 52c:	81 30       	cpi	r24, 0x01	; 1
 52e:	19 f4       	brne	.+6      	; 0x536 <LCD_vidMoveCursor+0xa>
    {
        u8PositionCmd = 0x80 + (u8Position - 1);
 530:	8f e7       	ldi	r24, 0x7F	; 127
 532:	86 0f       	add	r24, r22
 534:	0c c0       	rjmp	.+24     	; 0x54e <LCD_vidMoveCursor+0x22>
    }
    else if(u8Line == 2)
 536:	82 30       	cpi	r24, 0x02	; 2
 538:	19 f4       	brne	.+6      	; 0x540 <LCD_vidMoveCursor+0x14>
    {
        u8PositionCmd = 0xC0 + (u8Position - 1);
 53a:	8f eb       	ldi	r24, 0xBF	; 191
 53c:	86 0f       	add	r24, r22
 53e:	07 c0       	rjmp	.+14     	; 0x54e <LCD_vidMoveCursor+0x22>
    }
	else if (u8Line == 3)
 540:	83 30       	cpi	r24, 0x03	; 3
 542:	19 f4       	brne	.+6      	; 0x54a <LCD_vidMoveCursor+0x1e>
	{
        u8PositionCmd = 0x90 + (u8Position - 1);
 544:	8f e8       	ldi	r24, 0x8F	; 143
 546:	86 0f       	add	r24, r22
 548:	02 c0       	rjmp	.+4      	; 0x54e <LCD_vidMoveCursor+0x22>
	}
	else
	{
		u8PositionCmd = 0xD0 + (u8Position - 1);
 54a:	8f ec       	ldi	r24, 0xCF	; 207
 54c:	86 0f       	add	r24, r22
	}
    LCD_vidSendCmd(u8PositionCmd);
 54e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <LCD_vidSendCmd>
 552:	08 95       	ret

00000554 <LM35_vidInit>:
#include "LM35_config.h"


void LM35_vidInit(_enuADCChannels enuADCChannel)
{
    ADC_vidInit(enuADCChannel);
 554:	0e 94 49 00 	call	0x92	; 0x92 <ADC_vidInit>
 558:	08 95       	ret

0000055a <LM35_u8Read>:

u8 LM35_u8Read(void)
{
    u8 u8Temperature;
    u16 u16Value;
    u16Value = ADC_u16Read();
 55a:	0e 94 a8 00 	call	0x150	; 0x150 <ADC_u16Read>
    u8Temperature = (u8)((float)u16Value * 0.25);
    return u8Temperature;
 55e:	bc 01       	movw	r22, r24
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
 568:	20 e0       	ldi	r18, 0x00	; 0
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	40 e8       	ldi	r20, 0x80	; 128
 56e:	5e e3       	ldi	r21, 0x3E	; 62
 570:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__mulsf3>
 574:	0e 94 20 03 	call	0x640	; 0x640 <__fixunssfsi>
 578:	86 2f       	mov	r24, r22
}
 57a:	08 95       	ret

0000057c <main>:
#include "LM35_interface.h"

int main(void)
{
	u8 temp,pre=1;
	DIO_vidSetPinMode(GPIOB,PIN0,OUTPUT);
 57c:	41 e0       	ldi	r20, 0x01	; 1
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_vidSetPinMode>
	LCD_vidInit();
 586:	0e 94 ef 01 	call	0x3de	; 0x3de <LCD_vidInit>
	LM35_vidInit(ADC_CH0);
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	0e 94 aa 02 	call	0x554	; 0x554 <LM35_vidInit>
    LCD_vidDisplayString("1.Door Lock");
 590:	80 e7       	ldi	r24, 0x70	; 112
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
	LCD_vidMoveCursor(2,1);
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
    LCD_vidDisplayString("2.Air off");
 5a0:	8c e7       	ldi	r24, 0x7C	; 124
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
	LCD_vidMoveCursor(3,1);
 5a8:	61 e0       	ldi	r22, 0x01	; 1
 5aa:	83 e0       	ldi	r24, 0x03	; 3
 5ac:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
    LCD_vidDisplayString("3.buzzer off");
 5b0:	86 e8       	ldi	r24, 0x86	; 134
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
    LCD_vidMoveCursor(4,1);
 5b8:	61 e0       	ldi	r22, 0x01	; 1
 5ba:	84 e0       	ldi	r24, 0x04	; 4
 5bc:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
    LCD_vidDisplayString("4.Temp off");
 5c0:	83 e9       	ldi	r24, 0x93	; 147
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
	LCD_vidClearScreen();
 5c8:	0e 94 8c 02 	call	0x518	; 0x518 <LCD_vidClearScreen>
#include "LCD_interface.h"
#include "LM35_interface.h"

int main(void)
{
	u8 temp,pre=1;
 5cc:	d1 e0       	ldi	r29, 0x01	; 1
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <main+0x56>
    LCD_vidMoveCursor(4,1);
    LCD_vidDisplayString("4.Temp off");
	LCD_vidClearScreen();
	while (1) 
    {
	    temp = LM35_u8Read();
 5d0:	dc 2f       	mov	r29, r28
 5d2:	0e 94 ad 02 	call	0x55a	; 0x55a <LM35_u8Read>
 5d6:	c8 2f       	mov	r28, r24
		if(temp != pre)
 5d8:	8d 17       	cp	r24, r29
 5da:	d9 f3       	breq	.-10     	; 0x5d2 <main+0x56>
		{
			LCD_vidMoveCursor(1,1);
 5dc:	61 e0       	ldi	r22, 0x01	; 1
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
			LCD_vidDisplayString("Temperature =");
 5e4:	8e e9       	ldi	r24, 0x9E	; 158
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
		    LCD_vidDisplayNumber(temp);
 5ec:	6c 2f       	mov	r22, r28
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 5e 02 	call	0x4bc	; 0x4bc <LCD_vidDisplayNumber>
			LCD_vidDisplayString("C");
 5f8:	8c ea       	ldi	r24, 0xAC	; 172
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
			pre = temp;
			if(temp >= 25)
 600:	c9 31       	cpi	r28, 0x19	; 25
 602:	70 f0       	brcs	.+28     	; 0x620 <main+0xa4>
			{
				LCD_vidMoveCursor(2,1);
 604:	61 e0       	ldi	r22, 0x01	; 1
 606:	82 e0       	ldi	r24, 0x02	; 2
 608:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
				LCD_vidDisplayString("FAN ON ");
 60c:	8e ea       	ldi	r24, 0xAE	; 174
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
				DIO_vidWritePin(GPIOB,PIN0,HIGH);
 614:	41 e0       	ldi	r20, 0x01	; 1
 616:	60 e0       	ldi	r22, 0x00	; 0
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
 61e:	d8 cf       	rjmp	.-80     	; 0x5d0 <main+0x54>
			}
			else if(temp <= 21 )
 620:	c6 31       	cpi	r28, 0x16	; 22
 622:	b0 f6       	brcc	.-84     	; 0x5d0 <main+0x54>
			{
				LCD_vidMoveCursor(2,1);
 624:	61 e0       	ldi	r22, 0x01	; 1
 626:	82 e0       	ldi	r24, 0x02	; 2
 628:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_vidMoveCursor>
				LCD_vidDisplayString("FAN OFF ");
 62c:	86 eb       	ldi	r24, 0xB6	; 182
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 4f 02 	call	0x49e	; 0x49e <LCD_vidDisplayString>
				DIO_vidWritePin(GPIOB,PIN0,LOW);
 634:	40 e0       	ldi	r20, 0x00	; 0
 636:	60 e0       	ldi	r22, 0x00	; 0
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	0e 94 1e 01 	call	0x23c	; 0x23c <DIO_vidWritePin>
 63e:	c8 cf       	rjmp	.-112    	; 0x5d0 <main+0x54>

00000640 <__fixunssfsi>:
 640:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_splitA>
 644:	88 f0       	brcs	.+34     	; 0x668 <__fixunssfsi+0x28>
 646:	9f 57       	subi	r25, 0x7F	; 127
 648:	98 f0       	brcs	.+38     	; 0x670 <__fixunssfsi+0x30>
 64a:	b9 2f       	mov	r27, r25
 64c:	99 27       	eor	r25, r25
 64e:	b7 51       	subi	r27, 0x17	; 23
 650:	b0 f0       	brcs	.+44     	; 0x67e <__fixunssfsi+0x3e>
 652:	e1 f0       	breq	.+56     	; 0x68c <__fixunssfsi+0x4c>
 654:	66 0f       	add	r22, r22
 656:	77 1f       	adc	r23, r23
 658:	88 1f       	adc	r24, r24
 65a:	99 1f       	adc	r25, r25
 65c:	1a f0       	brmi	.+6      	; 0x664 <__fixunssfsi+0x24>
 65e:	ba 95       	dec	r27
 660:	c9 f7       	brne	.-14     	; 0x654 <__fixunssfsi+0x14>
 662:	14 c0       	rjmp	.+40     	; 0x68c <__fixunssfsi+0x4c>
 664:	b1 30       	cpi	r27, 0x01	; 1
 666:	91 f0       	breq	.+36     	; 0x68c <__fixunssfsi+0x4c>
 668:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fp_zero>
 66c:	b1 e0       	ldi	r27, 0x01	; 1
 66e:	08 95       	ret
 670:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_zero>
 674:	67 2f       	mov	r22, r23
 676:	78 2f       	mov	r23, r24
 678:	88 27       	eor	r24, r24
 67a:	b8 5f       	subi	r27, 0xF8	; 248
 67c:	39 f0       	breq	.+14     	; 0x68c <__fixunssfsi+0x4c>
 67e:	b9 3f       	cpi	r27, 0xF9	; 249
 680:	cc f3       	brlt	.-14     	; 0x674 <__fixunssfsi+0x34>
 682:	86 95       	lsr	r24
 684:	77 95       	ror	r23
 686:	67 95       	ror	r22
 688:	b3 95       	inc	r27
 68a:	d9 f7       	brne	.-10     	; 0x682 <__fixunssfsi+0x42>
 68c:	3e f4       	brtc	.+14     	; 0x69c <__fixunssfsi+0x5c>
 68e:	90 95       	com	r25
 690:	80 95       	com	r24
 692:	70 95       	com	r23
 694:	61 95       	neg	r22
 696:	7f 4f       	sbci	r23, 0xFF	; 255
 698:	8f 4f       	sbci	r24, 0xFF	; 255
 69a:	9f 4f       	sbci	r25, 0xFF	; 255
 69c:	08 95       	ret

0000069e <__floatunsisf>:
 69e:	e8 94       	clt
 6a0:	09 c0       	rjmp	.+18     	; 0x6b4 <__floatsisf+0x12>

000006a2 <__floatsisf>:
 6a2:	97 fb       	bst	r25, 7
 6a4:	3e f4       	brtc	.+14     	; 0x6b4 <__floatsisf+0x12>
 6a6:	90 95       	com	r25
 6a8:	80 95       	com	r24
 6aa:	70 95       	com	r23
 6ac:	61 95       	neg	r22
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	99 23       	and	r25, r25
 6b6:	a9 f0       	breq	.+42     	; 0x6e2 <__floatsisf+0x40>
 6b8:	f9 2f       	mov	r31, r25
 6ba:	96 e9       	ldi	r25, 0x96	; 150
 6bc:	bb 27       	eor	r27, r27
 6be:	93 95       	inc	r25
 6c0:	f6 95       	lsr	r31
 6c2:	87 95       	ror	r24
 6c4:	77 95       	ror	r23
 6c6:	67 95       	ror	r22
 6c8:	b7 95       	ror	r27
 6ca:	f1 11       	cpse	r31, r1
 6cc:	f8 cf       	rjmp	.-16     	; 0x6be <__floatsisf+0x1c>
 6ce:	fa f4       	brpl	.+62     	; 0x70e <__floatsisf+0x6c>
 6d0:	bb 0f       	add	r27, r27
 6d2:	11 f4       	brne	.+4      	; 0x6d8 <__floatsisf+0x36>
 6d4:	60 ff       	sbrs	r22, 0
 6d6:	1b c0       	rjmp	.+54     	; 0x70e <__floatsisf+0x6c>
 6d8:	6f 5f       	subi	r22, 0xFF	; 255
 6da:	7f 4f       	sbci	r23, 0xFF	; 255
 6dc:	8f 4f       	sbci	r24, 0xFF	; 255
 6de:	9f 4f       	sbci	r25, 0xFF	; 255
 6e0:	16 c0       	rjmp	.+44     	; 0x70e <__floatsisf+0x6c>
 6e2:	88 23       	and	r24, r24
 6e4:	11 f0       	breq	.+4      	; 0x6ea <__floatsisf+0x48>
 6e6:	96 e9       	ldi	r25, 0x96	; 150
 6e8:	11 c0       	rjmp	.+34     	; 0x70c <__floatsisf+0x6a>
 6ea:	77 23       	and	r23, r23
 6ec:	21 f0       	breq	.+8      	; 0x6f6 <__floatsisf+0x54>
 6ee:	9e e8       	ldi	r25, 0x8E	; 142
 6f0:	87 2f       	mov	r24, r23
 6f2:	76 2f       	mov	r23, r22
 6f4:	05 c0       	rjmp	.+10     	; 0x700 <__floatsisf+0x5e>
 6f6:	66 23       	and	r22, r22
 6f8:	71 f0       	breq	.+28     	; 0x716 <__floatsisf+0x74>
 6fa:	96 e8       	ldi	r25, 0x86	; 134
 6fc:	86 2f       	mov	r24, r22
 6fe:	70 e0       	ldi	r23, 0x00	; 0
 700:	60 e0       	ldi	r22, 0x00	; 0
 702:	2a f0       	brmi	.+10     	; 0x70e <__floatsisf+0x6c>
 704:	9a 95       	dec	r25
 706:	66 0f       	add	r22, r22
 708:	77 1f       	adc	r23, r23
 70a:	88 1f       	adc	r24, r24
 70c:	da f7       	brpl	.-10     	; 0x704 <__floatsisf+0x62>
 70e:	88 0f       	add	r24, r24
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <__fp_inf>:
 718:	97 f9       	bld	r25, 7
 71a:	9f 67       	ori	r25, 0x7F	; 127
 71c:	80 e8       	ldi	r24, 0x80	; 128
 71e:	70 e0       	ldi	r23, 0x00	; 0
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	08 95       	ret

00000724 <__fp_nan>:
 724:	9f ef       	ldi	r25, 0xFF	; 255
 726:	80 ec       	ldi	r24, 0xC0	; 192
 728:	08 95       	ret

0000072a <__fp_pscA>:
 72a:	00 24       	eor	r0, r0
 72c:	0a 94       	dec	r0
 72e:	16 16       	cp	r1, r22
 730:	17 06       	cpc	r1, r23
 732:	18 06       	cpc	r1, r24
 734:	09 06       	cpc	r0, r25
 736:	08 95       	ret

00000738 <__fp_pscB>:
 738:	00 24       	eor	r0, r0
 73a:	0a 94       	dec	r0
 73c:	12 16       	cp	r1, r18
 73e:	13 06       	cpc	r1, r19
 740:	14 06       	cpc	r1, r20
 742:	05 06       	cpc	r0, r21
 744:	08 95       	ret

00000746 <__fp_round>:
 746:	09 2e       	mov	r0, r25
 748:	03 94       	inc	r0
 74a:	00 0c       	add	r0, r0
 74c:	11 f4       	brne	.+4      	; 0x752 <__fp_round+0xc>
 74e:	88 23       	and	r24, r24
 750:	52 f0       	brmi	.+20     	; 0x766 <__fp_round+0x20>
 752:	bb 0f       	add	r27, r27
 754:	40 f4       	brcc	.+16     	; 0x766 <__fp_round+0x20>
 756:	bf 2b       	or	r27, r31
 758:	11 f4       	brne	.+4      	; 0x75e <__fp_round+0x18>
 75a:	60 ff       	sbrs	r22, 0
 75c:	04 c0       	rjmp	.+8      	; 0x766 <__fp_round+0x20>
 75e:	6f 5f       	subi	r22, 0xFF	; 255
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	8f 4f       	sbci	r24, 0xFF	; 255
 764:	9f 4f       	sbci	r25, 0xFF	; 255
 766:	08 95       	ret

00000768 <__fp_split3>:
 768:	57 fd       	sbrc	r21, 7
 76a:	90 58       	subi	r25, 0x80	; 128
 76c:	44 0f       	add	r20, r20
 76e:	55 1f       	adc	r21, r21
 770:	59 f0       	breq	.+22     	; 0x788 <__fp_splitA+0x10>
 772:	5f 3f       	cpi	r21, 0xFF	; 255
 774:	71 f0       	breq	.+28     	; 0x792 <__fp_splitA+0x1a>
 776:	47 95       	ror	r20

00000778 <__fp_splitA>:
 778:	88 0f       	add	r24, r24
 77a:	97 fb       	bst	r25, 7
 77c:	99 1f       	adc	r25, r25
 77e:	61 f0       	breq	.+24     	; 0x798 <__fp_splitA+0x20>
 780:	9f 3f       	cpi	r25, 0xFF	; 255
 782:	79 f0       	breq	.+30     	; 0x7a2 <__fp_splitA+0x2a>
 784:	87 95       	ror	r24
 786:	08 95       	ret
 788:	12 16       	cp	r1, r18
 78a:	13 06       	cpc	r1, r19
 78c:	14 06       	cpc	r1, r20
 78e:	55 1f       	adc	r21, r21
 790:	f2 cf       	rjmp	.-28     	; 0x776 <__fp_split3+0xe>
 792:	46 95       	lsr	r20
 794:	f1 df       	rcall	.-30     	; 0x778 <__fp_splitA>
 796:	08 c0       	rjmp	.+16     	; 0x7a8 <__fp_splitA+0x30>
 798:	16 16       	cp	r1, r22
 79a:	17 06       	cpc	r1, r23
 79c:	18 06       	cpc	r1, r24
 79e:	99 1f       	adc	r25, r25
 7a0:	f1 cf       	rjmp	.-30     	; 0x784 <__fp_splitA+0xc>
 7a2:	86 95       	lsr	r24
 7a4:	71 05       	cpc	r23, r1
 7a6:	61 05       	cpc	r22, r1
 7a8:	08 94       	sec
 7aa:	08 95       	ret

000007ac <__fp_zero>:
 7ac:	e8 94       	clt

000007ae <__fp_szero>:
 7ae:	bb 27       	eor	r27, r27
 7b0:	66 27       	eor	r22, r22
 7b2:	77 27       	eor	r23, r23
 7b4:	cb 01       	movw	r24, r22
 7b6:	97 f9       	bld	r25, 7
 7b8:	08 95       	ret

000007ba <__mulsf3>:
 7ba:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__mulsf3x>
 7be:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_round>
 7c2:	0e 94 95 03 	call	0x72a	; 0x72a <__fp_pscA>
 7c6:	38 f0       	brcs	.+14     	; 0x7d6 <__mulsf3+0x1c>
 7c8:	0e 94 9c 03 	call	0x738	; 0x738 <__fp_pscB>
 7cc:	20 f0       	brcs	.+8      	; 0x7d6 <__mulsf3+0x1c>
 7ce:	95 23       	and	r25, r21
 7d0:	11 f0       	breq	.+4      	; 0x7d6 <__mulsf3+0x1c>
 7d2:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_inf>
 7d6:	0c 94 92 03 	jmp	0x724	; 0x724 <__fp_nan>
 7da:	11 24       	eor	r1, r1
 7dc:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__fp_szero>

000007e0 <__mulsf3x>:
 7e0:	0e 94 b4 03 	call	0x768	; 0x768 <__fp_split3>
 7e4:	70 f3       	brcs	.-36     	; 0x7c2 <__mulsf3+0x8>

000007e6 <__mulsf3_pse>:
 7e6:	95 9f       	mul	r25, r21
 7e8:	c1 f3       	breq	.-16     	; 0x7da <__mulsf3+0x20>
 7ea:	95 0f       	add	r25, r21
 7ec:	50 e0       	ldi	r21, 0x00	; 0
 7ee:	55 1f       	adc	r21, r21
 7f0:	62 9f       	mul	r22, r18
 7f2:	f0 01       	movw	r30, r0
 7f4:	72 9f       	mul	r23, r18
 7f6:	bb 27       	eor	r27, r27
 7f8:	f0 0d       	add	r31, r0
 7fa:	b1 1d       	adc	r27, r1
 7fc:	63 9f       	mul	r22, r19
 7fe:	aa 27       	eor	r26, r26
 800:	f0 0d       	add	r31, r0
 802:	b1 1d       	adc	r27, r1
 804:	aa 1f       	adc	r26, r26
 806:	64 9f       	mul	r22, r20
 808:	66 27       	eor	r22, r22
 80a:	b0 0d       	add	r27, r0
 80c:	a1 1d       	adc	r26, r1
 80e:	66 1f       	adc	r22, r22
 810:	82 9f       	mul	r24, r18
 812:	22 27       	eor	r18, r18
 814:	b0 0d       	add	r27, r0
 816:	a1 1d       	adc	r26, r1
 818:	62 1f       	adc	r22, r18
 81a:	73 9f       	mul	r23, r19
 81c:	b0 0d       	add	r27, r0
 81e:	a1 1d       	adc	r26, r1
 820:	62 1f       	adc	r22, r18
 822:	83 9f       	mul	r24, r19
 824:	a0 0d       	add	r26, r0
 826:	61 1d       	adc	r22, r1
 828:	22 1f       	adc	r18, r18
 82a:	74 9f       	mul	r23, r20
 82c:	33 27       	eor	r19, r19
 82e:	a0 0d       	add	r26, r0
 830:	61 1d       	adc	r22, r1
 832:	23 1f       	adc	r18, r19
 834:	84 9f       	mul	r24, r20
 836:	60 0d       	add	r22, r0
 838:	21 1d       	adc	r18, r1
 83a:	82 2f       	mov	r24, r18
 83c:	76 2f       	mov	r23, r22
 83e:	6a 2f       	mov	r22, r26
 840:	11 24       	eor	r1, r1
 842:	9f 57       	subi	r25, 0x7F	; 127
 844:	50 40       	sbci	r21, 0x00	; 0
 846:	9a f0       	brmi	.+38     	; 0x86e <__stack+0xf>
 848:	f1 f0       	breq	.+60     	; 0x886 <__stack+0x27>
 84a:	88 23       	and	r24, r24
 84c:	4a f0       	brmi	.+18     	; 0x860 <__stack+0x1>
 84e:	ee 0f       	add	r30, r30
 850:	ff 1f       	adc	r31, r31
 852:	bb 1f       	adc	r27, r27
 854:	66 1f       	adc	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	91 50       	subi	r25, 0x01	; 1
 85c:	50 40       	sbci	r21, 0x00	; 0
 85e:	a9 f7       	brne	.-22     	; 0x84a <__mulsf3_pse+0x64>
 860:	9e 3f       	cpi	r25, 0xFE	; 254
 862:	51 05       	cpc	r21, r1
 864:	80 f0       	brcs	.+32     	; 0x886 <__stack+0x27>
 866:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_inf>
 86a:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__fp_szero>
 86e:	5f 3f       	cpi	r21, 0xFF	; 255
 870:	e4 f3       	brlt	.-8      	; 0x86a <__stack+0xb>
 872:	98 3e       	cpi	r25, 0xE8	; 232
 874:	d4 f3       	brlt	.-12     	; 0x86a <__stack+0xb>
 876:	86 95       	lsr	r24
 878:	77 95       	ror	r23
 87a:	67 95       	ror	r22
 87c:	b7 95       	ror	r27
 87e:	f7 95       	ror	r31
 880:	e7 95       	ror	r30
 882:	9f 5f       	subi	r25, 0xFF	; 255
 884:	c1 f7       	brne	.-16     	; 0x876 <__stack+0x17>
 886:	fe 2b       	or	r31, r30
 888:	88 0f       	add	r24, r24
 88a:	91 1d       	adc	r25, r1
 88c:	96 95       	lsr	r25
 88e:	87 95       	ror	r24
 890:	97 f9       	bld	r25, 7
 892:	08 95       	ret

00000894 <__tablejump2__>:
 894:	ee 0f       	add	r30, r30
 896:	ff 1f       	adc	r31, r31
 898:	05 90       	lpm	r0, Z+
 89a:	f4 91       	lpm	r31, Z
 89c:	e0 2d       	mov	r30, r0
 89e:	09 94       	ijmp

000008a0 <sprintf>:
 8a0:	ae e0       	ldi	r26, 0x0E	; 14
 8a2:	b0 e0       	ldi	r27, 0x00	; 0
 8a4:	e6 e5       	ldi	r30, 0x56	; 86
 8a6:	f4 e0       	ldi	r31, 0x04	; 4
 8a8:	0c 94 11 07 	jmp	0xe22	; 0xe22 <__prologue_saves__+0x1c>
 8ac:	0d 89       	ldd	r16, Y+21	; 0x15
 8ae:	1e 89       	ldd	r17, Y+22	; 0x16
 8b0:	86 e0       	ldi	r24, 0x06	; 6
 8b2:	8c 83       	std	Y+4, r24	; 0x04
 8b4:	1a 83       	std	Y+2, r17	; 0x02
 8b6:	09 83       	std	Y+1, r16	; 0x01
 8b8:	8f ef       	ldi	r24, 0xFF	; 255
 8ba:	9f e7       	ldi	r25, 0x7F	; 127
 8bc:	9e 83       	std	Y+6, r25	; 0x06
 8be:	8d 83       	std	Y+5, r24	; 0x05
 8c0:	ae 01       	movw	r20, r28
 8c2:	47 5e       	subi	r20, 0xE7	; 231
 8c4:	5f 4f       	sbci	r21, 0xFF	; 255
 8c6:	6f 89       	ldd	r22, Y+23	; 0x17
 8c8:	78 8d       	ldd	r23, Y+24	; 0x18
 8ca:	ce 01       	movw	r24, r28
 8cc:	01 96       	adiw	r24, 0x01	; 1
 8ce:	0e 94 72 04 	call	0x8e4	; 0x8e4 <vfprintf>
 8d2:	ef 81       	ldd	r30, Y+7	; 0x07
 8d4:	f8 85       	ldd	r31, Y+8	; 0x08
 8d6:	e0 0f       	add	r30, r16
 8d8:	f1 1f       	adc	r31, r17
 8da:	10 82       	st	Z, r1
 8dc:	2e 96       	adiw	r28, 0x0e	; 14
 8de:	e4 e0       	ldi	r30, 0x04	; 4
 8e0:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__epilogue_restores__+0x1c>

000008e4 <vfprintf>:
 8e4:	ab e0       	ldi	r26, 0x0B	; 11
 8e6:	b0 e0       	ldi	r27, 0x00	; 0
 8e8:	e8 e7       	ldi	r30, 0x78	; 120
 8ea:	f4 e0       	ldi	r31, 0x04	; 4
 8ec:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__prologue_saves__>
 8f0:	6c 01       	movw	r12, r24
 8f2:	7b 01       	movw	r14, r22
 8f4:	8a 01       	movw	r16, r20
 8f6:	fc 01       	movw	r30, r24
 8f8:	17 82       	std	Z+7, r1	; 0x07
 8fa:	16 82       	std	Z+6, r1	; 0x06
 8fc:	83 81       	ldd	r24, Z+3	; 0x03
 8fe:	81 ff       	sbrs	r24, 1
 900:	cc c1       	rjmp	.+920    	; 0xc9a <vfprintf+0x3b6>
 902:	ce 01       	movw	r24, r28
 904:	01 96       	adiw	r24, 0x01	; 1
 906:	3c 01       	movw	r6, r24
 908:	f6 01       	movw	r30, r12
 90a:	93 81       	ldd	r25, Z+3	; 0x03
 90c:	f7 01       	movw	r30, r14
 90e:	93 fd       	sbrc	r25, 3
 910:	85 91       	lpm	r24, Z+
 912:	93 ff       	sbrs	r25, 3
 914:	81 91       	ld	r24, Z+
 916:	7f 01       	movw	r14, r30
 918:	88 23       	and	r24, r24
 91a:	09 f4       	brne	.+2      	; 0x91e <vfprintf+0x3a>
 91c:	ba c1       	rjmp	.+884    	; 0xc92 <vfprintf+0x3ae>
 91e:	85 32       	cpi	r24, 0x25	; 37
 920:	39 f4       	brne	.+14     	; 0x930 <vfprintf+0x4c>
 922:	93 fd       	sbrc	r25, 3
 924:	85 91       	lpm	r24, Z+
 926:	93 ff       	sbrs	r25, 3
 928:	81 91       	ld	r24, Z+
 92a:	7f 01       	movw	r14, r30
 92c:	85 32       	cpi	r24, 0x25	; 37
 92e:	29 f4       	brne	.+10     	; 0x93a <vfprintf+0x56>
 930:	b6 01       	movw	r22, r12
 932:	90 e0       	ldi	r25, 0x00	; 0
 934:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 938:	e7 cf       	rjmp	.-50     	; 0x908 <vfprintf+0x24>
 93a:	91 2c       	mov	r9, r1
 93c:	21 2c       	mov	r2, r1
 93e:	31 2c       	mov	r3, r1
 940:	ff e1       	ldi	r31, 0x1F	; 31
 942:	f3 15       	cp	r31, r3
 944:	d8 f0       	brcs	.+54     	; 0x97c <vfprintf+0x98>
 946:	8b 32       	cpi	r24, 0x2B	; 43
 948:	79 f0       	breq	.+30     	; 0x968 <vfprintf+0x84>
 94a:	38 f4       	brcc	.+14     	; 0x95a <vfprintf+0x76>
 94c:	80 32       	cpi	r24, 0x20	; 32
 94e:	79 f0       	breq	.+30     	; 0x96e <vfprintf+0x8a>
 950:	83 32       	cpi	r24, 0x23	; 35
 952:	a1 f4       	brne	.+40     	; 0x97c <vfprintf+0x98>
 954:	23 2d       	mov	r18, r3
 956:	20 61       	ori	r18, 0x10	; 16
 958:	1d c0       	rjmp	.+58     	; 0x994 <vfprintf+0xb0>
 95a:	8d 32       	cpi	r24, 0x2D	; 45
 95c:	61 f0       	breq	.+24     	; 0x976 <vfprintf+0x92>
 95e:	80 33       	cpi	r24, 0x30	; 48
 960:	69 f4       	brne	.+26     	; 0x97c <vfprintf+0x98>
 962:	23 2d       	mov	r18, r3
 964:	21 60       	ori	r18, 0x01	; 1
 966:	16 c0       	rjmp	.+44     	; 0x994 <vfprintf+0xb0>
 968:	83 2d       	mov	r24, r3
 96a:	82 60       	ori	r24, 0x02	; 2
 96c:	38 2e       	mov	r3, r24
 96e:	e3 2d       	mov	r30, r3
 970:	e4 60       	ori	r30, 0x04	; 4
 972:	3e 2e       	mov	r3, r30
 974:	2a c0       	rjmp	.+84     	; 0x9ca <vfprintf+0xe6>
 976:	f3 2d       	mov	r31, r3
 978:	f8 60       	ori	r31, 0x08	; 8
 97a:	1d c0       	rjmp	.+58     	; 0x9b6 <vfprintf+0xd2>
 97c:	37 fc       	sbrc	r3, 7
 97e:	2d c0       	rjmp	.+90     	; 0x9da <vfprintf+0xf6>
 980:	20 ed       	ldi	r18, 0xD0	; 208
 982:	28 0f       	add	r18, r24
 984:	2a 30       	cpi	r18, 0x0A	; 10
 986:	40 f0       	brcs	.+16     	; 0x998 <vfprintf+0xb4>
 988:	8e 32       	cpi	r24, 0x2E	; 46
 98a:	b9 f4       	brne	.+46     	; 0x9ba <vfprintf+0xd6>
 98c:	36 fc       	sbrc	r3, 6
 98e:	81 c1       	rjmp	.+770    	; 0xc92 <vfprintf+0x3ae>
 990:	23 2d       	mov	r18, r3
 992:	20 64       	ori	r18, 0x40	; 64
 994:	32 2e       	mov	r3, r18
 996:	19 c0       	rjmp	.+50     	; 0x9ca <vfprintf+0xe6>
 998:	36 fe       	sbrs	r3, 6
 99a:	06 c0       	rjmp	.+12     	; 0x9a8 <vfprintf+0xc4>
 99c:	8a e0       	ldi	r24, 0x0A	; 10
 99e:	98 9e       	mul	r9, r24
 9a0:	20 0d       	add	r18, r0
 9a2:	11 24       	eor	r1, r1
 9a4:	92 2e       	mov	r9, r18
 9a6:	11 c0       	rjmp	.+34     	; 0x9ca <vfprintf+0xe6>
 9a8:	ea e0       	ldi	r30, 0x0A	; 10
 9aa:	2e 9e       	mul	r2, r30
 9ac:	20 0d       	add	r18, r0
 9ae:	11 24       	eor	r1, r1
 9b0:	22 2e       	mov	r2, r18
 9b2:	f3 2d       	mov	r31, r3
 9b4:	f0 62       	ori	r31, 0x20	; 32
 9b6:	3f 2e       	mov	r3, r31
 9b8:	08 c0       	rjmp	.+16     	; 0x9ca <vfprintf+0xe6>
 9ba:	8c 36       	cpi	r24, 0x6C	; 108
 9bc:	21 f4       	brne	.+8      	; 0x9c6 <vfprintf+0xe2>
 9be:	83 2d       	mov	r24, r3
 9c0:	80 68       	ori	r24, 0x80	; 128
 9c2:	38 2e       	mov	r3, r24
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <vfprintf+0xe6>
 9c6:	88 36       	cpi	r24, 0x68	; 104
 9c8:	41 f4       	brne	.+16     	; 0x9da <vfprintf+0xf6>
 9ca:	f7 01       	movw	r30, r14
 9cc:	93 fd       	sbrc	r25, 3
 9ce:	85 91       	lpm	r24, Z+
 9d0:	93 ff       	sbrs	r25, 3
 9d2:	81 91       	ld	r24, Z+
 9d4:	7f 01       	movw	r14, r30
 9d6:	81 11       	cpse	r24, r1
 9d8:	b3 cf       	rjmp	.-154    	; 0x940 <vfprintf+0x5c>
 9da:	98 2f       	mov	r25, r24
 9dc:	9f 7d       	andi	r25, 0xDF	; 223
 9de:	95 54       	subi	r25, 0x45	; 69
 9e0:	93 30       	cpi	r25, 0x03	; 3
 9e2:	28 f4       	brcc	.+10     	; 0x9ee <vfprintf+0x10a>
 9e4:	0c 5f       	subi	r16, 0xFC	; 252
 9e6:	1f 4f       	sbci	r17, 0xFF	; 255
 9e8:	9f e3       	ldi	r25, 0x3F	; 63
 9ea:	99 83       	std	Y+1, r25	; 0x01
 9ec:	0d c0       	rjmp	.+26     	; 0xa08 <vfprintf+0x124>
 9ee:	83 36       	cpi	r24, 0x63	; 99
 9f0:	31 f0       	breq	.+12     	; 0x9fe <vfprintf+0x11a>
 9f2:	83 37       	cpi	r24, 0x73	; 115
 9f4:	71 f0       	breq	.+28     	; 0xa12 <vfprintf+0x12e>
 9f6:	83 35       	cpi	r24, 0x53	; 83
 9f8:	09 f0       	breq	.+2      	; 0x9fc <vfprintf+0x118>
 9fa:	59 c0       	rjmp	.+178    	; 0xaae <vfprintf+0x1ca>
 9fc:	21 c0       	rjmp	.+66     	; 0xa40 <vfprintf+0x15c>
 9fe:	f8 01       	movw	r30, r16
 a00:	80 81       	ld	r24, Z
 a02:	89 83       	std	Y+1, r24	; 0x01
 a04:	0e 5f       	subi	r16, 0xFE	; 254
 a06:	1f 4f       	sbci	r17, 0xFF	; 255
 a08:	88 24       	eor	r8, r8
 a0a:	83 94       	inc	r8
 a0c:	91 2c       	mov	r9, r1
 a0e:	53 01       	movw	r10, r6
 a10:	13 c0       	rjmp	.+38     	; 0xa38 <vfprintf+0x154>
 a12:	28 01       	movw	r4, r16
 a14:	f2 e0       	ldi	r31, 0x02	; 2
 a16:	4f 0e       	add	r4, r31
 a18:	51 1c       	adc	r5, r1
 a1a:	f8 01       	movw	r30, r16
 a1c:	a0 80       	ld	r10, Z
 a1e:	b1 80       	ldd	r11, Z+1	; 0x01
 a20:	36 fe       	sbrs	r3, 6
 a22:	03 c0       	rjmp	.+6      	; 0xa2a <vfprintf+0x146>
 a24:	69 2d       	mov	r22, r9
 a26:	70 e0       	ldi	r23, 0x00	; 0
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <vfprintf+0x14a>
 a2a:	6f ef       	ldi	r22, 0xFF	; 255
 a2c:	7f ef       	ldi	r23, 0xFF	; 255
 a2e:	c5 01       	movw	r24, r10
 a30:	0e 94 5e 06 	call	0xcbc	; 0xcbc <strnlen>
 a34:	4c 01       	movw	r8, r24
 a36:	82 01       	movw	r16, r4
 a38:	f3 2d       	mov	r31, r3
 a3a:	ff 77       	andi	r31, 0x7F	; 127
 a3c:	3f 2e       	mov	r3, r31
 a3e:	16 c0       	rjmp	.+44     	; 0xa6c <vfprintf+0x188>
 a40:	28 01       	movw	r4, r16
 a42:	22 e0       	ldi	r18, 0x02	; 2
 a44:	42 0e       	add	r4, r18
 a46:	51 1c       	adc	r5, r1
 a48:	f8 01       	movw	r30, r16
 a4a:	a0 80       	ld	r10, Z
 a4c:	b1 80       	ldd	r11, Z+1	; 0x01
 a4e:	36 fe       	sbrs	r3, 6
 a50:	03 c0       	rjmp	.+6      	; 0xa58 <vfprintf+0x174>
 a52:	69 2d       	mov	r22, r9
 a54:	70 e0       	ldi	r23, 0x00	; 0
 a56:	02 c0       	rjmp	.+4      	; 0xa5c <vfprintf+0x178>
 a58:	6f ef       	ldi	r22, 0xFF	; 255
 a5a:	7f ef       	ldi	r23, 0xFF	; 255
 a5c:	c5 01       	movw	r24, r10
 a5e:	0e 94 53 06 	call	0xca6	; 0xca6 <strnlen_P>
 a62:	4c 01       	movw	r8, r24
 a64:	f3 2d       	mov	r31, r3
 a66:	f0 68       	ori	r31, 0x80	; 128
 a68:	3f 2e       	mov	r3, r31
 a6a:	82 01       	movw	r16, r4
 a6c:	33 fc       	sbrc	r3, 3
 a6e:	1b c0       	rjmp	.+54     	; 0xaa6 <vfprintf+0x1c2>
 a70:	82 2d       	mov	r24, r2
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	88 16       	cp	r8, r24
 a76:	99 06       	cpc	r9, r25
 a78:	b0 f4       	brcc	.+44     	; 0xaa6 <vfprintf+0x1c2>
 a7a:	b6 01       	movw	r22, r12
 a7c:	80 e2       	ldi	r24, 0x20	; 32
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 a84:	2a 94       	dec	r2
 a86:	f4 cf       	rjmp	.-24     	; 0xa70 <vfprintf+0x18c>
 a88:	f5 01       	movw	r30, r10
 a8a:	37 fc       	sbrc	r3, 7
 a8c:	85 91       	lpm	r24, Z+
 a8e:	37 fe       	sbrs	r3, 7
 a90:	81 91       	ld	r24, Z+
 a92:	5f 01       	movw	r10, r30
 a94:	b6 01       	movw	r22, r12
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 a9c:	21 10       	cpse	r2, r1
 a9e:	2a 94       	dec	r2
 aa0:	21 e0       	ldi	r18, 0x01	; 1
 aa2:	82 1a       	sub	r8, r18
 aa4:	91 08       	sbc	r9, r1
 aa6:	81 14       	cp	r8, r1
 aa8:	91 04       	cpc	r9, r1
 aaa:	71 f7       	brne	.-36     	; 0xa88 <vfprintf+0x1a4>
 aac:	e8 c0       	rjmp	.+464    	; 0xc7e <vfprintf+0x39a>
 aae:	84 36       	cpi	r24, 0x64	; 100
 ab0:	11 f0       	breq	.+4      	; 0xab6 <vfprintf+0x1d2>
 ab2:	89 36       	cpi	r24, 0x69	; 105
 ab4:	41 f5       	brne	.+80     	; 0xb06 <vfprintf+0x222>
 ab6:	f8 01       	movw	r30, r16
 ab8:	37 fe       	sbrs	r3, 7
 aba:	07 c0       	rjmp	.+14     	; 0xaca <vfprintf+0x1e6>
 abc:	60 81       	ld	r22, Z
 abe:	71 81       	ldd	r23, Z+1	; 0x01
 ac0:	82 81       	ldd	r24, Z+2	; 0x02
 ac2:	93 81       	ldd	r25, Z+3	; 0x03
 ac4:	0c 5f       	subi	r16, 0xFC	; 252
 ac6:	1f 4f       	sbci	r17, 0xFF	; 255
 ac8:	08 c0       	rjmp	.+16     	; 0xada <vfprintf+0x1f6>
 aca:	60 81       	ld	r22, Z
 acc:	71 81       	ldd	r23, Z+1	; 0x01
 ace:	07 2e       	mov	r0, r23
 ad0:	00 0c       	add	r0, r0
 ad2:	88 0b       	sbc	r24, r24
 ad4:	99 0b       	sbc	r25, r25
 ad6:	0e 5f       	subi	r16, 0xFE	; 254
 ad8:	1f 4f       	sbci	r17, 0xFF	; 255
 ada:	f3 2d       	mov	r31, r3
 adc:	ff 76       	andi	r31, 0x6F	; 111
 ade:	3f 2e       	mov	r3, r31
 ae0:	97 ff       	sbrs	r25, 7
 ae2:	09 c0       	rjmp	.+18     	; 0xaf6 <vfprintf+0x212>
 ae4:	90 95       	com	r25
 ae6:	80 95       	com	r24
 ae8:	70 95       	com	r23
 aea:	61 95       	neg	r22
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	f0 68       	ori	r31, 0x80	; 128
 af4:	3f 2e       	mov	r3, r31
 af6:	2a e0       	ldi	r18, 0x0A	; 10
 af8:	30 e0       	ldi	r19, 0x00	; 0
 afa:	a3 01       	movw	r20, r6
 afc:	0e 94 a5 06 	call	0xd4a	; 0xd4a <__ultoa_invert>
 b00:	88 2e       	mov	r8, r24
 b02:	86 18       	sub	r8, r6
 b04:	45 c0       	rjmp	.+138    	; 0xb90 <vfprintf+0x2ac>
 b06:	85 37       	cpi	r24, 0x75	; 117
 b08:	31 f4       	brne	.+12     	; 0xb16 <vfprintf+0x232>
 b0a:	23 2d       	mov	r18, r3
 b0c:	2f 7e       	andi	r18, 0xEF	; 239
 b0e:	b2 2e       	mov	r11, r18
 b10:	2a e0       	ldi	r18, 0x0A	; 10
 b12:	30 e0       	ldi	r19, 0x00	; 0
 b14:	25 c0       	rjmp	.+74     	; 0xb60 <vfprintf+0x27c>
 b16:	93 2d       	mov	r25, r3
 b18:	99 7f       	andi	r25, 0xF9	; 249
 b1a:	b9 2e       	mov	r11, r25
 b1c:	8f 36       	cpi	r24, 0x6F	; 111
 b1e:	c1 f0       	breq	.+48     	; 0xb50 <vfprintf+0x26c>
 b20:	18 f4       	brcc	.+6      	; 0xb28 <vfprintf+0x244>
 b22:	88 35       	cpi	r24, 0x58	; 88
 b24:	79 f0       	breq	.+30     	; 0xb44 <vfprintf+0x260>
 b26:	b5 c0       	rjmp	.+362    	; 0xc92 <vfprintf+0x3ae>
 b28:	80 37       	cpi	r24, 0x70	; 112
 b2a:	19 f0       	breq	.+6      	; 0xb32 <vfprintf+0x24e>
 b2c:	88 37       	cpi	r24, 0x78	; 120
 b2e:	21 f0       	breq	.+8      	; 0xb38 <vfprintf+0x254>
 b30:	b0 c0       	rjmp	.+352    	; 0xc92 <vfprintf+0x3ae>
 b32:	e9 2f       	mov	r30, r25
 b34:	e0 61       	ori	r30, 0x10	; 16
 b36:	be 2e       	mov	r11, r30
 b38:	b4 fe       	sbrs	r11, 4
 b3a:	0d c0       	rjmp	.+26     	; 0xb56 <vfprintf+0x272>
 b3c:	fb 2d       	mov	r31, r11
 b3e:	f4 60       	ori	r31, 0x04	; 4
 b40:	bf 2e       	mov	r11, r31
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <vfprintf+0x272>
 b44:	34 fe       	sbrs	r3, 4
 b46:	0a c0       	rjmp	.+20     	; 0xb5c <vfprintf+0x278>
 b48:	29 2f       	mov	r18, r25
 b4a:	26 60       	ori	r18, 0x06	; 6
 b4c:	b2 2e       	mov	r11, r18
 b4e:	06 c0       	rjmp	.+12     	; 0xb5c <vfprintf+0x278>
 b50:	28 e0       	ldi	r18, 0x08	; 8
 b52:	30 e0       	ldi	r19, 0x00	; 0
 b54:	05 c0       	rjmp	.+10     	; 0xb60 <vfprintf+0x27c>
 b56:	20 e1       	ldi	r18, 0x10	; 16
 b58:	30 e0       	ldi	r19, 0x00	; 0
 b5a:	02 c0       	rjmp	.+4      	; 0xb60 <vfprintf+0x27c>
 b5c:	20 e1       	ldi	r18, 0x10	; 16
 b5e:	32 e0       	ldi	r19, 0x02	; 2
 b60:	f8 01       	movw	r30, r16
 b62:	b7 fe       	sbrs	r11, 7
 b64:	07 c0       	rjmp	.+14     	; 0xb74 <vfprintf+0x290>
 b66:	60 81       	ld	r22, Z
 b68:	71 81       	ldd	r23, Z+1	; 0x01
 b6a:	82 81       	ldd	r24, Z+2	; 0x02
 b6c:	93 81       	ldd	r25, Z+3	; 0x03
 b6e:	0c 5f       	subi	r16, 0xFC	; 252
 b70:	1f 4f       	sbci	r17, 0xFF	; 255
 b72:	06 c0       	rjmp	.+12     	; 0xb80 <vfprintf+0x29c>
 b74:	60 81       	ld	r22, Z
 b76:	71 81       	ldd	r23, Z+1	; 0x01
 b78:	80 e0       	ldi	r24, 0x00	; 0
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 5f       	subi	r16, 0xFE	; 254
 b7e:	1f 4f       	sbci	r17, 0xFF	; 255
 b80:	a3 01       	movw	r20, r6
 b82:	0e 94 a5 06 	call	0xd4a	; 0xd4a <__ultoa_invert>
 b86:	88 2e       	mov	r8, r24
 b88:	86 18       	sub	r8, r6
 b8a:	fb 2d       	mov	r31, r11
 b8c:	ff 77       	andi	r31, 0x7F	; 127
 b8e:	3f 2e       	mov	r3, r31
 b90:	36 fe       	sbrs	r3, 6
 b92:	0d c0       	rjmp	.+26     	; 0xbae <vfprintf+0x2ca>
 b94:	23 2d       	mov	r18, r3
 b96:	2e 7f       	andi	r18, 0xFE	; 254
 b98:	a2 2e       	mov	r10, r18
 b9a:	89 14       	cp	r8, r9
 b9c:	58 f4       	brcc	.+22     	; 0xbb4 <vfprintf+0x2d0>
 b9e:	34 fe       	sbrs	r3, 4
 ba0:	0b c0       	rjmp	.+22     	; 0xbb8 <vfprintf+0x2d4>
 ba2:	32 fc       	sbrc	r3, 2
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <vfprintf+0x2d4>
 ba6:	83 2d       	mov	r24, r3
 ba8:	8e 7e       	andi	r24, 0xEE	; 238
 baa:	a8 2e       	mov	r10, r24
 bac:	05 c0       	rjmp	.+10     	; 0xbb8 <vfprintf+0x2d4>
 bae:	b8 2c       	mov	r11, r8
 bb0:	a3 2c       	mov	r10, r3
 bb2:	03 c0       	rjmp	.+6      	; 0xbba <vfprintf+0x2d6>
 bb4:	b8 2c       	mov	r11, r8
 bb6:	01 c0       	rjmp	.+2      	; 0xbba <vfprintf+0x2d6>
 bb8:	b9 2c       	mov	r11, r9
 bba:	a4 fe       	sbrs	r10, 4
 bbc:	0f c0       	rjmp	.+30     	; 0xbdc <vfprintf+0x2f8>
 bbe:	fe 01       	movw	r30, r28
 bc0:	e8 0d       	add	r30, r8
 bc2:	f1 1d       	adc	r31, r1
 bc4:	80 81       	ld	r24, Z
 bc6:	80 33       	cpi	r24, 0x30	; 48
 bc8:	21 f4       	brne	.+8      	; 0xbd2 <vfprintf+0x2ee>
 bca:	9a 2d       	mov	r25, r10
 bcc:	99 7e       	andi	r25, 0xE9	; 233
 bce:	a9 2e       	mov	r10, r25
 bd0:	09 c0       	rjmp	.+18     	; 0xbe4 <vfprintf+0x300>
 bd2:	a2 fe       	sbrs	r10, 2
 bd4:	06 c0       	rjmp	.+12     	; 0xbe2 <vfprintf+0x2fe>
 bd6:	b3 94       	inc	r11
 bd8:	b3 94       	inc	r11
 bda:	04 c0       	rjmp	.+8      	; 0xbe4 <vfprintf+0x300>
 bdc:	8a 2d       	mov	r24, r10
 bde:	86 78       	andi	r24, 0x86	; 134
 be0:	09 f0       	breq	.+2      	; 0xbe4 <vfprintf+0x300>
 be2:	b3 94       	inc	r11
 be4:	a3 fc       	sbrc	r10, 3
 be6:	11 c0       	rjmp	.+34     	; 0xc0a <vfprintf+0x326>
 be8:	a0 fe       	sbrs	r10, 0
 bea:	06 c0       	rjmp	.+12     	; 0xbf8 <vfprintf+0x314>
 bec:	b2 14       	cp	r11, r2
 bee:	88 f4       	brcc	.+34     	; 0xc12 <vfprintf+0x32e>
 bf0:	28 0c       	add	r2, r8
 bf2:	92 2c       	mov	r9, r2
 bf4:	9b 18       	sub	r9, r11
 bf6:	0e c0       	rjmp	.+28     	; 0xc14 <vfprintf+0x330>
 bf8:	b2 14       	cp	r11, r2
 bfa:	60 f4       	brcc	.+24     	; 0xc14 <vfprintf+0x330>
 bfc:	b6 01       	movw	r22, r12
 bfe:	80 e2       	ldi	r24, 0x20	; 32
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c06:	b3 94       	inc	r11
 c08:	f7 cf       	rjmp	.-18     	; 0xbf8 <vfprintf+0x314>
 c0a:	b2 14       	cp	r11, r2
 c0c:	18 f4       	brcc	.+6      	; 0xc14 <vfprintf+0x330>
 c0e:	2b 18       	sub	r2, r11
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0x332>
 c12:	98 2c       	mov	r9, r8
 c14:	21 2c       	mov	r2, r1
 c16:	a4 fe       	sbrs	r10, 4
 c18:	10 c0       	rjmp	.+32     	; 0xc3a <vfprintf+0x356>
 c1a:	b6 01       	movw	r22, r12
 c1c:	80 e3       	ldi	r24, 0x30	; 48
 c1e:	90 e0       	ldi	r25, 0x00	; 0
 c20:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c24:	a2 fe       	sbrs	r10, 2
 c26:	17 c0       	rjmp	.+46     	; 0xc56 <vfprintf+0x372>
 c28:	a1 fc       	sbrc	r10, 1
 c2a:	03 c0       	rjmp	.+6      	; 0xc32 <vfprintf+0x34e>
 c2c:	88 e7       	ldi	r24, 0x78	; 120
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	02 c0       	rjmp	.+4      	; 0xc36 <vfprintf+0x352>
 c32:	88 e5       	ldi	r24, 0x58	; 88
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	b6 01       	movw	r22, r12
 c38:	0c c0       	rjmp	.+24     	; 0xc52 <vfprintf+0x36e>
 c3a:	8a 2d       	mov	r24, r10
 c3c:	86 78       	andi	r24, 0x86	; 134
 c3e:	59 f0       	breq	.+22     	; 0xc56 <vfprintf+0x372>
 c40:	a1 fe       	sbrs	r10, 1
 c42:	02 c0       	rjmp	.+4      	; 0xc48 <vfprintf+0x364>
 c44:	8b e2       	ldi	r24, 0x2B	; 43
 c46:	01 c0       	rjmp	.+2      	; 0xc4a <vfprintf+0x366>
 c48:	80 e2       	ldi	r24, 0x20	; 32
 c4a:	a7 fc       	sbrc	r10, 7
 c4c:	8d e2       	ldi	r24, 0x2D	; 45
 c4e:	b6 01       	movw	r22, r12
 c50:	90 e0       	ldi	r25, 0x00	; 0
 c52:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c56:	89 14       	cp	r8, r9
 c58:	38 f4       	brcc	.+14     	; 0xc68 <vfprintf+0x384>
 c5a:	b6 01       	movw	r22, r12
 c5c:	80 e3       	ldi	r24, 0x30	; 48
 c5e:	90 e0       	ldi	r25, 0x00	; 0
 c60:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c64:	9a 94       	dec	r9
 c66:	f7 cf       	rjmp	.-18     	; 0xc56 <vfprintf+0x372>
 c68:	8a 94       	dec	r8
 c6a:	f3 01       	movw	r30, r6
 c6c:	e8 0d       	add	r30, r8
 c6e:	f1 1d       	adc	r31, r1
 c70:	80 81       	ld	r24, Z
 c72:	b6 01       	movw	r22, r12
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c7a:	81 10       	cpse	r8, r1
 c7c:	f5 cf       	rjmp	.-22     	; 0xc68 <vfprintf+0x384>
 c7e:	22 20       	and	r2, r2
 c80:	09 f4       	brne	.+2      	; 0xc84 <vfprintf+0x3a0>
 c82:	42 ce       	rjmp	.-892    	; 0x908 <vfprintf+0x24>
 c84:	b6 01       	movw	r22, r12
 c86:	80 e2       	ldi	r24, 0x20	; 32
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	0e 94 69 06 	call	0xcd2	; 0xcd2 <fputc>
 c8e:	2a 94       	dec	r2
 c90:	f6 cf       	rjmp	.-20     	; 0xc7e <vfprintf+0x39a>
 c92:	f6 01       	movw	r30, r12
 c94:	86 81       	ldd	r24, Z+6	; 0x06
 c96:	97 81       	ldd	r25, Z+7	; 0x07
 c98:	02 c0       	rjmp	.+4      	; 0xc9e <vfprintf+0x3ba>
 c9a:	8f ef       	ldi	r24, 0xFF	; 255
 c9c:	9f ef       	ldi	r25, 0xFF	; 255
 c9e:	2b 96       	adiw	r28, 0x0b	; 11
 ca0:	e2 e1       	ldi	r30, 0x12	; 18
 ca2:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__epilogue_restores__>

00000ca6 <strnlen_P>:
 ca6:	fc 01       	movw	r30, r24
 ca8:	05 90       	lpm	r0, Z+
 caa:	61 50       	subi	r22, 0x01	; 1
 cac:	70 40       	sbci	r23, 0x00	; 0
 cae:	01 10       	cpse	r0, r1
 cb0:	d8 f7       	brcc	.-10     	; 0xca8 <strnlen_P+0x2>
 cb2:	80 95       	com	r24
 cb4:	90 95       	com	r25
 cb6:	8e 0f       	add	r24, r30
 cb8:	9f 1f       	adc	r25, r31
 cba:	08 95       	ret

00000cbc <strnlen>:
 cbc:	fc 01       	movw	r30, r24
 cbe:	61 50       	subi	r22, 0x01	; 1
 cc0:	70 40       	sbci	r23, 0x00	; 0
 cc2:	01 90       	ld	r0, Z+
 cc4:	01 10       	cpse	r0, r1
 cc6:	d8 f7       	brcc	.-10     	; 0xcbe <strnlen+0x2>
 cc8:	80 95       	com	r24
 cca:	90 95       	com	r25
 ccc:	8e 0f       	add	r24, r30
 cce:	9f 1f       	adc	r25, r31
 cd0:	08 95       	ret

00000cd2 <fputc>:
 cd2:	0f 93       	push	r16
 cd4:	1f 93       	push	r17
 cd6:	cf 93       	push	r28
 cd8:	df 93       	push	r29
 cda:	fb 01       	movw	r30, r22
 cdc:	23 81       	ldd	r18, Z+3	; 0x03
 cde:	21 fd       	sbrc	r18, 1
 ce0:	03 c0       	rjmp	.+6      	; 0xce8 <fputc+0x16>
 ce2:	8f ef       	ldi	r24, 0xFF	; 255
 ce4:	9f ef       	ldi	r25, 0xFF	; 255
 ce6:	2c c0       	rjmp	.+88     	; 0xd40 <fputc+0x6e>
 ce8:	22 ff       	sbrs	r18, 2
 cea:	16 c0       	rjmp	.+44     	; 0xd18 <fputc+0x46>
 cec:	46 81       	ldd	r20, Z+6	; 0x06
 cee:	57 81       	ldd	r21, Z+7	; 0x07
 cf0:	24 81       	ldd	r18, Z+4	; 0x04
 cf2:	35 81       	ldd	r19, Z+5	; 0x05
 cf4:	42 17       	cp	r20, r18
 cf6:	53 07       	cpc	r21, r19
 cf8:	44 f4       	brge	.+16     	; 0xd0a <fputc+0x38>
 cfa:	a0 81       	ld	r26, Z
 cfc:	b1 81       	ldd	r27, Z+1	; 0x01
 cfe:	9d 01       	movw	r18, r26
 d00:	2f 5f       	subi	r18, 0xFF	; 255
 d02:	3f 4f       	sbci	r19, 0xFF	; 255
 d04:	31 83       	std	Z+1, r19	; 0x01
 d06:	20 83       	st	Z, r18
 d08:	8c 93       	st	X, r24
 d0a:	26 81       	ldd	r18, Z+6	; 0x06
 d0c:	37 81       	ldd	r19, Z+7	; 0x07
 d0e:	2f 5f       	subi	r18, 0xFF	; 255
 d10:	3f 4f       	sbci	r19, 0xFF	; 255
 d12:	37 83       	std	Z+7, r19	; 0x07
 d14:	26 83       	std	Z+6, r18	; 0x06
 d16:	14 c0       	rjmp	.+40     	; 0xd40 <fputc+0x6e>
 d18:	8b 01       	movw	r16, r22
 d1a:	ec 01       	movw	r28, r24
 d1c:	fb 01       	movw	r30, r22
 d1e:	00 84       	ldd	r0, Z+8	; 0x08
 d20:	f1 85       	ldd	r31, Z+9	; 0x09
 d22:	e0 2d       	mov	r30, r0
 d24:	09 95       	icall
 d26:	89 2b       	or	r24, r25
 d28:	e1 f6       	brne	.-72     	; 0xce2 <fputc+0x10>
 d2a:	d8 01       	movw	r26, r16
 d2c:	16 96       	adiw	r26, 0x06	; 6
 d2e:	8d 91       	ld	r24, X+
 d30:	9c 91       	ld	r25, X
 d32:	17 97       	sbiw	r26, 0x07	; 7
 d34:	01 96       	adiw	r24, 0x01	; 1
 d36:	17 96       	adiw	r26, 0x07	; 7
 d38:	9c 93       	st	X, r25
 d3a:	8e 93       	st	-X, r24
 d3c:	16 97       	sbiw	r26, 0x06	; 6
 d3e:	ce 01       	movw	r24, r28
 d40:	df 91       	pop	r29
 d42:	cf 91       	pop	r28
 d44:	1f 91       	pop	r17
 d46:	0f 91       	pop	r16
 d48:	08 95       	ret

00000d4a <__ultoa_invert>:
 d4a:	fa 01       	movw	r30, r20
 d4c:	aa 27       	eor	r26, r26
 d4e:	28 30       	cpi	r18, 0x08	; 8
 d50:	51 f1       	breq	.+84     	; 0xda6 <__ultoa_invert+0x5c>
 d52:	20 31       	cpi	r18, 0x10	; 16
 d54:	81 f1       	breq	.+96     	; 0xdb6 <__ultoa_invert+0x6c>
 d56:	e8 94       	clt
 d58:	6f 93       	push	r22
 d5a:	6e 7f       	andi	r22, 0xFE	; 254
 d5c:	6e 5f       	subi	r22, 0xFE	; 254
 d5e:	7f 4f       	sbci	r23, 0xFF	; 255
 d60:	8f 4f       	sbci	r24, 0xFF	; 255
 d62:	9f 4f       	sbci	r25, 0xFF	; 255
 d64:	af 4f       	sbci	r26, 0xFF	; 255
 d66:	b1 e0       	ldi	r27, 0x01	; 1
 d68:	3e d0       	rcall	.+124    	; 0xde6 <__ultoa_invert+0x9c>
 d6a:	b4 e0       	ldi	r27, 0x04	; 4
 d6c:	3c d0       	rcall	.+120    	; 0xde6 <__ultoa_invert+0x9c>
 d6e:	67 0f       	add	r22, r23
 d70:	78 1f       	adc	r23, r24
 d72:	89 1f       	adc	r24, r25
 d74:	9a 1f       	adc	r25, r26
 d76:	a1 1d       	adc	r26, r1
 d78:	68 0f       	add	r22, r24
 d7a:	79 1f       	adc	r23, r25
 d7c:	8a 1f       	adc	r24, r26
 d7e:	91 1d       	adc	r25, r1
 d80:	a1 1d       	adc	r26, r1
 d82:	6a 0f       	add	r22, r26
 d84:	71 1d       	adc	r23, r1
 d86:	81 1d       	adc	r24, r1
 d88:	91 1d       	adc	r25, r1
 d8a:	a1 1d       	adc	r26, r1
 d8c:	20 d0       	rcall	.+64     	; 0xdce <__ultoa_invert+0x84>
 d8e:	09 f4       	brne	.+2      	; 0xd92 <__ultoa_invert+0x48>
 d90:	68 94       	set
 d92:	3f 91       	pop	r19
 d94:	2a e0       	ldi	r18, 0x0A	; 10
 d96:	26 9f       	mul	r18, r22
 d98:	11 24       	eor	r1, r1
 d9a:	30 19       	sub	r19, r0
 d9c:	30 5d       	subi	r19, 0xD0	; 208
 d9e:	31 93       	st	Z+, r19
 da0:	de f6       	brtc	.-74     	; 0xd58 <__ultoa_invert+0xe>
 da2:	cf 01       	movw	r24, r30
 da4:	08 95       	ret
 da6:	46 2f       	mov	r20, r22
 da8:	47 70       	andi	r20, 0x07	; 7
 daa:	40 5d       	subi	r20, 0xD0	; 208
 dac:	41 93       	st	Z+, r20
 dae:	b3 e0       	ldi	r27, 0x03	; 3
 db0:	0f d0       	rcall	.+30     	; 0xdd0 <__ultoa_invert+0x86>
 db2:	c9 f7       	brne	.-14     	; 0xda6 <__ultoa_invert+0x5c>
 db4:	f6 cf       	rjmp	.-20     	; 0xda2 <__ultoa_invert+0x58>
 db6:	46 2f       	mov	r20, r22
 db8:	4f 70       	andi	r20, 0x0F	; 15
 dba:	40 5d       	subi	r20, 0xD0	; 208
 dbc:	4a 33       	cpi	r20, 0x3A	; 58
 dbe:	18 f0       	brcs	.+6      	; 0xdc6 <__ultoa_invert+0x7c>
 dc0:	49 5d       	subi	r20, 0xD9	; 217
 dc2:	31 fd       	sbrc	r19, 1
 dc4:	40 52       	subi	r20, 0x20	; 32
 dc6:	41 93       	st	Z+, r20
 dc8:	02 d0       	rcall	.+4      	; 0xdce <__ultoa_invert+0x84>
 dca:	a9 f7       	brne	.-22     	; 0xdb6 <__ultoa_invert+0x6c>
 dcc:	ea cf       	rjmp	.-44     	; 0xda2 <__ultoa_invert+0x58>
 dce:	b4 e0       	ldi	r27, 0x04	; 4
 dd0:	a6 95       	lsr	r26
 dd2:	97 95       	ror	r25
 dd4:	87 95       	ror	r24
 dd6:	77 95       	ror	r23
 dd8:	67 95       	ror	r22
 dda:	ba 95       	dec	r27
 ddc:	c9 f7       	brne	.-14     	; 0xdd0 <__ultoa_invert+0x86>
 dde:	00 97       	sbiw	r24, 0x00	; 0
 de0:	61 05       	cpc	r22, r1
 de2:	71 05       	cpc	r23, r1
 de4:	08 95       	ret
 de6:	9b 01       	movw	r18, r22
 de8:	ac 01       	movw	r20, r24
 dea:	0a 2e       	mov	r0, r26
 dec:	06 94       	lsr	r0
 dee:	57 95       	ror	r21
 df0:	47 95       	ror	r20
 df2:	37 95       	ror	r19
 df4:	27 95       	ror	r18
 df6:	ba 95       	dec	r27
 df8:	c9 f7       	brne	.-14     	; 0xdec <__ultoa_invert+0xa2>
 dfa:	62 0f       	add	r22, r18
 dfc:	73 1f       	adc	r23, r19
 dfe:	84 1f       	adc	r24, r20
 e00:	95 1f       	adc	r25, r21
 e02:	a0 1d       	adc	r26, r0
 e04:	08 95       	ret

00000e06 <__prologue_saves__>:
 e06:	2f 92       	push	r2
 e08:	3f 92       	push	r3
 e0a:	4f 92       	push	r4
 e0c:	5f 92       	push	r5
 e0e:	6f 92       	push	r6
 e10:	7f 92       	push	r7
 e12:	8f 92       	push	r8
 e14:	9f 92       	push	r9
 e16:	af 92       	push	r10
 e18:	bf 92       	push	r11
 e1a:	cf 92       	push	r12
 e1c:	df 92       	push	r13
 e1e:	ef 92       	push	r14
 e20:	ff 92       	push	r15
 e22:	0f 93       	push	r16
 e24:	1f 93       	push	r17
 e26:	cf 93       	push	r28
 e28:	df 93       	push	r29
 e2a:	cd b7       	in	r28, 0x3d	; 61
 e2c:	de b7       	in	r29, 0x3e	; 62
 e2e:	ca 1b       	sub	r28, r26
 e30:	db 0b       	sbc	r29, r27
 e32:	0f b6       	in	r0, 0x3f	; 63
 e34:	f8 94       	cli
 e36:	de bf       	out	0x3e, r29	; 62
 e38:	0f be       	out	0x3f, r0	; 63
 e3a:	cd bf       	out	0x3d, r28	; 61
 e3c:	09 94       	ijmp

00000e3e <__epilogue_restores__>:
 e3e:	2a 88       	ldd	r2, Y+18	; 0x12
 e40:	39 88       	ldd	r3, Y+17	; 0x11
 e42:	48 88       	ldd	r4, Y+16	; 0x10
 e44:	5f 84       	ldd	r5, Y+15	; 0x0f
 e46:	6e 84       	ldd	r6, Y+14	; 0x0e
 e48:	7d 84       	ldd	r7, Y+13	; 0x0d
 e4a:	8c 84       	ldd	r8, Y+12	; 0x0c
 e4c:	9b 84       	ldd	r9, Y+11	; 0x0b
 e4e:	aa 84       	ldd	r10, Y+10	; 0x0a
 e50:	b9 84       	ldd	r11, Y+9	; 0x09
 e52:	c8 84       	ldd	r12, Y+8	; 0x08
 e54:	df 80       	ldd	r13, Y+7	; 0x07
 e56:	ee 80       	ldd	r14, Y+6	; 0x06
 e58:	fd 80       	ldd	r15, Y+5	; 0x05
 e5a:	0c 81       	ldd	r16, Y+4	; 0x04
 e5c:	1b 81       	ldd	r17, Y+3	; 0x03
 e5e:	aa 81       	ldd	r26, Y+2	; 0x02
 e60:	b9 81       	ldd	r27, Y+1	; 0x01
 e62:	ce 0f       	add	r28, r30
 e64:	d1 1d       	adc	r29, r1
 e66:	0f b6       	in	r0, 0x3f	; 63
 e68:	f8 94       	cli
 e6a:	de bf       	out	0x3e, r29	; 62
 e6c:	0f be       	out	0x3f, r0	; 63
 e6e:	cd bf       	out	0x3d, r28	; 61
 e70:	ed 01       	movw	r28, r26
 e72:	08 95       	ret

00000e74 <_exit>:
 e74:	f8 94       	cli

00000e76 <__stop_program>:
 e76:	ff cf       	rjmp	.-2      	; 0xe76 <__stop_program>
